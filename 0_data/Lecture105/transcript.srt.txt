1
00:18:51,290 --> 00:18:53,350
you

2
00:20:04,740 --> 00:20:06,300
and the main idea in these sorts of

3
00:20:06,300 --> 00:20:08,370
algorithms is to maintain a perrito

4
00:20:08,370 --> 00:20:11,610
front of non dominated solutions so for

5
00:20:11,610 --> 00:20:15,840
example a is better than B only if a it

6
00:20:15,840 --> 00:20:17,070
scores better than B on all the

7
00:20:17,070 --> 00:20:19,200
different objectives and so this is kind

8
00:20:19,200 --> 00:20:20,610
of another interesting possibility

9
00:20:20,610 --> 00:20:21,900
enable by maintaining a population that

10
00:20:21,900 --> 00:20:23,280
you kind of have this population that

11
00:20:23,280 --> 00:20:28,350
spreads across this front but although

12
00:20:28,350 --> 00:20:30,120
that's really interesting there's some

13
00:20:30,120 --> 00:20:32,490
problems with combining novelty and the

14
00:20:32,490 --> 00:20:34,560
pressure achieve in this way which you

15
00:20:34,560 --> 00:20:35,700
might consider there's some sort of

16
00:20:35,700 --> 00:20:37,890
global competition in this in the system

17
00:20:37,890 --> 00:20:40,830
that no matter how novel you are on the

18
00:20:40,830 --> 00:20:42,270
one side on the other side of the

19
00:20:42,270 --> 00:20:43,980
predefined you're always going to push

20
00:20:43,980 --> 00:20:45,660
on the highest objective scores which

21
00:20:45,660 --> 00:20:47,340
could be pushing you into this deceptive

22
00:20:47,340 --> 00:20:49,640
regime

23
00:21:19,280 --> 00:21:21,670
then a population

24
00:21:21,670 --> 00:21:24,160
could help us to instantiate sometimes

25
00:21:24,160 --> 00:21:25,150
we care about is finding the best

26
00:21:25,150 --> 00:21:26,920
possible example of each achievable

27
00:21:26,920 --> 00:21:28,270
behavior we're not looking for just the

28
00:21:28,270 --> 00:21:31,980
sole optimal thing and this allows us to

29
00:21:31,980 --> 00:21:34,030
so one thing this could it could enable

30
00:21:34,030 --> 00:21:36,040
is to build a replica are of different

31
00:21:36,040 --> 00:21:37,660
ways to solve a problem so it's a

32
00:21:37,660 --> 00:21:39,100
different kind of search problem it

33
00:21:39,100 --> 00:21:40,840
could highlight for example a wide range

34
00:21:40,840 --> 00:21:42,460
of possible designs that the designer

35
00:21:42,460 --> 00:21:44,020
could later choose from it could enable

36
00:21:44,020 --> 00:21:45,910
a robot to adapt new circumstances Jeff

37
00:21:45,910 --> 00:21:47,680
we'll talk about that later or can

38
00:21:47,680 --> 00:21:49,300
circumvent its deception like we were

39
00:21:49,300 --> 00:21:50,440
talking about and originally but I could

40
00:21:50,440 --> 00:21:52,000
be creating an implicit curriculum where

41
00:21:52,000 --> 00:21:54,070
solutions in one what the simplest kinds

42
00:21:54,070 --> 00:21:55,390
of solutions could lead to more

43
00:21:55,390 --> 00:21:56,680
complicated ones and we'll talk about

44
00:21:56,680 --> 00:22:00,820
that later as well so sometimes the

45
00:22:00,820 --> 00:22:01,900
subject of performance now is not the

46
00:22:01,900 --> 00:22:03,460
most important factor so that's kind of

47
00:22:03,460 --> 00:22:04,990
maybe a little bit heretical to say but

48
00:22:04,990 --> 00:22:06,850
might as search designers might actually

49
00:22:06,850 --> 00:22:08,530
have other aims for our search we might

50
00:22:08,530 --> 00:22:09,850
want to illuminate this face of diverse

51
00:22:09,850 --> 00:22:12,040
possible solutions and sometimes

52
00:22:12,040 --> 00:22:13,600
diversity and how a problem is solved

53
00:22:13,600 --> 00:22:15,400
can be more important than finding only

54
00:22:15,400 --> 00:22:16,960
the single most efficient solutions so

55
00:22:16,960 --> 00:22:18,400
going to this biological example

56
00:22:18,400 --> 00:22:21,010
bacteria reproduced in 20 minutes bears

57
00:22:21,010 --> 00:22:23,380
in three years so if they were compared

58
00:22:23,380 --> 00:22:25,360
globally they would look sort of really

59
00:22:25,360 --> 00:22:27,340
unbalanced but we maybe care about both

60
00:22:27,340 --> 00:22:28,720
of those for their own sake and actually

61
00:22:28,720 --> 00:22:30,610
from human if we might find bears more

62
00:22:30,610 --> 00:22:34,150
interesting so to make this point in

63
00:22:34,150 --> 00:22:35,710
another sort of thought experiment

64
00:22:35,710 --> 00:22:37,930
domain we can consider a domain of

65
00:22:37,930 --> 00:22:40,330
what's called virtual creatures and here

66
00:22:40,330 --> 00:22:42,010
the idea is to optimize both the

67
00:22:42,010 --> 00:22:43,840
morphology and the controller of a

68
00:22:43,840 --> 00:22:45,490
virtual robot so not only what the robot

69
00:22:45,490 --> 00:22:48,880
does but the structure of it which is an

70
00:22:48,880 --> 00:22:50,800
interesting kind of search and we could

71
00:22:50,800 --> 00:22:52,210
from a cutey perspective the quality of

72
00:22:52,210 --> 00:22:54,520
versity perspective we could ask what if

73
00:22:54,520 --> 00:22:56,440
we wanted to have our population span

74
00:22:56,440 --> 00:22:58,560
the best possible locomotion strategies

75
00:22:58,560 --> 00:23:01,030
given all areas of morphology space to

76
00:23:01,030 --> 00:23:05,280
see for example how a small high mass

77
00:23:05,280 --> 00:23:07,870
robot was able to locate versus a very

78
00:23:07,870 --> 00:23:10,630
tall low mass robot and this leads to

79
00:23:10,630 --> 00:23:13,090
the idea of not only search local

80
00:23:13,090 --> 00:23:16,060
competition and so here we'll be talking

81
00:23:16,060 --> 00:23:17,470
about diversity in the space and

82
00:23:17,470 --> 00:23:20,020
morphologies and performance as terms of

83
00:23:20,020 --> 00:23:21,880
the ability to locomote just as a kind

84
00:23:21,880 --> 00:23:22,810
of proxy for things we'll be talking

85
00:23:22,810 --> 00:23:25,360
about later so in global competition

86
00:23:25,360 --> 00:23:27,610
which is the idea that we start out with

87
00:23:27,610 --> 00:23:29,740
here with its pre o front we'll just use

88
00:23:29,740 --> 00:23:31,570
absolute fitness absolute objective

89
00:23:31,570 --> 00:23:34,930
scores for these different locomoting

90
00:23:34,930 --> 00:23:35,660
robots

91
00:23:35,660 --> 00:23:37,160
and they'll compete globally on this

92
00:23:37,160 --> 00:23:38,330
absolute performance measure and we

93
00:23:38,330 --> 00:23:40,190
think that we'll probably concentrate

94
00:23:40,190 --> 00:23:42,980
resources on just the best Nicias like

95
00:23:42,980 --> 00:23:47,480
the the cheetah like robots for example

96
00:23:47,480 --> 00:23:49,549
but if we use instead a local

97
00:23:49,549 --> 00:23:51,470
competition objective objective where we

98
00:23:51,470 --> 00:23:56,090
we are rewarding individuals and Nicias

99
00:23:56,090 --> 00:23:57,350
and I say Nisshin basically means sort

100
00:23:57,350 --> 00:23:59,660
of like a way of life or our dial of

101
00:23:59,660 --> 00:24:01,940
solution they're going to be explored

102
00:24:01,940 --> 00:24:03,200
relative to their local capacity

103
00:24:03,200 --> 00:24:04,490
performance so we'll see the best

104
00:24:04,490 --> 00:24:05,809
version of a bacteria the best version

105
00:24:05,809 --> 00:24:07,580
of bear and we do that by just counting

106
00:24:07,580 --> 00:24:09,080
how many of your morphological nearest

107
00:24:09,080 --> 00:24:11,840
neighbors you got perform so basically

108
00:24:11,840 --> 00:24:13,340
this involves just revisiting that

109
00:24:13,340 --> 00:24:14,900
previous graph where we just have this

110
00:24:14,900 --> 00:24:16,580
pre doe based search and we have local

111
00:24:16,580 --> 00:24:18,710
competition on the on the XS now instead

112
00:24:18,710 --> 00:24:20,750
of a global competition score and so if

113
00:24:20,750 --> 00:24:23,260
we run the algorithm what we get is

114
00:24:23,260 --> 00:24:25,700
novelty driven search we'll just kind of

115
00:24:25,700 --> 00:24:29,870
find here darker darker individuals are

116
00:24:29,870 --> 00:24:32,000
higher performing and lighter

117
00:24:32,000 --> 00:24:33,409
individuals are serve worse performing

118
00:24:33,409 --> 00:24:34,460
and these dots are in the morphology

119
00:24:34,460 --> 00:24:36,710
space the basic point here is that nolle

120
00:24:36,710 --> 00:24:39,350
search finds really diverse morphologies

121
00:24:39,350 --> 00:24:40,610
they don't do anything the objective

122
00:24:40,610 --> 00:24:43,010
based search finds very concentrated

123
00:24:43,010 --> 00:24:44,990
pockets of high-performing things in the

124
00:24:44,990 --> 00:24:46,820
makita space global competition kind of

125
00:24:46,820 --> 00:24:48,409
spends things out a little bit but local

126
00:24:48,409 --> 00:24:50,630
competition finds both diverse and

127
00:24:50,630 --> 00:24:54,200
high-performing behaviors throughout the

128
00:24:54,200 --> 00:24:57,500
space and to give you a sense of what

129
00:24:57,500 --> 00:24:58,940
this looks like in practice this is from

130
00:24:58,940 --> 00:25:00,080
one run of evolution where the

131
00:25:00,080 --> 00:25:01,820
population is expanding across all these

132
00:25:01,820 --> 00:25:03,860
different kinds of solutions you get

133
00:25:03,860 --> 00:25:07,580
sort of creatures that look maybe sort

134
00:25:07,580 --> 00:25:10,340
of like you know sushi as you might

135
00:25:10,340 --> 00:25:11,750
expect things that are kind of

136
00:25:11,750 --> 00:25:13,580
quadrupled like or that lumber along in

137
00:25:13,580 --> 00:25:15,200
the ground that have appropriate amount

138
00:25:15,200 --> 00:25:16,850
of mass but we also see kind of

139
00:25:16,850 --> 00:25:18,650
interesting solutions to other niches

140
00:25:18,650 --> 00:25:20,630
that it would be very hard to explore

141
00:25:20,630 --> 00:25:23,030
otherwise where you are at a

142
00:25:23,030 --> 00:25:24,890
disadvantage we were very very small for

143
00:25:24,890 --> 00:25:26,570
example or you're very big and lumbering

144
00:25:26,570 --> 00:25:28,100
and high mass need to balance in a sort

145
00:25:28,100 --> 00:25:29,990
of a delicate way or you're at all being

146
00:25:29,990 --> 00:25:32,480
pull and you're just very delicately

147
00:25:32,480 --> 00:25:34,789
moving but it could be interesting to

148
00:25:34,789 --> 00:25:37,630
see these solutions from this sort of

149
00:25:37,630 --> 00:25:40,309
quality diversity perspective so that

150
00:25:40,309 --> 00:25:43,490
ends this part and now Jeff will be kind

151
00:25:43,490 --> 00:25:45,080
of elaborating a lot more on these ideas

152
00:25:45,080 --> 00:25:47,950
of quality diversity

153
00:25:48,070 --> 00:25:58,820
yeah Thank You Joel alright so as Joel's

154
00:25:58,820 --> 00:26:00,200
been talking about it I think this is

155
00:26:00,200 --> 00:26:01,370
kind of a theme that we've been noticing

156
00:26:01,370 --> 00:26:02,930
in machine learning is that machine

157
00:26:02,930 --> 00:26:04,550
learning algorithms tend not to produce

158
00:26:04,550 --> 00:26:06,830
a lot of diversity so you launch one run

159
00:26:06,830 --> 00:26:08,809
of say deep reinforcement learning and

160
00:26:08,809 --> 00:26:10,430
you don't get a lot of diverse solutions

161
00:26:10,430 --> 00:26:12,740
you might say well I see things like

162
00:26:12,740 --> 00:26:14,030
this where I see like four different

163
00:26:14,030 --> 00:26:15,860
styles and a lot of blog posts and

164
00:26:15,860 --> 00:26:17,870
tweets and things like that and the way

165
00:26:17,870 --> 00:26:19,250
that this diversity is coming about is

166
00:26:19,250 --> 00:26:20,900
that we're doing different entire runs

167
00:26:20,900 --> 00:26:22,280
of the algorithm with different initial

168
00:26:22,280 --> 00:26:24,170
random initializations that were just

169
00:26:24,170 --> 00:26:26,000
hoping we get this diversity just not a

170
00:26:26,000 --> 00:26:27,620
very principled way if you want to like

171
00:26:27,620 --> 00:26:29,090
generate a massive amount of diversity

172
00:26:29,090 --> 00:26:30,950
just keep doing inefficient runs over

173
00:26:30,950 --> 00:26:32,510
and over again now you might think that

174
00:26:32,510 --> 00:26:34,220
population based methods in general

175
00:26:34,220 --> 00:26:35,390
would give you that diversity that

176
00:26:35,390 --> 00:26:37,880
should be the razón d'etre but actually

177
00:26:37,880 --> 00:26:39,679
it's not true so here's a video that my

178
00:26:39,679 --> 00:26:41,000
colleagues and I produced a few years

179
00:26:41,000 --> 00:26:43,670
back we gave an optimization algorithm

180
00:26:43,670 --> 00:26:45,500
these four building blocks for a soft

181
00:26:45,500 --> 00:26:46,970
robotics problem the goal was to have

182
00:26:46,970 --> 00:26:49,010
the robot move as fast as possible and

183
00:26:49,010 --> 00:26:50,570
we produce this really nice video you

184
00:26:50,570 --> 00:26:52,660
see this parade of like very different

185
00:26:52,660 --> 00:26:54,830
quirky solutions that are also they're

186
00:26:54,830 --> 00:26:56,840
also kind of fun and high-quality in

187
00:26:56,840 --> 00:26:58,400
different ways but again we use the same

188
00:26:58,400 --> 00:27:00,230
trick that you see from deep RL which is

189
00:27:00,230 --> 00:27:02,150
that we have different entire runs each

190
00:27:02,150 --> 00:27:03,980
of which produces one of these but

191
00:27:03,980 --> 00:27:05,390
within this population they're all

192
00:27:05,390 --> 00:27:06,559
pretty much converged on one of these

193
00:27:06,559 --> 00:27:08,750
solutions so what we want instead are

194
00:27:08,750 --> 00:27:10,130
what joel was mentioning which are these

195
00:27:10,130 --> 00:27:11,690
quality diversity algorithms which you

196
00:27:11,690 --> 00:27:13,370
run them and they go out and they find

197
00:27:13,370 --> 00:27:15,320
the entire set of diverse

198
00:27:15,320 --> 00:27:17,420
high-performing ways to go about solving

199
00:27:17,420 --> 00:27:19,880
this entire class of problems and if we

200
00:27:19,880 --> 00:27:21,980
could get that then we might have be

201
00:27:21,980 --> 00:27:23,150
able to do a lot of interesting things

202
00:27:23,150 --> 00:27:24,050
that I'm going to tell you about

203
00:27:24,050 --> 00:27:25,910
so Joel already told you about the first

204
00:27:25,910 --> 00:27:27,740
one of those algorithms and SLC

205
00:27:27,740 --> 00:27:29,510
and I'm going to tell you about a second

206
00:27:29,510 --> 00:27:31,670
major family that was Co invented by my

207
00:27:31,670 --> 00:27:33,110
long term friend and colleague John

208
00:27:33,110 --> 00:27:37,220
Baptiste Marais and myself in 2015 and

209
00:27:37,220 --> 00:27:39,830
this is called map elites and here's the

210
00:27:39,830 --> 00:27:42,410
algorithm it's the acronym is a bit of a

211
00:27:42,410 --> 00:27:43,490
mouthful it sends for the

212
00:27:43,490 --> 00:27:45,740
multi-dimensional archive of phenotypic

213
00:27:45,740 --> 00:27:48,170
elites but it's quite simple what you do

214
00:27:48,170 --> 00:27:49,970
is you start off by picking them

215
00:27:49,970 --> 00:27:51,679
dimensions of variation that you care

216
00:27:51,679 --> 00:27:53,179
about later I'll show you that you can

217
00:27:53,179 --> 00:27:55,520
learn these automatically as well for

218
00:27:55,520 --> 00:27:56,840
example if you wanted a search in the

219
00:27:56,840 --> 00:27:58,730
space of robots you might want robots

220
00:27:58,730 --> 00:28:00,240
with different heights and we

221
00:28:00,240 --> 00:28:02,309
and then all you do is you discretize

222
00:28:02,309 --> 00:28:04,110
that space and you say we're gonna look

223
00:28:04,110 --> 00:28:06,150
for the highest-performing thing and

224
00:28:06,150 --> 00:28:08,040
every one of those cells so the way that

225
00:28:08,040 --> 00:28:09,510
you can do that is you can start with a

226
00:28:09,510 --> 00:28:12,300
random organism you can evaluate it and

227
00:28:12,300 --> 00:28:14,100
then you can get both its performance

228
00:28:14,100 --> 00:28:16,830
which in another language is fitness and

229
00:28:16,830 --> 00:28:18,540
you can get its phenotypic properties if

230
00:28:18,540 --> 00:28:20,100
I tighten weight and you just put that

231
00:28:20,100 --> 00:28:22,350
creature or that solution into that area

232
00:28:22,350 --> 00:28:24,390
and the bin then you grab something out

233
00:28:24,390 --> 00:28:26,550
of this archive here and you randomly

234
00:28:26,550 --> 00:28:29,070
perturb it and you figure out its new

235
00:28:29,070 --> 00:28:31,559
phenotypic problem properties or its

236
00:28:31,559 --> 00:28:33,510
characteristics for exists in this case

237
00:28:33,510 --> 00:28:35,010
its height and its weight and its

238
00:28:35,010 --> 00:28:36,840
performance which is shown here by color

239
00:28:36,840 --> 00:28:38,280
and you put it in that cell in the grid

240
00:28:38,280 --> 00:28:40,020
and then you can grab another one out of

241
00:28:40,020 --> 00:28:42,090
the archive you can perturb it again and

242
00:28:42,090 --> 00:28:45,660
maybe if it's better than the current

243
00:28:45,660 --> 00:28:48,000
champion in a Cell you swap it in and

244
00:28:48,000 --> 00:28:50,160
that's it so you just constantly are

245
00:28:50,160 --> 00:28:51,809
looking for the best thing you found so

246
00:28:51,809 --> 00:28:54,900
far and each one of these cells in this

247
00:28:54,900 --> 00:28:57,840
map so what's nice about this algorithm

248
00:28:57,840 --> 00:28:59,070
is as opposed to doing what most

249
00:28:59,070 --> 00:29:01,110
optimization algorithms do which is to

250
00:29:01,110 --> 00:29:03,300
return a single highly high-performing

251
00:29:03,300 --> 00:29:05,610
point this thing should go out and it

252
00:29:05,610 --> 00:29:07,559
should show you the entire surface of

253
00:29:07,559 --> 00:29:09,600
possibilities within your space that I

254
00:29:09,600 --> 00:29:11,700
can do well here but not here for

255
00:29:11,700 --> 00:29:13,559
example there's a peak or a mode of

256
00:29:13,559 --> 00:29:15,570
performance high performance over here

257
00:29:15,570 --> 00:29:17,580
that I can do well with like tall skinny

258
00:29:17,580 --> 00:29:19,920
robots or tall fat robots but not with

259
00:29:19,920 --> 00:29:21,179
something that's kind of an average of

260
00:29:21,179 --> 00:29:24,210
the two so we actually ran this problem

261
00:29:24,210 --> 00:29:25,890
on that soft robotics problem that I

262
00:29:25,890 --> 00:29:27,929
showed you a video of and we tried to

263
00:29:27,929 --> 00:29:29,580
the dimensions we cared about with a

264
00:29:29,580 --> 00:29:32,070
number of voxels total in the robot so

265
00:29:32,070 --> 00:29:33,480
how big it is and also the percent of

266
00:29:33,480 --> 00:29:35,730
this dark blue bone material because

267
00:29:35,730 --> 00:29:37,050
historically it wasn't using that

268
00:29:37,050 --> 00:29:38,850
material and if you look at clacked

269
00:29:38,850 --> 00:29:40,559
classic optimization which in this case

270
00:29:40,559 --> 00:29:42,270
is just a black box top to evolutionary

271
00:29:42,270 --> 00:29:44,490
algorithm you can see it doesn't cover

272
00:29:44,490 --> 00:29:46,890
much of the space of possible types of

273
00:29:46,890 --> 00:29:48,450
solutions and most of the performance is

274
00:29:48,450 --> 00:29:50,790
very low if you add in diversity in the

275
00:29:50,790 --> 00:29:52,380
form of that multi-objective flavor

276
00:29:52,380 --> 00:29:53,880
which is a kind of a combination of both

277
00:29:53,880 --> 00:29:56,280
diversity and performance you can see

278
00:29:56,280 --> 00:29:57,780
that the performance is higher I don't

279
00:29:57,780 --> 00:29:59,309
if you can see that's yellow there but

280
00:29:59,309 --> 00:30:00,720
it still has barely scratched the

281
00:30:00,720 --> 00:30:02,370
surface on what's possible in this space

282
00:30:02,370 --> 00:30:05,790
in dramatic contrast map elites does

283
00:30:05,790 --> 00:30:07,920
this with the exact same amount of

284
00:30:07,920 --> 00:30:10,470
computation it fans out and tells you

285
00:30:10,470 --> 00:30:11,880
everything that's possible in this

286
00:30:11,880 --> 00:30:12,210
search

287
00:30:12,210 --> 00:30:14,190
it illuminates the fact that you have a

288
00:30:14,190 --> 00:30:16,440
mode here and a mode here that you can't

289
00:30:16,440 --> 00:30:18,720
do very well up here what's also

290
00:30:18,720 --> 00:30:20,550
interesting in this kind of algorithm is

291
00:30:20,550 --> 00:30:22,170
that if you look through the actual

292
00:30:22,170 --> 00:30:24,090
solutions distance in the map is

293
00:30:24,090 --> 00:30:26,370
informative because nearby solutions are

294
00:30:26,370 --> 00:30:28,800
of similar type and faraway solutions

295
00:30:28,800 --> 00:30:31,200
are of dissimilar type so for example if

296
00:30:31,200 --> 00:30:33,060
you go right here you'll see a solution

297
00:30:33,060 --> 00:30:35,340
which is kind of this this motif that

298
00:30:35,340 --> 00:30:37,260
has legs on the front and back and kind

299
00:30:37,260 --> 00:30:39,120
of a back in the middle and as you sweep

300
00:30:39,120 --> 00:30:41,340
up the dimension of the amount of dark

301
00:30:41,340 --> 00:30:43,800
blue bone material it kind of goes from

302
00:30:43,800 --> 00:30:46,560
a mostly non boney back to a very very

303
00:30:46,560 --> 00:30:48,600
bony shell like a tortoise but these

304
00:30:48,600 --> 00:30:50,190
things all kind of look like relatives

305
00:30:50,190 --> 00:30:51,750
of each other and you can go down here

306
00:30:51,750 --> 00:30:53,340
and see variations on a theme or you can

307
00:30:53,340 --> 00:30:54,990
go up here and see variations on a theme

308
00:30:54,990 --> 00:30:57,150
so these all things look related to each

309
00:30:57,150 --> 00:30:59,040
other because of that distance and

310
00:30:59,040 --> 00:31:00,030
that's going to become important later

311
00:31:00,030 --> 00:31:02,030
on and we can harness that property

312
00:31:02,030 --> 00:31:03,780
another nice property of these

313
00:31:03,780 --> 00:31:04,860
algorithms they tend to be lower

314
00:31:04,860 --> 00:31:06,630
variance so different runs of

315
00:31:06,630 --> 00:31:08,250
traditional optimization as we saw with

316
00:31:08,250 --> 00:31:10,440
deep RL and population-based search

317
00:31:10,440 --> 00:31:11,850
produce wildly different solutions

318
00:31:11,850 --> 00:31:13,500
whereas different runs of map elites

319
00:31:13,500 --> 00:31:15,060
kind of tend to repeatedly tell you

320
00:31:15,060 --> 00:31:17,280
what's possible not exactly the same but

321
00:31:17,280 --> 00:31:20,400
pretty consistently also of interest is

322
00:31:20,400 --> 00:31:22,170
not only this is a different problem

323
00:31:22,170 --> 00:31:24,030
here but it doesn't really matter what

324
00:31:24,030 --> 00:31:25,590
is also interesting is not only well map

325
00:31:25,590 --> 00:31:27,630
leads fan out and give you more points

326
00:31:27,630 --> 00:31:29,880
and higher quality points across the map

327
00:31:29,880 --> 00:31:32,190
but if you just look for the single best

328
00:31:32,190 --> 00:31:34,320
point returned by the algorithm map

329
00:31:34,320 --> 00:31:36,150
police will often give it to you so here

330
00:31:36,150 --> 00:31:38,220
it's being compared against NS LC and

331
00:31:38,220 --> 00:31:41,000
traditional evolutionary algorithms and

332
00:31:41,000 --> 00:31:43,200
I'm sorry I just realized you can't see

333
00:31:43,200 --> 00:31:47,760
my pointer okay and the the nice thing

334
00:31:47,760 --> 00:31:49,680
about this is that it's producing an

335
00:31:49,680 --> 00:31:51,390
actual better single point which is kind

336
00:31:51,390 --> 00:31:52,650
of counterintuitive because traditional

337
00:31:52,650 --> 00:31:54,600
optimizations only job is to look for

338
00:31:54,600 --> 00:31:56,790
one high quality point but map elites is

339
00:31:56,790 --> 00:31:58,620
producing a better high quality point so

340
00:31:58,620 --> 00:32:00,570
why is that well I think the answer gets

341
00:32:00,570 --> 00:32:02,160
back to this issue of avoiding Local

342
00:32:02,160 --> 00:32:04,590
Option optima and avoiding deception and

343
00:32:04,590 --> 00:32:06,720
one way the quality diversity algorithms

344
00:32:06,720 --> 00:32:08,280
do that is via what we call goal

345
00:32:08,280 --> 00:32:09,870
switching so imagine if you're a

346
00:32:09,870 --> 00:32:12,480
scientist and you're trying to say get

347
00:32:12,480 --> 00:32:14,760
an AI cub or a robot to walk that's what

348
00:32:14,760 --> 00:32:16,170
you want in your head and you start an

349
00:32:16,170 --> 00:32:17,910
optimization process to say move as fast

350
00:32:17,910 --> 00:32:19,590
as possible and all of a sudden what you

351
00:32:19,590 --> 00:32:21,930
see is a crawling robot well you could

352
00:32:21,930 --> 00:32:23,490
say that's a really bad idea that's the

353
00:32:23,490 --> 00:32:24,960
dead end I don't want to do that you

354
00:32:24,960 --> 00:32:26,119
know I mean so you change your

355
00:32:26,119 --> 00:32:27,259
word function to make sure that its

356
00:32:27,259 --> 00:32:28,879
knees aren't touching the ground or you

357
00:32:28,879 --> 00:32:30,289
can do something totally different and

358
00:32:30,289 --> 00:32:32,389
you could say I should catch ants on a

359
00:32:32,389 --> 00:32:34,009
wing here that's a nice serendipitous

360
00:32:34,009 --> 00:32:35,929
discovery I'm going to say hey this is

361
00:32:35,929 --> 00:32:37,789
great I have a crawling robot it's doing

362
00:32:37,789 --> 00:32:38,329
pretty well

363
00:32:38,329 --> 00:32:40,399
I'm gonna now fork my optimisation

364
00:32:40,399 --> 00:32:42,619
process and simultaneously try to get

365
00:32:42,619 --> 00:32:44,059
better and better crawling robots and

366
00:32:44,059 --> 00:32:45,439
maybe continue on with my original

367
00:32:45,439 --> 00:32:46,939
reward function which was some sort of

368
00:32:46,939 --> 00:32:48,829
walking robot and maybe you get a robot

369
00:32:48,829 --> 00:32:50,569
that balances and you say that's great -

370
00:32:50,569 --> 00:32:52,189
I'll add that as an additional objective

371
00:32:52,189 --> 00:32:54,349
and what's probably going to happen that

372
00:32:54,349 --> 00:32:55,609
we see over and over and over again is

373
00:32:55,609 --> 00:32:57,679
eventually one of these strange things

374
00:32:57,679 --> 00:32:59,689
like crawling or balancing ends up being

375
00:32:59,689 --> 00:33:00,979
a really good stepping stone to

376
00:33:00,979 --> 00:33:03,049
ultimately getting a nice walking robot

377
00:33:03,049 --> 00:33:04,489
and so you want to keep these

378
00:33:04,489 --> 00:33:06,949
innovations as they come so this is all

379
00:33:06,949 --> 00:33:08,269
laid out really well in the book that

380
00:33:08,269 --> 00:33:10,729
Joel and Ken wrote why greatness cannot

381
00:33:10,729 --> 00:33:12,019
be planned and if you look to the

382
00:33:12,019 --> 00:33:13,729
history of science and technological

383
00:33:13,729 --> 00:33:15,589
innovation what you find is you almost

384
00:33:15,589 --> 00:33:18,289
never get an intuitive straight path to

385
00:33:18,289 --> 00:33:20,149
an ambitious goal if you want to make

386
00:33:20,149 --> 00:33:22,219
microwaves it turns out that you had to

387
00:33:22,219 --> 00:33:23,929
be working on radar systems because

388
00:33:23,929 --> 00:33:25,489
that's where they came from if you want

389
00:33:25,489 --> 00:33:26,659
to build computers you have to be

390
00:33:26,659 --> 00:33:28,039
working on electricity and vacuum

391
00:33:28,039 --> 00:33:30,169
clothes and if you vacuum tubes and if

392
00:33:30,169 --> 00:33:31,669
you want to produce clean energy you

393
00:33:31,669 --> 00:33:34,069
don't try to make burning of coal and

394
00:33:34,069 --> 00:33:36,229
oil more like less and less polluting

395
00:33:36,229 --> 00:33:38,149
instead you fund a physicist to think

396
00:33:38,149 --> 00:33:39,859
about like light beams chasing with the

397
00:33:39,859 --> 00:33:41,389
speed of light on a train you get

398
00:33:41,389 --> 00:33:43,099
Einstein an equals MC squared and then

399
00:33:43,099 --> 00:33:44,869
you get nuclear power so the general

400
00:33:44,869 --> 00:33:46,849
idea is that we want to kind of capture

401
00:33:46,849 --> 00:33:48,919
serendipity within our algorithms we

402
00:33:48,919 --> 00:33:51,019
want our algorithms to recognize when

403
00:33:51,019 --> 00:33:52,699
something serendipitous and amazing has

404
00:33:52,699 --> 00:33:54,829
happened and let that continue to kind

405
00:33:54,829 --> 00:33:56,779
of do its thing and we did get that too

406
00:33:56,779 --> 00:33:58,309
this notion of goal switching so the

407
00:33:58,309 --> 00:34:00,379
idea is that in this map there's each

408
00:34:00,379 --> 00:34:01,759
one of these cells here is kind of a

409
00:34:01,759 --> 00:34:03,379
different optimization problem we want

410
00:34:03,379 --> 00:34:05,089
you to solve this problem in this way or

411
00:34:05,089 --> 00:34:07,009
that way or this other way and if a

412
00:34:07,009 --> 00:34:08,719
solution in the middle of the map

413
00:34:08,719 --> 00:34:10,909
happens to be like all of a sudden be a

414
00:34:10,909 --> 00:34:12,469
really good solution to a totally

415
00:34:12,469 --> 00:34:13,879
different problem far away in the map

416
00:34:13,879 --> 00:34:15,739
we'd catch that by just put moving that

417
00:34:15,739 --> 00:34:18,349
it's the champion to that to that cell

418
00:34:18,349 --> 00:34:19,998
that problem and it could optimization

419
00:34:19,998 --> 00:34:21,489
can continue to work on that

420
00:34:21,489 --> 00:34:24,289
simultaneously in parallel so if you

421
00:34:24,289 --> 00:34:26,449
look at the end of a map elites run the

422
00:34:26,449 --> 00:34:28,819
final champions we can actually then

423
00:34:28,819 --> 00:34:30,289
look at where did they come from where

424
00:34:30,289 --> 00:34:32,179
were their parents if you will and if

425
00:34:32,179 --> 00:34:33,589
you look at this map what you'll see is

426
00:34:33,589 --> 00:34:35,839
that often let the arrow tells you that

427
00:34:35,839 --> 00:34:37,339
the tip of the arrow is the final

428
00:34:37,339 --> 00:34:37,949
solution

429
00:34:37,949 --> 00:34:39,418
the beginning of the arrow is where it

430
00:34:39,418 --> 00:34:41,639
came from and sometimes it's very nearby

431
00:34:41,639 --> 00:34:43,260
and sometimes it comes from within the

432
00:34:43,260 --> 00:34:45,270
cell but sometimes you make these really

433
00:34:45,270 --> 00:34:46,829
really big leaps so you needed to be

434
00:34:46,829 --> 00:34:48,149
working on this totally different

435
00:34:48,149 --> 00:34:50,099
problem in order to kind of lateral over

436
00:34:50,099 --> 00:34:52,020
and eventually solve this other problem

437
00:34:52,020 --> 00:34:54,510
here is a full lineage you take a final

438
00:34:54,510 --> 00:34:56,460
champion and you trace it all the way

439
00:34:56,460 --> 00:34:57,839
back through time to all of the

440
00:34:57,839 --> 00:34:59,310
different cells that its ancestor

441
00:34:59,310 --> 00:35:00,750
visited and what you see are these

442
00:35:00,750 --> 00:35:02,970
wildly circuitous paths through the

443
00:35:02,970 --> 00:35:05,010
space of Popples the possible solutions

444
00:35:05,010 --> 00:35:06,869
you would never probably have picked

445
00:35:06,869 --> 00:35:09,060
this is the curriculum by which to get

446
00:35:09,060 --> 00:35:10,890
to an actual final point but this

447
00:35:10,890 --> 00:35:12,300
algorithm can do that on its own

448
00:35:12,300 --> 00:35:14,070
automatically so it's really great in

449
00:35:14,070 --> 00:35:15,810
these algorithms this are simultaneously

450
00:35:15,810 --> 00:35:18,510
pursuing many overlapping curricula

451
00:35:18,510 --> 00:35:20,730
there kind of bet hedging you maybe you

452
00:35:20,730 --> 00:35:22,650
should go study algebra and then calc 3

453
00:35:22,650 --> 00:35:24,329
and then linear algebra and then you'll

454
00:35:24,329 --> 00:35:25,320
become a great machine learning

455
00:35:25,320 --> 00:35:26,400
researcher and now you should study

456
00:35:26,400 --> 00:35:28,770
philosophy and like humanities and then

457
00:35:28,770 --> 00:35:30,990
you should study calc 3 you know etc and

458
00:35:30,990 --> 00:35:32,490
you just like trying all these things

459
00:35:32,490 --> 00:35:33,660
and then finally you get geoff hinton

460
00:35:33,660 --> 00:35:35,130
and you declare victory and in hindsight

461
00:35:35,130 --> 00:35:37,050
you go back and trace the way to get

462
00:35:37,050 --> 00:35:40,140
there so another algorithm in which we

463
00:35:40,140 --> 00:35:41,520
study these properties is called

464
00:35:41,520 --> 00:35:43,500
innovation engines and this starts from

465
00:35:43,500 --> 00:35:45,119
the assumption that both natural

466
00:35:45,119 --> 00:35:47,520
evolution and cultural evolution and

467
00:35:47,520 --> 00:35:49,589
quality diversity algorithms are all

468
00:35:49,589 --> 00:35:51,510
innovation engines because they share

469
00:35:51,510 --> 00:35:53,609
this very very simple recipe which is

470
00:35:53,609 --> 00:35:55,530
that you start with a set of things and

471
00:35:55,530 --> 00:35:57,839
then you generate per two permutations

472
00:35:57,839 --> 00:36:00,000
on those things and if those things are

473
00:36:00,000 --> 00:36:01,950
interesting and/or high-performing you

474
00:36:01,950 --> 00:36:03,450
keep them and you add them to your set

475
00:36:03,450 --> 00:36:05,430
and you expand in this ever-growing set

476
00:36:05,430 --> 00:36:07,380
of stepping stones that can lead you

477
00:36:07,380 --> 00:36:09,000
ultimately to really interesting things

478
00:36:09,000 --> 00:36:10,859
so we wanted to try to create one of

479
00:36:10,859 --> 00:36:12,119
these innovation engines and the way

480
00:36:12,119 --> 00:36:14,190
that we did it is that we decided well

481
00:36:14,190 --> 00:36:16,650
so far all of the Kiwi dqd algorithms

482
00:36:16,650 --> 00:36:18,240
that had come before this work all had a

483
00:36:18,240 --> 00:36:20,010
very simple notion of what constituted

484
00:36:20,010 --> 00:36:21,420
being interesting or high-performing

485
00:36:21,420 --> 00:36:24,200
maybe a robot that moves fast or

486
00:36:24,200 --> 00:36:26,670
something very easy to measure in this

487
00:36:26,670 --> 00:36:28,530
case we wanted to say can we have a

488
00:36:28,530 --> 00:36:30,240
measure of interestingness that is more

489
00:36:30,240 --> 00:36:32,040
kind of abstract and hard to quantify so

490
00:36:32,040 --> 00:36:33,270
we wanted to use deep neural networks

491
00:36:33,270 --> 00:36:35,069
and we said we're gonna try to generate

492
00:36:35,069 --> 00:36:36,960
images this was like before Ganz the

493
00:36:36,960 --> 00:36:39,240
Gann craze had really taken off and so

494
00:36:39,240 --> 00:36:40,980
we said we're gonna use a trained deep

495
00:36:40,980 --> 00:36:42,480
neuron that Alex that we're gonna try to

496
00:36:42,480 --> 00:36:44,819
generate an image that lights up each of

497
00:36:44,819 --> 00:36:47,550
the classes in Alex net and so each bin

498
00:36:47,550 --> 00:36:49,950
in mapa leads is one class in alex 10

499
00:36:49,950 --> 00:36:50,730
and if you're the bed

500
00:36:50,730 --> 00:36:53,010
image ever for that class you're the

501
00:36:53,010 --> 00:36:55,200
highest confidence scoring thing for

502
00:36:55,200 --> 00:36:56,400
that class according to Alex net we'd

503
00:36:56,400 --> 00:36:57,720
keep you and then we'll just preserve

504
00:36:57,720 --> 00:36:59,280
these things we also wanted to try this

505
00:36:59,280 --> 00:37:00,660
with these very tiny little networks

506
00:37:00,660 --> 00:37:02,070
that are an interesting encoding called

507
00:37:02,070 --> 00:37:03,630
CPP ends which Ken is going to tell you

508
00:37:03,630 --> 00:37:05,670
about a little bit later and there's

509
00:37:05,670 --> 00:37:07,440
lots of deception and local optima so

510
00:37:07,440 --> 00:37:09,060
what we found in this innovation engine

511
00:37:09,060 --> 00:37:10,829
work is that if you just have one class

512
00:37:10,829 --> 00:37:12,570
like if I picked the watertower class

513
00:37:12,570 --> 00:37:14,190
and I try to optimize one of these

514
00:37:14,190 --> 00:37:15,420
little generator networks to just

515
00:37:15,420 --> 00:37:17,400
produce a really good water tower what I

516
00:37:17,400 --> 00:37:19,050
do is I freak when they get stuck on a

517
00:37:19,050 --> 00:37:20,490
local Optima which is what you see here

518
00:37:20,490 --> 00:37:23,400
in the top row and it gets stuck on one

519
00:37:23,400 --> 00:37:24,900
design and it can't ever get off that

520
00:37:24,900 --> 00:37:26,849
set a local optimum but if you have

521
00:37:26,849 --> 00:37:28,770
thousands a thousand objectives which

522
00:37:28,770 --> 00:37:30,150
are all the classes of image now and you

523
00:37:30,150 --> 00:37:32,310
let things goal switch between these

524
00:37:32,310 --> 00:37:34,290
classes then really interesting things

525
00:37:34,290 --> 00:37:36,329
can happen for example early in this run

526
00:37:36,329 --> 00:37:38,099
it lands on this kind of dome that looks

527
00:37:38,099 --> 00:37:40,290
like the moon and it gets to about 51

528
00:37:40,290 --> 00:37:42,300
percent accuracy according to Alex net

529
00:37:42,300 --> 00:37:44,099
for being a water tower and that is

530
00:37:44,099 --> 00:37:45,750
stuck we actually did a counterfactual

531
00:37:45,750 --> 00:37:47,820
where you just run that individual niche

532
00:37:47,820 --> 00:37:49,260
forever with that solution and it never

533
00:37:49,260 --> 00:37:51,810
leaves that concept but for some other

534
00:37:51,810 --> 00:37:53,460
innovation came from a different class

535
00:37:53,460 --> 00:37:56,220
which just kind of came in and took over

536
00:37:56,220 --> 00:37:58,349
in that niche with and that basically

537
00:37:58,349 --> 00:38:00,030
led to a completely different style of

538
00:38:00,030 --> 00:38:02,609
solution we ultimately got to 98% and in

539
00:38:02,609 --> 00:38:03,750
my opinion looks like a much better

540
00:38:03,750 --> 00:38:05,819
water tower now you can quantify these

541
00:38:05,819 --> 00:38:07,260
effects so if you look if you compare

542
00:38:07,260 --> 00:38:09,300
map elites with just with a thousand

543
00:38:09,300 --> 00:38:11,099
classes versus a whole lot of different

544
00:38:11,099 --> 00:38:12,329
runs with map elites with all the

545
00:38:12,329 --> 00:38:13,619
different classes of imagenet where you

546
00:38:13,619 --> 00:38:15,329
average performance you see this massive

547
00:38:15,329 --> 00:38:17,220
difference in the final performance of

548
00:38:17,220 --> 00:38:19,109
these algorithms and as you change the

549
00:38:19,109 --> 00:38:20,819
number of objectives the more objectives

550
00:38:20,819 --> 00:38:22,050
the better because the more goal

551
00:38:22,050 --> 00:38:23,819
switching you have which you can see on

552
00:38:23,819 --> 00:38:26,550
these slides here now another really

553
00:38:26,550 --> 00:38:28,950
nice thing about these algorithms is

554
00:38:28,950 --> 00:38:30,540
they have what are known as adaptive

555
00:38:30,540 --> 00:38:33,000
radiations so these are really really

556
00:38:33,000 --> 00:38:34,230
important things to have in our

557
00:38:34,230 --> 00:38:35,609
algorithm once you come up with a

558
00:38:35,609 --> 00:38:37,619
fundamental advance whether or not it be

559
00:38:37,619 --> 00:38:40,319
bilateral symmetry or the notion of like

560
00:38:40,319 --> 00:38:42,359
a four-legged body plans or arms and

561
00:38:42,359 --> 00:38:44,700
legs or fingers that central innovation

562
00:38:44,700 --> 00:38:47,280
can fan out and radiate out into all

563
00:38:47,280 --> 00:38:49,200
sorts of different niches or problem

564
00:38:49,200 --> 00:38:51,810
spaces this happens both in natural

565
00:38:51,810 --> 00:38:53,040
biology but it also happens in

566
00:38:53,040 --> 00:38:54,900
technology once we invented the computer

567
00:38:54,900 --> 00:38:56,609
it was realized oh that's a really good

568
00:38:56,609 --> 00:38:58,349
solution to lots of different scientific

569
00:38:58,349 --> 00:38:59,760
and technological challenges and that

570
00:38:59,760 --> 00:39:01,920
innovation fanned out but once it fans

571
00:39:01,920 --> 00:39:03,170
out it doesn't stay in the

572
00:39:03,170 --> 00:39:05,329
same shape it begins it gets customized

573
00:39:05,329 --> 00:39:07,010
and specialized to all of the different

574
00:39:07,010 --> 00:39:08,480
situations that we want to use that

575
00:39:08,480 --> 00:39:10,579
technology and so you have an innovation

576
00:39:10,579 --> 00:39:12,260
and then it percolates and things get

577
00:39:12,260 --> 00:39:13,460
built on top of it and then there's an

578
00:39:13,460 --> 00:39:15,109
innovation over here and that fans out

579
00:39:15,109 --> 00:39:16,700
and you get these radiations through

580
00:39:16,700 --> 00:39:18,859
technological space and you can see this

581
00:39:18,859 --> 00:39:20,720
in quality diversity algorithm so this

582
00:39:20,720 --> 00:39:22,460
is one of my favorite plots of my entire

583
00:39:22,460 --> 00:39:24,319
scientific career here we have the

584
00:39:24,319 --> 00:39:26,270
innovation engine and early on in the

585
00:39:26,270 --> 00:39:28,099
run there was one little network that

586
00:39:28,099 --> 00:39:30,140
produced this dome this red and black

587
00:39:30,140 --> 00:39:32,420
dome at the very top here for abaya and

588
00:39:32,420 --> 00:39:34,670
that central innovation fanned out and

589
00:39:34,670 --> 00:39:36,740
radiated into all these other imagenet

590
00:39:36,740 --> 00:39:39,380
classes such as volcano mosque water

591
00:39:39,380 --> 00:39:41,480
tower beacon yurt

592
00:39:41,480 --> 00:39:44,450
Church planetarium obelisk and dome so

593
00:39:44,450 --> 00:39:46,010
we want algorithms that come up with a

594
00:39:46,010 --> 00:39:47,660
good idea and then harness that good

595
00:39:47,660 --> 00:39:49,190
idea in many different ways and build

596
00:39:49,190 --> 00:39:50,780
upon it and build upon it and build upon

597
00:39:50,780 --> 00:39:53,420
it now this idea might sound familiar

598
00:39:53,420 --> 00:39:54,950
this idea of goal switching might sound

599
00:39:54,950 --> 00:39:56,930
familiar to you recently there was a

600
00:39:56,930 --> 00:39:58,430
traditional work in this community

601
00:39:58,430 --> 00:39:59,930
traditional machine learning called

602
00:39:59,930 --> 00:40:01,520
hindsight experience replay and it's

603
00:40:01,520 --> 00:40:03,380
actually remarkably similar the idea is

604
00:40:03,380 --> 00:40:05,329
you have a single RL agent that's goal

605
00:40:05,329 --> 00:40:06,559
condition is trying to get to a

606
00:40:06,559 --> 00:40:08,630
particular goal and if you say hey go to

607
00:40:08,630 --> 00:40:09,770
the back of that room there and it

608
00:40:09,770 --> 00:40:11,390
happens to go over there as opposed to

609
00:40:11,390 --> 00:40:13,040
saying bad robot I'm giving it zero

610
00:40:13,040 --> 00:40:15,049
reward you say fantastic now I know how

611
00:40:15,049 --> 00:40:17,299
to get over there and you add in a goal

612
00:40:17,299 --> 00:40:19,040
that says I want to be able to get there

613
00:40:19,040 --> 00:40:20,329
and I already know how to do it and you

614
00:40:20,329 --> 00:40:21,589
keep doing that until you kind of learn

615
00:40:21,589 --> 00:40:23,270
to go everywhere so effectively that is

616
00:40:23,270 --> 00:40:24,619
a cutey algorithm it's learning

617
00:40:24,619 --> 00:40:26,599
ultimately the highest quality way to

618
00:40:26,599 --> 00:40:29,210
get to a diverse set of goals but in

619
00:40:29,210 --> 00:40:30,619
this case it's not a population of

620
00:40:30,619 --> 00:40:32,660
agents it's a population of goals kind

621
00:40:32,660 --> 00:40:35,059
of within the head of one policy or one

622
00:40:35,059 --> 00:40:37,160
agent so it's a nice example of similar

623
00:40:37,160 --> 00:40:38,780
ideas working out great and deep

624
00:40:38,780 --> 00:40:40,940
reinforcement learning another insight

625
00:40:40,940 --> 00:40:42,440
behind QD algorithms which i think is

626
00:40:42,440 --> 00:40:43,819
really interesting is that we frequently

627
00:40:43,819 --> 00:40:46,040
don't want just a bunch of specialists

628
00:40:46,040 --> 00:40:47,420
maybe that's what you're thinking in the

629
00:40:47,420 --> 00:40:48,680
audience it's like this is a great way

630
00:40:48,680 --> 00:40:50,450
to get an entire repertoire of

631
00:40:50,450 --> 00:40:52,099
specialists but often we want

632
00:40:52,099 --> 00:40:53,900
generalists but you can use these ideas

633
00:40:53,900 --> 00:40:55,839
and algorithms also to generate

634
00:40:55,839 --> 00:40:57,920
generalists so we came up with this idea

635
00:40:57,920 --> 00:41:00,650
called Samoa with Yost huizinga and

636
00:41:00,650 --> 00:41:02,390
myself and we're the ideas that we want

637
00:41:02,390 --> 00:41:03,710
robots that can perform many different

638
00:41:03,710 --> 00:41:04,609
actions or skills in different

639
00:41:04,609 --> 00:41:07,190
situations and the insight is that if

640
00:41:07,190 --> 00:41:08,930
you want a robot say to perform these

641
00:41:08,930 --> 00:41:11,420
six tasks here then what you can do is

642
00:41:11,420 --> 00:41:12,859
you can get a curriculum that's kind of

643
00:41:12,859 --> 00:41:14,530
slowly first you learn this task

644
00:41:14,530 --> 00:41:15,730
you learn this task then you learn this

645
00:41:15,730 --> 00:41:16,690
task but you don't know which is the

646
00:41:16,690 --> 00:41:18,430
right curriculum but if you use the

647
00:41:18,430 --> 00:41:20,260
principles of QD then you can have one

648
00:41:20,260 --> 00:41:22,930
niche per single atom task and then one

649
00:41:22,930 --> 00:41:25,120
niche per combination of tasks and you

650
00:41:25,120 --> 00:41:26,560
can end up with this kind of exponential

651
00:41:26,560 --> 00:41:28,450
set of tasks that you're willing to

652
00:41:28,450 --> 00:41:30,070
simultaneously optimize for and

653
00:41:30,070 --> 00:41:31,900
solutions can start by getting good at

654
00:41:31,900 --> 00:41:33,220
one and then they happen to be good at a

655
00:41:33,220 --> 00:41:34,930
2 and then 3 and then maybe they go back

656
00:41:34,930 --> 00:41:37,120
to a 2 and you can trace all sorts of

657
00:41:37,120 --> 00:41:39,550
wild and crazy' curricula through this

658
00:41:39,550 --> 00:41:41,170
set of possibilities and ultimately you

659
00:41:41,170 --> 00:41:43,000
might get to a solution to all of the

660
00:41:43,000 --> 00:41:46,300
tasks and quantify this this strategy

661
00:41:46,300 --> 00:41:48,190
works quite well so here is a quick

662
00:41:48,190 --> 00:41:50,590
video for example of a robot that learns

663
00:41:50,590 --> 00:41:52,600
how to you know turn laughs turn right

664
00:41:52,600 --> 00:41:54,820
even do a karate kick at the end and the

665
00:41:54,820 --> 00:41:58,030
other tasks as well so I want to quickly

666
00:41:58,030 --> 00:41:59,410
try to tell you about some of the other

667
00:41:59,410 --> 00:42:00,880
applications because one of the things

668
00:42:00,880 --> 00:42:02,530
that we found with Qt algorithms is that

669
00:42:02,530 --> 00:42:04,360
there's so many good kind of basic ideas

670
00:42:04,360 --> 00:42:05,860
and healthy optimization going on that

671
00:42:05,860 --> 00:42:07,930
once you have this set of high quality

672
00:42:07,930 --> 00:42:09,730
diverse solutions to a problem there's

673
00:42:09,730 --> 00:42:11,890
really a lot of things that you can do

674
00:42:11,890 --> 00:42:13,720
with that that you might not normally be

675
00:42:13,720 --> 00:42:14,950
able to do with traditional machine

676
00:42:14,950 --> 00:42:16,690
learning algorithms so we had this paper

677
00:42:16,690 --> 00:42:19,300
those on the cover of nature in 2015 on

678
00:42:19,300 --> 00:42:22,060
robots that can adapt to damage and

679
00:42:22,060 --> 00:42:23,260
ultimately produce state-of-the-art

680
00:42:23,260 --> 00:42:25,630
damage recovery so if we want robots

681
00:42:25,630 --> 00:42:28,210
that can get out into the world and help

682
00:42:28,210 --> 00:42:29,920
us you know put out forest fires find

683
00:42:29,920 --> 00:42:32,740
survivors just get out of the laboratory

684
00:42:32,740 --> 00:42:34,540
and into our homes we're gonna need to

685
00:42:34,540 --> 00:42:35,800
deal with the fact that robots

686
00:42:35,800 --> 00:42:37,960
inevitably will become damaged

687
00:42:37,960 --> 00:42:39,850
now modern learning based approaches as

688
00:42:39,850 --> 00:42:41,950
we all know are extremely sampled

689
00:42:41,950 --> 00:42:44,020
inefficient we cannot just run them live

690
00:42:44,020 --> 00:42:46,600
in the world if we ever can do that it's

691
00:42:46,600 --> 00:42:48,370
usually on very simple robots with low

692
00:42:48,370 --> 00:42:51,430
dimensional state spaces so what we look

693
00:42:51,430 --> 00:42:53,290
to is animals for inspiration and

694
00:42:53,290 --> 00:42:55,180
animals in contrast have very very

695
00:42:55,180 --> 00:42:57,130
different intuitions they start out with

696
00:42:57,130 --> 00:42:58,690
intuitions for totally different ways to

697
00:42:58,690 --> 00:43:01,240
move and then they if they become

698
00:43:01,240 --> 00:43:02,530
damaged they conduct a few intelligent

699
00:43:02,530 --> 00:43:04,480
tests and then they pick a behavior that

700
00:43:04,480 --> 00:43:07,900
works despite injury so we want to kind

701
00:43:07,900 --> 00:43:09,610
of algorithmically produce that pipeline

702
00:43:09,610 --> 00:43:11,380
and the way that we do it is that we

703
00:43:11,380 --> 00:43:13,960
harness the ideas of QD so here is the

704
00:43:13,960 --> 00:43:16,210
robot that we were using in this

705
00:43:16,210 --> 00:43:19,810
experiment there we go and what we're

706
00:43:19,810 --> 00:43:20,980
gonna do is we're going to launch a

707
00:43:20,980 --> 00:43:23,500
Mapple each prog algorithm ahead of time

708
00:43:23,500 --> 00:43:26,320
in simulation and its goal is to find a

709
00:43:26,320 --> 00:43:28,030
whole lot of different ways

710
00:43:28,030 --> 00:43:29,890
walk and so the way that we did that is

711
00:43:29,890 --> 00:43:31,330
we have a behavioral characterization

712
00:43:31,330 --> 00:43:32,140
remember we have to define the

713
00:43:32,140 --> 00:43:34,210
dimensions of this grid so this is a 6

714
00:43:34,210 --> 00:43:36,280
dimensional hypercube each dimension is

715
00:43:36,280 --> 00:43:38,500
the percent of time that a given leg is

716
00:43:38,500 --> 00:43:40,210
touching the ground so you have to learn

717
00:43:40,210 --> 00:43:41,920
without like you know learn without ever

718
00:43:41,920 --> 00:43:43,180
using this leg and then learn how to

719
00:43:43,180 --> 00:43:44,290
walk without ever the use through this

720
00:43:44,290 --> 00:43:45,970
leg we learn how to walk with using this

721
00:43:45,970 --> 00:43:47,410
leg ten percent of the time twenty

722
00:43:47,410 --> 00:43:48,460
percent of the time all possible

723
00:43:48,460 --> 00:43:50,770
combinations the original search space

724
00:43:50,770 --> 00:43:52,300
here has more molecules than there are

725
00:43:52,300 --> 00:43:54,580
in the solar system the final map

726
00:43:54,580 --> 00:43:56,980
produced by map elites are 13,000

727
00:43:56,980 --> 00:43:59,170
high-performing gates here's an example

728
00:43:59,170 --> 00:44:01,480
of one of the gates and what you can see

729
00:44:01,480 --> 00:44:04,530
is that it walks oh that's not working

730
00:44:04,530 --> 00:44:08,290
you gonna work for me no all right well

731
00:44:08,290 --> 00:44:10,090
this gate uses that leg ten percent of

732
00:44:10,090 --> 00:44:11,290
the time and then another leg another

733
00:44:11,290 --> 00:44:13,440
ten percent of the time there was also

734
00:44:13,440 --> 00:44:20,880
these all my videos did that's a shame

735
00:44:21,570 --> 00:44:26,160
mmm work here

736
00:44:26,760 --> 00:44:30,270
yes all right well there with the humor

737
00:44:30,270 --> 00:44:31,770
but the idea here is that there was a

738
00:44:31,770 --> 00:44:35,130
gate we challenged optimization to try

739
00:44:35,130 --> 00:44:38,760
to produce but oh that's not even

740
00:44:38,760 --> 00:44:40,380
working ok never mind I'll just skip

741
00:44:40,380 --> 00:44:44,280
that ok hmm I don't know if the AV

742
00:44:44,280 --> 00:44:45,510
people could get to help us get the

743
00:44:45,510 --> 00:44:47,970
videos working I don't know what's going

744
00:44:47,970 --> 00:44:51,960
on there so one thing I want to point

745
00:44:51,960 --> 00:44:53,340
out is that this map relates algorithms

746
00:44:53,340 --> 00:44:54,869
have figured out 13,000 different ways

747
00:44:54,869 --> 00:44:59,250
to walk and now at game time the robot

748
00:44:59,250 --> 00:45:00,690
has become damaged and we need to figure

749
00:45:00,690 --> 00:45:02,609
out what to do you could say that I

750
00:45:02,609 --> 00:45:04,380
should try the top-end gates in this

751
00:45:04,380 --> 00:45:06,240
repertoire but remember nearby gates in

752
00:45:06,240 --> 00:45:07,710
this map are similar so that would be a

753
00:45:07,710 --> 00:45:09,660
pretty bad idea instead what we want to

754
00:45:09,660 --> 00:45:11,280
do is kind of try one gate if that

755
00:45:11,280 --> 00:45:13,020
family of gates doesn't work rule that

756
00:45:13,020 --> 00:45:15,090
out try a different gate if that family

757
00:45:15,090 --> 00:45:16,770
of gates doesn't work rule that out and

758
00:45:16,770 --> 00:45:19,680
keep going and so we can do that by

759
00:45:19,680 --> 00:45:21,960
heart combat combining map elites with

760
00:45:21,960 --> 00:45:23,970
Bayesian optimization so the general

761
00:45:23,970 --> 00:45:27,180
flow here is that the prior of how each

762
00:45:27,180 --> 00:45:28,770
gate how well each gate work comes from

763
00:45:28,770 --> 00:45:31,890
map elites the posterior gets updated as

764
00:45:31,890 --> 00:45:35,100
we do experiments in in the real world

765
00:45:35,100 --> 00:45:36,780
with Bayesian optimization and based

766
00:45:36,780 --> 00:45:38,340
optimization will update the posterior

767
00:45:38,340 --> 00:45:39,869
estimate of how well each of these gates

768
00:45:39,869 --> 00:45:41,640
work and then we can just stop once we

769
00:45:41,640 --> 00:45:44,640
have a high-performing enough robot so

770
00:45:44,640 --> 00:45:46,560
here's kind of a one-dimensional example

771
00:45:46,560 --> 00:45:48,150
of how this work we run map elites ahead

772
00:45:48,150 --> 00:45:49,800
of time to kind of figure out how well

773
00:45:49,800 --> 00:45:51,119
we can do at each point along this

774
00:45:51,119 --> 00:45:53,400
behavioral characterization then we try

775
00:45:53,400 --> 00:45:54,960
our highest performing thing if it

776
00:45:54,960 --> 00:45:57,000
doesn't work we update our prediction

777
00:45:57,000 --> 00:45:58,859
for how well that robot does and then

778
00:45:58,859 --> 00:46:00,630
here's where the magic happens you can

779
00:46:00,630 --> 00:46:03,000
also update your the prediction for

780
00:46:03,000 --> 00:46:05,070
nearby points as a function of distance

781
00:46:05,070 --> 00:46:07,020
both the mean and the uncertainty

782
00:46:07,020 --> 00:46:08,940
because that experiment taught us a lot

783
00:46:08,940 --> 00:46:11,070
about the robot near you know all the

784
00:46:11,070 --> 00:46:12,810
robots in the area near where we test it

785
00:46:12,810 --> 00:46:14,070
and didn't teach us almost anything

786
00:46:14,070 --> 00:46:16,050
about robots that are far away and that

787
00:46:16,050 --> 00:46:18,390
allows us to run this and then we can

788
00:46:18,390 --> 00:46:19,410
just stop when we have something that's

789
00:46:19,410 --> 00:46:21,570
good enough now well the robot will the

790
00:46:21,570 --> 00:46:24,330
videos work oh here we go good alright

791
00:46:24,330 --> 00:46:26,550
so here is a the original robot it's

792
00:46:26,550 --> 00:46:28,859
moving at 0.25 meters per second then it

793
00:46:28,859 --> 00:46:30,750
becomes damaged and that original gate

794
00:46:30,750 --> 00:46:33,510
no longer works it's down to 0.03 meters

795
00:46:33,510 --> 00:46:36,450
per second and so we have to adapt so we

796
00:46:36,450 --> 00:46:38,280
launched this process and you can see

797
00:46:38,280 --> 00:46:39,910
the prior in

798
00:46:39,910 --> 00:46:41,740
in the map here the colors are the

799
00:46:41,740 --> 00:46:43,750
original coming out of map elites from

800
00:46:43,750 --> 00:46:45,789
simulation on an undamaged robot

801
00:46:45,789 --> 00:46:47,650
predictions and then we'll test one of

802
00:46:47,650 --> 00:46:49,180
them and you'll see we'll update our

803
00:46:49,180 --> 00:46:50,559
posterior prediction of these

804
00:46:50,559 --> 00:46:52,599
performances based on what happens in

805
00:46:52,599 --> 00:46:53,829
the real world we find out for example

806
00:46:53,829 --> 00:46:56,079
this gate here doesn't work very well

807
00:46:56,079 --> 00:46:57,730
and so you'll see kind of the blue color

808
00:46:57,730 --> 00:46:59,740
percolate through the map there now

809
00:46:59,740 --> 00:47:00,910
we're honor I think our second

810
00:47:00,910 --> 00:47:03,099
experiment our third here we're at 0.1 7

811
00:47:03,099 --> 00:47:06,339
meters per sec 1 3 meters per second

812
00:47:06,339 --> 00:47:08,859
we then shot another one which is point

813
00:47:08,859 --> 00:47:12,069
2 sorry point 2 meters per second and is

814
00:47:12,069 --> 00:47:15,789
almost straight and then now in 26

815
00:47:15,789 --> 00:47:18,460
seconds of real wach wach chime we now

816
00:47:18,460 --> 00:47:19,630
have the gate that has recovered the

817
00:47:19,630 --> 00:47:21,279
original performance of the robot more

818
00:47:21,279 --> 00:47:23,529
or less 0.2 4 meters per second and walk

819
00:47:23,529 --> 00:47:25,509
straight which is quite remarkable so in

820
00:47:25,509 --> 00:47:28,000
about 5 experiments in 20 30 seconds we

821
00:47:28,000 --> 00:47:28,809
have a solution

822
00:47:28,809 --> 00:47:30,069
we tried this in a variety of different

823
00:47:30,069 --> 00:47:31,799
damage conditions it works quite well

824
00:47:31,799 --> 00:47:35,019
and one of the things that we did is we

825
00:47:35,019 --> 00:47:36,730
compared this to the stuff that is being

826
00:47:36,730 --> 00:47:38,500
presented here at ICML more

827
00:47:38,500 --> 00:47:40,029
traditionally so if you run Bayesian

828
00:47:40,029 --> 00:47:42,339
optimization or policy gradients in the

829
00:47:42,339 --> 00:47:44,079
original search space well you get are

830
00:47:44,079 --> 00:47:45,640
these two curves on the bottom here that

831
00:47:45,640 --> 00:47:47,380
don't work really well everything else

832
00:47:47,380 --> 00:47:48,940
that piggybacked on the back of map

833
00:47:48,940 --> 00:47:50,619
elites or all the algorithms at the top

834
00:47:50,619 --> 00:47:52,930
which really work quite well so that was

835
00:47:52,930 --> 00:47:54,160
kind of the principal component of

836
00:47:54,160 --> 00:47:56,079
success here we tried it on a different

837
00:47:56,079 --> 00:47:57,910
robot we try to it also works to adapt

838
00:47:57,910 --> 00:47:59,410
to different environments etc so it's a

839
00:47:59,410 --> 00:48:00,789
way to get very sample efficient

840
00:48:00,789 --> 00:48:03,519
learning so I also want to point out

841
00:48:03,519 --> 00:48:05,049
that that work didn't actually have deep

842
00:48:05,049 --> 00:48:06,369
RL in it but there's no reason you

843
00:48:06,369 --> 00:48:07,869
couldn't use deep RL there's another

844
00:48:07,869 --> 00:48:09,880
team that just took our exact algorithm

845
00:48:09,880 --> 00:48:12,099
and drop deep RL n where you use deep RL

846
00:48:12,099 --> 00:48:13,420
to learn a variety of different gates

847
00:48:13,420 --> 00:48:15,430
and it works exactly the same and as

848
00:48:15,430 --> 00:48:17,049
well so the conclusion of that mini

849
00:48:17,049 --> 00:48:19,329
paper on the robotic damage recovery is

850
00:48:19,329 --> 00:48:20,529
that you can get state-of-the-art damage

851
00:48:20,529 --> 00:48:22,240
recovery by combining the kind of the

852
00:48:22,240 --> 00:48:24,819
creativity of QT algorithms to go out

853
00:48:24,819 --> 00:48:25,869
and get you a set of really high

854
00:48:25,869 --> 00:48:27,849
performing diverse things and then you

855
00:48:27,849 --> 00:48:29,470
can use Bayesian optimization to sift

856
00:48:29,470 --> 00:48:31,000
through them depend and find the one

857
00:48:31,000 --> 00:48:32,470
that you need that works for the

858
00:48:32,470 --> 00:48:35,650
situation which shows a benefit of QD of

859
00:48:35,650 --> 00:48:38,230
QT and using it in kind of a new context

860
00:48:38,230 --> 00:48:40,269
now another interesting point about all

861
00:48:40,269 --> 00:48:41,589
of this QT work which you might find

862
00:48:41,589 --> 00:48:43,269
objectionable is that we've been hand

863
00:48:43,269 --> 00:48:44,619
deciding what these behavioral

864
00:48:44,619 --> 00:48:45,789
characterizations are what the

865
00:48:45,789 --> 00:48:47,980
dimensions of these maps are but you can

866
00:48:47,980 --> 00:48:49,509
also learn them so there's a brand new

867
00:48:49,509 --> 00:48:51,579
paper that did an idea that we wanted to

868
00:48:51,579 --> 00:48:52,670
do from the original

869
00:48:52,670 --> 00:48:54,109
deception of map elites which is that

870
00:48:54,109 --> 00:48:55,849
you can generate some random policies

871
00:48:55,849 --> 00:48:57,319
then you can do dimensionality reduction

872
00:48:57,319 --> 00:48:59,240
like Auto encoding that gives you a low

873
00:48:59,240 --> 00:49:00,680
dimensional latent code that kind of

874
00:49:00,680 --> 00:49:02,180
captures some of the variation of your

875
00:49:02,180 --> 00:49:04,640
policy space discretize that code then

876
00:49:04,640 --> 00:49:06,740
run map elites within that code to find

877
00:49:06,740 --> 00:49:08,329
everything that's possible and then just

878
00:49:08,329 --> 00:49:09,799
you can keep repeating this process over

879
00:49:09,799 --> 00:49:11,690
and over again to expand outwards in

880
00:49:11,690 --> 00:49:13,670
high dimensional spaces and find all the

881
00:49:13,670 --> 00:49:15,319
interesting set of things that's out

882
00:49:15,319 --> 00:49:17,660
there so that works remarkably well

883
00:49:17,660 --> 00:49:19,059
which is great because that helps us

884
00:49:19,059 --> 00:49:21,380
expand on into domains where we have no

885
00:49:21,380 --> 00:49:23,780
idea what even counts is interesting so

886
00:49:23,780 --> 00:49:26,809
I want to talk about another application

887
00:49:26,809 --> 00:49:28,549
which recently came out called this go

888
00:49:28,549 --> 00:49:30,049
explore algorithm which is yet another

889
00:49:30,049 --> 00:49:32,150
case where we harnessed the idea of QT

890
00:49:32,150 --> 00:49:34,220
but in a totally different way to do

891
00:49:34,220 --> 00:49:35,450
something to solve a previously

892
00:49:35,450 --> 00:49:38,089
unsolvable problem so a grand challenge

893
00:49:38,089 --> 00:49:39,650
in deep reinforcement learning is

894
00:49:39,650 --> 00:49:41,270
exploration and many of you probably

895
00:49:41,270 --> 00:49:42,770
know that there have been these job

896
00:49:42,770 --> 00:49:44,390
montezuma's revenge has kind of been

897
00:49:44,390 --> 00:49:47,299
like the challenge in terms of trying to

898
00:49:47,299 --> 00:49:49,309
solve sparse reward problems we very

899
00:49:49,309 --> 00:49:51,859
infrequently get a reward pit follows an

900
00:49:51,859 --> 00:49:53,240
example that's even harder because it's

901
00:49:53,240 --> 00:49:54,710
actually deceptive because most of the

902
00:49:54,710 --> 00:49:56,839
time you do worse and so the agents

903
00:49:56,839 --> 00:49:59,480
learn to to stand still so what we did

904
00:49:59,480 --> 00:50:00,890
was we wanted to take advantage of some

905
00:50:00,890 --> 00:50:02,510
of these cutie cutie ideas in this

906
00:50:02,510 --> 00:50:03,980
algorithm called go explore and it

907
00:50:03,980 --> 00:50:06,140
splits learning into two phases the

908
00:50:06,140 --> 00:50:08,359
first phase is try just try to explore

909
00:50:08,359 --> 00:50:10,119
until you know how to solve the problem

910
00:50:10,119 --> 00:50:12,530
including finding just like an open leap

911
00:50:12,530 --> 00:50:14,690
loop sequence they can solve the problem

912
00:50:14,690 --> 00:50:16,430
and then in a second phase you'll take

913
00:50:16,430 --> 00:50:17,990
that demonstration of how to solve the

914
00:50:17,990 --> 00:50:19,220
problem and you'll use imitation

915
00:50:19,220 --> 00:50:20,540
learning to robusta phi that into a

916
00:50:20,540 --> 00:50:21,530
neural network that can deal with

917
00:50:21,530 --> 00:50:23,750
stochasticity and what i want to focus

918
00:50:23,750 --> 00:50:25,220
on is the first phase because that's

919
00:50:25,220 --> 00:50:26,599
where we harness quality diversity

920
00:50:26,599 --> 00:50:27,859
algorithms so here's not what that

921
00:50:27,859 --> 00:50:30,349
algorithm looks like you start in a here

922
00:50:30,349 --> 00:50:32,390
which is you start by taking some random

923
00:50:32,390 --> 00:50:34,490
actions and you every place that you end

924
00:50:34,490 --> 00:50:35,960
up every state you end up in you add

925
00:50:35,960 --> 00:50:38,030
that to your archive and then what you

926
00:50:38,030 --> 00:50:39,950
do is you pull a state out of the

927
00:50:39,950 --> 00:50:42,559
archive you go back to it with no

928
00:50:42,559 --> 00:50:44,630
exploration added and then you explore

929
00:50:44,630 --> 00:50:46,309
from it and if you get to any new states

930
00:50:46,309 --> 00:50:49,309
in the archive then you add them to your

931
00:50:49,309 --> 00:50:51,349
archive and then here's where the the

932
00:50:51,349 --> 00:50:53,720
quality comes in in step D if you happen

933
00:50:53,720 --> 00:50:54,980
to get back to a place you've already

934
00:50:54,980 --> 00:50:56,720
been but you get there in a better way

935
00:50:56,720 --> 00:50:58,490
either through a shorter more efficient

936
00:50:58,490 --> 00:50:59,900
trajectory or through a higher

937
00:50:59,900 --> 00:51:02,059
performing trajectory you swap in to

938
00:51:02,059 --> 00:51:03,470
that method of getting there as your

939
00:51:03,470 --> 00:51:05,809
preferred way to get to that cell so if

940
00:51:05,809 --> 00:51:06,150
you

941
00:51:06,150 --> 00:51:07,710
about it this is an enhanced version of

942
00:51:07,710 --> 00:51:08,880
Matt police because I learned the

943
00:51:08,880 --> 00:51:10,859
fastest or the highest rewarding way to

944
00:51:10,859 --> 00:51:12,690
get to this point and that point and

945
00:51:12,690 --> 00:51:14,430
this point in that point I have this set

946
00:51:14,430 --> 00:51:16,470
of policies which is the best way to get

947
00:51:16,470 --> 00:51:17,760
to all of these different places and

948
00:51:17,760 --> 00:51:20,039
ultimately I'll get have the best way to

949
00:51:20,039 --> 00:51:23,250
solve the entire game and to skip over a

950
00:51:23,250 --> 00:51:25,410
lot of detail if you look at the

951
00:51:25,410 --> 00:51:27,150
previous performance on this task it's

952
00:51:27,150 --> 00:51:29,099
usually around zero to a state of the

953
00:51:29,099 --> 00:51:31,529
art of around 11,000 before this work

954
00:51:31,529 --> 00:51:34,049
and the best policy using these ideas

955
00:51:34,049 --> 00:51:35,789
gets to a score of about eighteen

956
00:51:35,789 --> 00:51:37,890
million and scores you know eleven

957
00:51:37,890 --> 00:51:39,630
hundred levels of this game it even

958
00:51:39,630 --> 00:51:40,890
beats the human world record on this

959
00:51:40,890 --> 00:51:42,809
game of 1.2 million so it's really just

960
00:51:42,809 --> 00:51:45,240
a step change at what optimization can

961
00:51:45,240 --> 00:51:47,220
do when you kind of embrace the idea of

962
00:51:47,220 --> 00:51:49,099
an expanding repertoire of high-quality

963
00:51:49,099 --> 00:51:51,720
policies on pitfall the story is similar

964
00:51:51,720 --> 00:51:53,579
there have been no prior score greater

965
00:51:53,579 --> 00:51:56,640
than zero on this task and go explore

966
00:51:56,640 --> 00:51:58,589
basically goes out and gets a max score

967
00:51:58,589 --> 00:51:59,910
of one hundred and seven thousand or an

968
00:51:59,910 --> 00:52:01,740
average score of sixty thousand which is

969
00:52:01,740 --> 00:52:03,960
just a dramatic step forward in turn our

970
00:52:03,960 --> 00:52:06,180
ability to solve these hard exploration

971
00:52:06,180 --> 00:52:08,190
problems so I think that this shows the

972
00:52:08,190 --> 00:52:09,960
value of quality diversity algorithms of

973
00:52:09,960 --> 00:52:11,450
collecting a diverse repertoire of

974
00:52:11,450 --> 00:52:14,069
high-quality things and helped us solve

975
00:52:14,069 --> 00:52:14,789
this problem

976
00:52:14,789 --> 00:52:19,770
so one another so I want to just briefly

977
00:52:19,770 --> 00:52:21,839
stop and talk about looking forward a

978
00:52:21,839 --> 00:52:24,510
little bit in future work here you can

979
00:52:24,510 --> 00:52:26,670
kind of think about how could we exploit

980
00:52:26,670 --> 00:52:29,190
what's in this map you know we've taken

981
00:52:29,190 --> 00:52:30,900
we've shown you in the nature paper on

982
00:52:30,900 --> 00:52:33,059
robotics and we in demand you showed you

983
00:52:33,059 --> 00:52:34,410
and go explore two different ways to

984
00:52:34,410 --> 00:52:36,240
kind of harness what's in there but I

985
00:52:36,240 --> 00:52:37,940
want to challenge everyone in this room

986
00:52:37,940 --> 00:52:39,960
who's listening to this tutorial to

987
00:52:39,960 --> 00:52:41,339
think about what could you do in your

988
00:52:41,339 --> 00:52:43,109
problem space and with your techniques

989
00:52:43,109 --> 00:52:45,660
to take advantage if I gave you a set of

990
00:52:45,660 --> 00:52:47,670
a thousand or ten thousand or fifty

991
00:52:47,670 --> 00:52:50,099
thousand totally different ways to solve

992
00:52:50,099 --> 00:52:51,779
the problem each of which is pretty good

993
00:52:51,779 --> 00:52:54,000
in its own way so one thing you could do

994
00:52:54,000 --> 00:52:56,250
is you could use that data to learn

995
00:52:56,250 --> 00:52:57,900
really good representations of the world

996
00:52:57,900 --> 00:52:59,849
and how to solve the problems in that

997
00:52:59,849 --> 00:53:01,319
world like value functions which could

998
00:53:01,319 --> 00:53:03,210
aid you with more further exploration

999
00:53:03,210 --> 00:53:05,099
you could also learn models of the world

1000
00:53:05,099 --> 00:53:06,569
because you know how to fan out and

1001
00:53:06,569 --> 00:53:08,490
explore all these different niches of

1002
00:53:08,490 --> 00:53:10,079
the worlds and different dynamics than

1003
00:53:10,079 --> 00:53:11,940
ways to behave for example if you only

1004
00:53:11,940 --> 00:53:13,859
optimized for running robots you might

1005
00:53:13,859 --> 00:53:15,299
never learn about the physics of flying

1006
00:53:15,299 --> 00:53:16,950
but if you had a algorithm that produced

1007
00:53:16,950 --> 00:53:18,990
flying robots and running robots now you

1008
00:53:18,990 --> 00:53:19,320
can

1009
00:53:19,320 --> 00:53:20,940
model the physics of flying creatures

1010
00:53:20,940 --> 00:53:22,530
and running creatures and maybe swimming

1011
00:53:22,530 --> 00:53:24,360
creatures you might also be able to

1012
00:53:24,360 --> 00:53:26,040
learn a lot of really important options

1013
00:53:26,040 --> 00:53:28,230
in like a hierarchical RL fashion I can

1014
00:53:28,230 --> 00:53:29,820
get from here to here and here to here

1015
00:53:29,820 --> 00:53:31,290
and here to here well those could be

1016
00:53:31,290 --> 00:53:33,060
little atoms that some top level

1017
00:53:33,060 --> 00:53:35,190
controller is kind of using to move

1018
00:53:35,190 --> 00:53:36,120
around the world

1019
00:53:36,120 --> 00:53:37,830
you could also learn agent models

1020
00:53:37,830 --> 00:53:38,790
because you've fanned out you've

1021
00:53:38,790 --> 00:53:40,080
interacted with all sorts of different

1022
00:53:40,080 --> 00:53:41,640
agents that if you were only focused on

1023
00:53:41,640 --> 00:53:43,200
optimization maybe you'd never go play

1024
00:53:43,200 --> 00:53:44,790
with the worms in the back corner of

1025
00:53:44,790 --> 00:53:46,410
this closet or something but now that

1026
00:53:46,410 --> 00:53:47,760
you do maybe you could model how those

1027
00:53:47,760 --> 00:53:48,960
agents behave and maybe that's useful

1028
00:53:48,960 --> 00:53:51,180
for some reason so I don't know the full

1029
00:53:51,180 --> 00:53:52,920
set here at me I would like to see what

1030
00:53:52,920 --> 00:53:54,330
the community does when they're

1031
00:53:54,330 --> 00:53:56,550
challenged to think about all of this so

1032
00:53:56,550 --> 00:54:00,330
to conclude here on quality diversity

1033
00:54:00,330 --> 00:54:03,600
algorithms we are going to what we think

1034
00:54:03,600 --> 00:54:05,760
is really really promising about this

1035
00:54:05,760 --> 00:54:08,130
family of optimization algorithms is

1036
00:54:08,130 --> 00:54:10,200
that you can generate this set of

1037
00:54:10,200 --> 00:54:12,090
diverse high-quality solutions which is

1038
00:54:12,090 --> 00:54:13,710
just really intrinsically interesting to

1039
00:54:13,710 --> 00:54:15,900
understand what's out there it gives you

1040
00:54:15,900 --> 00:54:17,760
a bunch of options and trade-offs may be

1041
00:54:17,760 --> 00:54:19,500
the top-performing thing isn't what you

1042
00:54:19,500 --> 00:54:20,850
want once you see that there's some

1043
00:54:20,850 --> 00:54:22,490
other trade-off you hadn't considered

1044
00:54:22,490 --> 00:54:25,320
and we think most importantly the

1045
00:54:25,320 --> 00:54:27,270
disease algorithms have a lot of healthy

1046
00:54:27,270 --> 00:54:28,860
internal dynamics in terms of what's

1047
00:54:28,860 --> 00:54:31,440
going on so they collect this increasing

1048
00:54:31,440 --> 00:54:33,240
set of stepping stones that that can be

1049
00:54:33,240 --> 00:54:35,190
used as branching off points they have

1050
00:54:35,190 --> 00:54:37,230
goal switching so they catch ants on a

1051
00:54:37,230 --> 00:54:39,720
wing and serendipity they use that to

1052
00:54:39,720 --> 00:54:43,170
avoid local optima and you know as it

1053
00:54:43,170 --> 00:54:44,820
has been said you know chance favors the

1054
00:54:44,820 --> 00:54:46,590
prepared mind so we want our algorithms

1055
00:54:46,590 --> 00:54:49,320
to embody that concept they also build

1056
00:54:49,320 --> 00:54:50,880
on innovations via these adaptive

1057
00:54:50,880 --> 00:54:52,260
radiations where you get a central

1058
00:54:52,260 --> 00:54:53,520
innovation and then everything can

1059
00:54:53,520 --> 00:54:54,990
radiate out and with all the places

1060
00:54:54,990 --> 00:54:56,220
where it's helpful and serve as a

1061
00:54:56,220 --> 00:54:58,410
foundation for future innovation they

1062
00:54:58,410 --> 00:55:00,720
learn multiple overlapping curricula and

1063
00:55:00,720 --> 00:55:02,580
bet hedging and ultimately one will work

1064
00:55:02,580 --> 00:55:03,870
but ahead of time you wouldn't know

1065
00:55:03,870 --> 00:55:05,190
which one that is if you don't kind of

1066
00:55:05,190 --> 00:55:07,040
simultaneously push on all of them and

1067
00:55:07,040 --> 00:55:09,300
often as we've shown over and over and

1068
00:55:09,300 --> 00:55:11,130
over again even if you are just trying

1069
00:55:11,130 --> 00:55:13,470
to solve one ambitious challenge these

1070
00:55:13,470 --> 00:55:15,450
can be the best way to get there because

1071
00:55:15,450 --> 00:55:17,520
of all these healthy dynamics is fan-out

1072
00:55:17,520 --> 00:55:19,410
and don't get trapped by deception and

1073
00:55:19,410 --> 00:55:21,690
sparsity in the search algorithm so with

1074
00:55:21,690 --> 00:55:24,060
that I'm going to flip it over to Joel

1075
00:55:24,060 --> 00:55:25,050
who's going to quickly tell you about

1076
00:55:25,050 --> 00:55:26,880
some other QT ideas in the machine

1077
00:55:26,880 --> 00:55:27,840
learning community and then we're going

1078
00:55:27,840 --> 00:55:29,850
to have our Q&A so while Joel is talking

1079
00:55:29,850 --> 00:55:31,530
if you have questions for us please come

1080
00:55:31,530 --> 00:55:32,240
to the microphone

1081
00:55:32,240 --> 00:55:33,380
we're gonna keep it to about five

1082
00:55:33,380 --> 00:55:34,910
minutes and then we'll press on to the

1083
00:55:34,910 --> 00:55:42,800
other subjects thank you thanks Jeff so

1084
00:55:42,800 --> 00:55:45,290
at the end of this focus on quality

1085
00:55:45,290 --> 00:55:47,869
diversity we like to draw attention to a

1086
00:55:47,869 --> 00:55:50,000
really vein of a really interesting vein

1087
00:55:50,000 --> 00:55:51,910
of work coming out of deep mind on

1088
00:55:51,910 --> 00:55:54,560
population-based training and some

1089
00:55:54,560 --> 00:55:56,630
connections between that algorithm and

1090
00:55:56,630 --> 00:55:59,089
as used in their alpha star agent to

1091
00:55:59,089 --> 00:56:01,339
these ideas inspired by a short paper by

1092
00:56:01,339 --> 00:56:03,950
a real Kumar on so if you're not

1093
00:56:03,950 --> 00:56:05,089
familiar that idea population based

1094
00:56:05,089 --> 00:56:06,410
training it's a really cool idea and

1095
00:56:06,410 --> 00:56:08,390
recommend that you read the paper it's

1096
00:56:08,390 --> 00:56:10,250
motivated by the idea that hyper

1097
00:56:10,250 --> 00:56:11,960
parameters are really important to

1098
00:56:11,960 --> 00:56:14,390
getting machine learning and that

1099
00:56:14,390 --> 00:56:15,950
efficient optimization of hyper

1100
00:56:15,950 --> 00:56:17,810
parameters is a really important thing

1101
00:56:17,810 --> 00:56:19,460
to make our algorithms computationally

1102
00:56:19,460 --> 00:56:23,330
efficient so one approach you might use

1103
00:56:23,330 --> 00:56:25,250
is to sequentially try different sets of

1104
00:56:25,250 --> 00:56:26,510
high parameters like using Bayesian

1105
00:56:26,510 --> 00:56:28,550
optimization where you find one set of

1106
00:56:28,550 --> 00:56:29,930
high parameters and see how it does and

1107
00:56:29,930 --> 00:56:31,460
use that to inform the next sample you

1108
00:56:31,460 --> 00:56:32,270
might do something a little more

1109
00:56:32,270 --> 00:56:34,849
scalable and do something like random

1110
00:56:34,849 --> 00:56:36,230
search where you try a lots of different

1111
00:56:36,230 --> 00:56:38,119
hyper members in parallel and the idea

1112
00:56:38,119 --> 00:56:39,530
in population-based training is that you

1113
00:56:39,530 --> 00:56:41,510
do something like random search for AI

1114
00:56:41,510 --> 00:56:43,910
parameters and as you're running as

1115
00:56:43,910 --> 00:56:45,980
you're training your albums with these

1116
00:56:45,980 --> 00:56:47,300
random set of initially random set of

1117
00:56:47,300 --> 00:56:49,040
hyper parameters you pause training at

1118
00:56:49,040 --> 00:56:51,170
some point and when you pause training

1119
00:56:51,170 --> 00:56:53,630
you look at which which algorithms are

1120
00:56:53,630 --> 00:56:54,950
which set of hyper members are

1121
00:56:54,950 --> 00:56:56,240
performing better you do sort of a

1122
00:56:56,240 --> 00:56:58,010
greedy sort of online evolutionary

1123
00:56:58,010 --> 00:57:01,670
search where you overwrite the poor

1124
00:57:01,670 --> 00:57:03,050
performing sets of hyper parameters with

1125
00:57:03,050 --> 00:57:05,000
modifications of the high performing set

1126
00:57:05,000 --> 00:57:07,400
and this way you can kind of get an

1127
00:57:07,400 --> 00:57:10,220
adaptive schedule of hyper parameters

1128
00:57:10,220 --> 00:57:11,510
that ultimately leads to really nice

1129
00:57:11,510 --> 00:57:12,800
improvements in a computationally

1130
00:57:12,800 --> 00:57:14,680
efficient way and hyper primary search

1131
00:57:14,680 --> 00:57:18,170
and this has been an idea that's had

1132
00:57:18,170 --> 00:57:19,670
lots of interesting applications so far

1133
00:57:19,670 --> 00:57:22,160
helps to stabilize gand training which

1134
00:57:22,160 --> 00:57:23,359
is notorious a little bit a little bit

1135
00:57:23,359 --> 00:57:25,760
difficult as we used in the recent

1136
00:57:25,760 --> 00:57:27,230
science paper on capture-the-flag

1137
00:57:27,230 --> 00:57:29,810
and very recently I think just maybe a

1138
00:57:29,810 --> 00:57:31,730
couple weeks ago there was work out of

1139
00:57:31,730 --> 00:57:33,380
Berkeley on using population-based

1140
00:57:33,380 --> 00:57:35,440
training to make for more efficient

1141
00:57:35,440 --> 00:57:39,910
discovery of data augmentation policies

1142
00:57:39,910 --> 00:57:42,170
but when a focus right now I'm thinking

1143
00:57:42,170 --> 00:57:43,490
about alpha star so if you're not

1144
00:57:43,490 --> 00:57:45,320
familiar with alpha star it's the

1145
00:57:45,320 --> 00:57:49,400
human performance matching starcraft2

1146
00:57:49,400 --> 00:57:51,290
agents and uses a lot of interesting

1147
00:57:51,290 --> 00:57:53,390
people learning technologies and one of

1148
00:57:53,390 --> 00:57:55,100
the ingredients in this system is is

1149
00:57:55,100 --> 00:57:57,140
population-based training and so in a

1150
00:57:57,140 --> 00:57:58,220
game like Starcraft there's many

1151
00:57:58,220 --> 00:57:59,570
different strategies you might want to

1152
00:57:59,570 --> 00:58:01,520
maintain a diversity of strategies so

1153
00:58:01,520 --> 00:58:02,930
that you're not overfitting to whatever

1154
00:58:02,930 --> 00:58:06,230
is currently present just just one sort

1155
00:58:06,230 --> 00:58:07,370
of strategy can be easily defeated by

1156
00:58:07,370 --> 00:58:09,080
the other ones and so what they do is

1157
00:58:09,080 --> 00:58:13,100
they have a a ongoing league of agents

1158
00:58:13,100 --> 00:58:14,150
that are competing with each other and

1159
00:58:14,150 --> 00:58:16,940
the idea is that by having a league and

1160
00:58:16,940 --> 00:58:19,010
by incentivizing certain agents to to

1161
00:58:19,010 --> 00:58:20,720
perform differently maybe one agent has

1162
00:58:20,720 --> 00:58:22,940
an alerting objective to to kind of beat

1163
00:58:22,940 --> 00:58:25,040
another particular agent or to be the

1164
00:58:25,040 --> 00:58:26,870
distribution of agents or to use more of

1165
00:58:26,870 --> 00:58:28,580
the particular units in StarCraft than

1166
00:58:28,580 --> 00:58:30,200
other agents the idea is to kind of

1167
00:58:30,200 --> 00:58:32,120
maintain diversity explicitly in this

1168
00:58:32,120 --> 00:58:36,140
population to to make overall the

1169
00:58:36,140 --> 00:58:39,230
emergence of a really robust solution

1170
00:58:39,230 --> 00:58:41,780
more possible and so so waiting on the

1171
00:58:41,780 --> 00:58:43,010
actual paper but it sounds like from

1172
00:58:43,010 --> 00:58:44,630
from the blog post that there's a lot of

1173
00:58:44,630 --> 00:58:46,190
interesting may be potential innovations

1174
00:58:46,190 --> 00:58:47,870
in QD that are being introduced by this

1175
00:58:47,870 --> 00:58:51,080
and yeah I think we're excited for other

1176
00:58:51,080 --> 00:58:53,960
sorts of interesting riffs on population

1177
00:58:53,960 --> 00:58:54,950
based training and how it could kind of

1178
00:58:54,950 --> 00:58:57,800
push the field forward so with that if

1179
00:58:57,800 --> 00:58:59,600
you want to start thinking about the

1180
00:58:59,600 --> 00:59:01,100
question/answer and reaching towards the

1181
00:59:01,100 --> 00:59:02,990
the microphones I will start our

1182
00:59:02,990 --> 00:59:06,140
question answer session now I just just

1183
00:59:06,140 --> 00:59:07,700
to be clear this is the first Q&A it's

1184
00:59:07,700 --> 00:59:09,020
gonna be very fast and then we're going

1185
00:59:09,020 --> 00:59:10,190
to get on with two other really cool

1186
00:59:10,190 --> 00:59:11,690
topics from Ken and then we're gonna

1187
00:59:11,690 --> 00:59:13,550
have a second QA which is hopefully even

1188
00:59:13,550 --> 00:59:15,200
longer and can bleed into the break if

1189
00:59:15,200 --> 00:59:20,330
people are interested tag and so on okay

1190
00:59:20,330 --> 00:59:22,340
great thanks for a great time both of

1191
00:59:22,340 --> 00:59:25,040
you this is a more general and sort of

1192
00:59:25,040 --> 00:59:27,720
naive question about evolutionary

1193
00:59:27,720 --> 00:59:29,460
you're talking about spanning out

1194
00:59:29,460 --> 00:59:32,040
diversity in kind of a space of policies

1195
00:59:32,040 --> 00:59:33,930
or maybe value functions and I was

1196
00:59:33,930 --> 00:59:35,580
wondering what the evolutionary

1197
00:59:35,580 --> 00:59:38,670
algorithm or genetic algorithm community

1198
00:59:38,670 --> 00:59:42,390
thinks of as generalization or as the

1199
00:59:42,390 --> 00:59:43,650
class of problems you're sort of

1200
00:59:43,650 --> 00:59:46,080
training on in the class the class that

1201
00:59:46,080 --> 00:59:48,150
you want to generalize to if there's

1202
00:59:48,150 --> 00:59:50,790
that notion like if it's across policies

1203
00:59:50,790 --> 00:59:54,120
or across reward functions how that

1204
00:59:54,120 --> 00:59:57,540
could translate to you know supervised

1205
00:59:57,540 --> 01:00:00,030
or unsupervised machine learning yeah I

1206
01:00:00,030 --> 01:00:02,130
think it depends on which subset of the

1207
01:00:02,130 --> 01:00:03,690
community and what they're trying to

1208
01:00:03,690 --> 01:00:05,370
achieve I think in a lot of the stuff

1209
01:00:05,370 --> 01:00:06,540
that we've been talking about we follow

1210
01:00:06,540 --> 01:00:08,910
more of the RL philosophy which is that

1211
01:00:08,910 --> 01:00:10,170
you kind of are just trying to get an

1212
01:00:10,170 --> 01:00:11,790
agent that can actually do this thing or

1213
01:00:11,790 --> 01:00:13,230
solve this problem and we don't usually

1214
01:00:13,230 --> 01:00:15,810
then switch to something else so in that

1215
01:00:15,810 --> 01:00:17,280
sense I guess we're guilty of training

1216
01:00:17,280 --> 01:00:19,530
on our test set there has been work

1217
01:00:19,530 --> 01:00:21,270
including by the work of the Simona

1218
01:00:21,270 --> 01:00:22,680
algorithm that I presented there or we

1219
01:00:22,680 --> 01:00:24,330
did actually train on a set for example

1220
01:00:24,330 --> 01:00:25,770
of mazes and then we wanted to

1221
01:00:25,770 --> 01:00:28,050
generalize to different mazes and we're

1222
01:00:28,050 --> 01:00:30,630
preoccupied with generalization and then

1223
01:00:30,630 --> 01:00:32,040
obviously the nature paper the

1224
01:00:32,040 --> 01:00:33,600
intelligent trial error in some sense is

1225
01:00:33,600 --> 01:00:35,220
the the grand additive generalization

1226
01:00:35,220 --> 01:00:36,540
because you're going from simulation to

1227
01:00:36,540 --> 01:00:38,130
try to generalize to the real world in

1228
01:00:38,130 --> 01:00:40,620
some cases so I think there you'll see

1229
01:00:40,620 --> 01:00:42,450
all of the above you know under the

1230
01:00:42,450 --> 01:00:44,010
under the tent that depending on what

1231
01:00:44,010 --> 01:00:45,990
people are working on they either do or

1232
01:00:45,990 --> 01:00:47,010
completely ignore the issue

1233
01:00:47,010 --> 01:00:56,820
generalization yeah yeah so might be a

1234
01:00:56,820 --> 01:00:58,470
little bit long winded I apologize in

1235
01:00:58,470 --> 01:01:02,820
advance so creationism creationists have

1236
01:01:02,820 --> 01:01:04,830
this critique of like the evolution of

1237
01:01:04,830 --> 01:01:06,540
the eyeball where they say an eye is

1238
01:01:06,540 --> 01:01:08,010
totally useless until you have the whole

1239
01:01:08,010 --> 01:01:10,020
eye there and then you know people

1240
01:01:10,020 --> 01:01:11,310
respond oh no it's nice to have this

1241
01:01:11,310 --> 01:01:15,000
light sensitive spot and so on but

1242
01:01:15,000 --> 01:01:16,740
there's this underlying question of like

1243
01:01:16,740 --> 01:01:19,770
can you basically just advance via some

1244
01:01:19,770 --> 01:01:21,150
sort of local search towards your goal

1245
01:01:21,150 --> 01:01:24,060
and it seems like a lot of what you guys

1246
01:01:24,060 --> 01:01:25,230
have been talking about is sort of

1247
01:01:25,230 --> 01:01:28,170
saying no that's not the best way to to

1248
01:01:28,170 --> 01:01:31,770
achieve your goal and that reminds me of

1249
01:01:31,770 --> 01:01:34,560
group selection which as I understand is

1250
01:01:34,560 --> 01:01:35,970
a very controversial and sort of dirty

1251
01:01:35,970 --> 01:01:36,840
word and

1252
01:01:36,840 --> 01:01:39,420
evolution and is not considered

1253
01:01:39,420 --> 01:01:41,580
biologically plausible probably by most

1254
01:01:41,580 --> 01:01:43,140
people although I think like yo Wilson

1255
01:01:43,140 --> 01:01:46,610
recently changed his mind about that so

1256
01:01:46,610 --> 01:01:49,920
basically I'm curious you know what you

1257
01:01:49,920 --> 01:01:51,030
think about the biological plausibility

1258
01:01:51,030 --> 01:01:53,370
about these sort of techniques that are

1259
01:01:53,370 --> 01:01:55,170
explicitly selecting for diversity as

1260
01:01:55,170 --> 01:01:58,200
opposed to just fitness and if you think

1261
01:01:58,200 --> 01:01:59,400
there's like implications for our

1262
01:01:59,400 --> 01:02:00,930
understanding of evolution and

1263
01:02:00,930 --> 01:02:06,870
evolutionary biology yes it's a really

1264
01:02:06,870 --> 01:02:08,940
interesting question and obviously when

1265
01:02:08,940 --> 01:02:09,960
you have biologically inspired

1266
01:02:09,960 --> 01:02:11,760
algorithms there's some hope that it

1267
01:02:11,760 --> 01:02:13,650
would connect either to help test

1268
01:02:13,650 --> 01:02:16,530
hypotheses in biology or two maybe

1269
01:02:16,530 --> 01:02:17,930
replicate some of the results in biology

1270
01:02:17,930 --> 01:02:22,410
so on group selection I guess I

1271
01:02:22,410 --> 01:02:23,700
personally don't have like a strong

1272
01:02:23,700 --> 01:02:24,720
opinion on that

1273
01:02:24,720 --> 01:02:26,580
I think it's an interesting concept and

1274
01:02:26,580 --> 01:02:30,600
maybe it could be useful for some

1275
01:02:30,600 --> 01:02:34,290
algorithms so I guess what was the

1276
01:02:34,290 --> 01:02:37,830
second part I'll jump in on the second

1277
01:02:37,830 --> 01:02:40,380
part which is is is the the the style of

1278
01:02:40,380 --> 01:02:41,220
things that we're talking about here

1279
01:02:41,220 --> 01:02:42,720
biologically plausible and I think that

1280
01:02:42,720 --> 01:02:43,890
they are and I think that one of the

1281
01:02:43,890 --> 01:02:45,390
really interesting things is that most

1282
01:02:45,390 --> 01:02:47,430
people think of evolution as kind of

1283
01:02:47,430 --> 01:02:49,290
competition that you like to get a

1284
01:02:49,290 --> 01:02:50,790
better cheetah you have to be faster

1285
01:02:50,790 --> 01:02:52,260
than the other cheetah and you get this

1286
01:02:52,260 --> 01:02:54,270
race - faster faster cheetahs but one of

1287
01:02:54,270 --> 01:02:55,380
the really interesting things that

1288
01:02:55,380 --> 01:02:56,640
happen in nature with these algorithms

1289
01:02:56,640 --> 01:02:58,500
are trying to capture is that they're

1290
01:02:58,500 --> 01:03:00,720
divergent because you can win the boys

1291
01:03:00,720 --> 01:03:02,310
by being up faster cheetah but you can

1292
01:03:02,310 --> 01:03:03,900
also R in the waist by swimming to an

1293
01:03:03,900 --> 01:03:05,760
island where there are no other cats and

1294
01:03:05,760 --> 01:03:07,230
all of a sudden like there's no

1295
01:03:07,230 --> 01:03:08,790
competition at all you have avoided

1296
01:03:08,790 --> 01:03:09,930
competition and that allows you to

1297
01:03:09,930 --> 01:03:11,610
radiate out and specialize and have an

1298
01:03:11,610 --> 01:03:14,550
opportunity to kind of maybe figure out

1299
01:03:14,550 --> 01:03:15,870
a totally different solution to a

1300
01:03:15,870 --> 01:03:17,040
problem it has nothing to do with being

1301
01:03:17,040 --> 01:03:19,260
a faster cheetah and so what you see in

1302
01:03:19,260 --> 01:03:21,480
nature is the creation of Nicias on the

1303
01:03:21,480 --> 01:03:23,040
backs of niches on the backs of niches

1304
01:03:23,040 --> 01:03:25,590
that once you have for example tall

1305
01:03:25,590 --> 01:03:27,450
leaves you can like solve that niche by

1306
01:03:27,450 --> 01:03:28,920
being a giraffe or by being a

1307
01:03:28,920 --> 01:03:30,750
caterpillar and it's not all about

1308
01:03:30,750 --> 01:03:32,310
optimization to get better and better

1309
01:03:32,310 --> 01:03:34,080
and better but actually that there are

1310
01:03:34,080 --> 01:03:36,120
all sorts of opportunities to avoid

1311
01:03:36,120 --> 01:03:37,920
competition and come up with a wildly

1312
01:03:37,920 --> 01:03:40,020
different solution and I would speculate

1313
01:03:40,020 --> 01:03:41,550
and this is a may be totally

1314
01:03:41,550 --> 01:03:43,350
controversial I shouldn't be speculating

1315
01:03:43,350 --> 01:03:44,790
live in front of all these people

1316
01:03:44,790 --> 01:03:45,450
but if

1317
01:03:45,450 --> 01:03:47,520
just set up the reward function to be

1318
01:03:47,520 --> 01:03:50,280
like you know like distance like

1319
01:03:50,280 --> 01:03:52,230
focusing on reading letter as far away

1320
01:03:52,230 --> 01:03:54,119
like human vision and that's all you

1321
01:03:54,119 --> 01:03:55,619
hammered on you wouldn't have gotten it

1322
01:03:55,619 --> 01:03:57,869
without the diversion like tons and tons

1323
01:03:57,869 --> 01:03:59,790
of niches sometimes it benefited from a

1324
01:03:59,790 --> 01:04:01,140
light spot or detecting a shadow

1325
01:04:01,140 --> 01:04:02,790
swimming over me and all these different

1326
01:04:02,790 --> 01:04:04,950
and optimization problems we wouldn't

1327
01:04:04,950 --> 01:04:06,780
have gotten the frequent conversion

1328
01:04:06,780 --> 01:04:08,550
evolution of vision which was a really

1329
01:04:08,550 --> 01:04:10,650
complicated thing because there would

1330
01:04:10,650 --> 01:04:12,119
have been a deception and local optima

1331
01:04:12,119 --> 01:04:13,230
we would have gotten stuck on them it's

1332
01:04:13,230 --> 01:04:14,940
because of this diversions that we got

1333
01:04:14,940 --> 01:04:16,980
convergent evolution of eyes over and

1334
01:04:16,980 --> 01:04:18,690
over and over again we have one more

1335
01:04:18,690 --> 01:04:20,160
minute unfortunately so let's take one

1336
01:04:20,160 --> 01:04:21,359
more question that will hold the rest of

1337
01:04:21,359 --> 01:04:23,369
the questions for the second Q&A if you

1338
01:04:23,369 --> 01:04:24,750
don't mind then you've been waiting

1339
01:04:24,750 --> 01:04:28,500
patiently over there testing all right

1340
01:04:28,500 --> 01:04:30,570
you kind of spoke about this just right

1341
01:04:30,570 --> 01:04:35,190
now but when you were explaining in your

1342
01:04:35,190 --> 01:04:37,349
talk you were talking about multiple

1343
01:04:37,349 --> 01:04:38,460
objective problems

1344
01:04:38,460 --> 01:04:40,200
what does this look like for a many

1345
01:04:40,200 --> 01:04:42,390
objective problem and then following

1346
01:04:42,390 --> 01:04:43,740
that does that even matter when you're

1347
01:04:43,740 --> 01:04:49,349
talking about novelty so I think all of

1348
01:04:49,349 --> 01:04:51,180
these ideas apply even better with many

1349
01:04:51,180 --> 01:04:52,440
objective problems so one of the things

1350
01:04:52,440 --> 01:04:53,790
that I wanted to kind of convey in that

1351
01:04:53,790 --> 01:04:55,650
matter that innovation engines plot it's

1352
01:04:55,650 --> 01:04:58,109
like the more problems that you add do

1353
01:04:58,109 --> 01:04:59,819
these things putting aside compute which

1354
01:04:59,819 --> 01:05:01,619
is a legitimate concern that we you know

1355
01:05:01,619 --> 01:05:02,670
want to talk about but putting aside

1356
01:05:02,670 --> 01:05:04,740
compute the more the merrier because you

1357
01:05:04,740 --> 01:05:06,180
have more curricula you have more

1358
01:05:06,180 --> 01:05:07,560
opportunities for goal switching you

1359
01:05:07,560 --> 01:05:08,970
have more opportunities to kind of go

1360
01:05:08,970 --> 01:05:10,920
around local optima and then come back

1361
01:05:10,920 --> 01:05:13,020
and solve a problem and these things

1362
01:05:13,020 --> 01:05:14,849
ultimately you know put if you had

1363
01:05:14,849 --> 01:05:16,170
enough compute you could put in a

1364
01:05:16,170 --> 01:05:17,640
million different objectives and you get

1365
01:05:17,640 --> 01:05:19,230
a million two wildly different solutions

1366
01:05:19,230 --> 01:05:20,369
but it's not like doing a million

1367
01:05:20,369 --> 01:05:22,319
separate optimizations you're sharing

1368
01:05:22,319 --> 01:05:24,210
compute you have like innovations that

1369
01:05:24,210 --> 01:05:26,160
kind of get built upon and built upon so

1370
01:05:26,160 --> 01:05:27,510
to some extent it's like a complexity

1371
01:05:27,510 --> 01:05:29,250
ratchet if you will where you get more

1372
01:05:29,250 --> 01:05:30,720
and more complex and more and better

1373
01:05:30,720 --> 01:05:32,460
things kind of over time fanning out

1374
01:05:32,460 --> 01:05:34,079
through the space of you know

1375
01:05:34,079 --> 01:05:35,430
potentially an infinite number of

1376
01:05:35,430 --> 01:05:36,660
objectives and we didn't have to worry

1377
01:05:36,660 --> 01:05:38,880
about compute so I think there's a lot

1378
01:05:38,880 --> 01:05:40,440
of healthy this is probably in my

1379
01:05:40,440 --> 01:05:41,880
opinion the best way most of the multi

1380
01:05:41,880 --> 01:05:43,079
objective algorithms don't scale very

1381
01:05:43,079 --> 01:05:44,760
well too many objectives but these

1382
01:05:44,760 --> 01:05:46,230
things scale beautifully you just pour

1383
01:05:46,230 --> 01:05:47,550
and more compute and you get more

1384
01:05:47,550 --> 01:05:50,369
performance okay with that we're going

1385
01:05:50,369 --> 01:05:52,230
to please save your questions I know

1386
01:05:52,230 --> 01:05:53,430
there are a lot and we've sorry to cut

1387
01:05:53,430 --> 01:05:54,599
them off but we'll have plenty of time

1388
01:05:54,599 --> 01:05:56,190
afterwards for more we're not going to

1389
01:05:56,190 --> 01:05:57,160
hear from Ken Stan

1390
01:05:57,160 --> 01:05:59,319
on a variety of fascinating subjects

1391
01:05:59,319 --> 01:06:01,869
including first up I believe open-ended

1392
01:06:01,869 --> 01:06:04,019
this

1393
01:06:11,510 --> 01:06:14,140
yes

1394
01:06:18,319 --> 01:06:22,880
okay and I think that a tutorial on

1395
01:06:22,880 --> 01:06:24,829
population based search would not be

1396
01:06:24,829 --> 01:06:28,130
complete without some discussion of the

1397
01:06:28,130 --> 01:06:30,169
the challenge of open-endedness and I

1398
01:06:30,169 --> 01:06:31,519
called the grand challenge of open

1399
01:06:31,519 --> 01:06:32,959
endedness and I'm glad to have this

1400
01:06:32,959 --> 01:06:35,119
opportunity to talk about this this

1401
01:06:35,119 --> 01:06:36,739
grand challenge because a lot of people

1402
01:06:36,739 --> 01:06:38,539
don't really know about it but it's

1403
01:06:38,539 --> 01:06:40,819
really a fundamental and exciting

1404
01:06:40,819 --> 01:06:42,829
opportunity and I hope I can encourage

1405
01:06:42,829 --> 01:06:44,809
some people to think about it who

1406
01:06:44,809 --> 01:06:46,939
weren't aware of the of the challenge

1407
01:06:46,939 --> 01:06:49,579
that I'm about to describe so we've been

1408
01:06:49,579 --> 01:06:51,439
talking about divergent search really I

1409
01:06:51,439 --> 01:06:53,329
mean we're we're more familiar with

1410
01:06:53,329 --> 01:06:54,709
thinking convergently but we've been

1411
01:06:54,709 --> 01:06:56,419
talking about these divergent algorithms

1412
01:06:56,419 --> 01:06:59,150
that try to find many interesting points

1413
01:06:59,150 --> 01:07:00,499
in a space and sort of show what's

1414
01:07:00,499 --> 01:07:03,890
possible or at least of any interest but

1415
01:07:03,890 --> 01:07:06,529
if you think about it in any given

1416
01:07:06,529 --> 01:07:08,839
domain if we choose a domain like say

1417
01:07:08,839 --> 01:07:10,459
warp robots that we want to be able to

1418
01:07:10,459 --> 01:07:13,489
walk in different ways what is possible

1419
01:07:13,489 --> 01:07:15,890
is at least of any interest to us is

1420
01:07:15,890 --> 01:07:18,499
finite if we choose any given domain the

1421
01:07:18,499 --> 01:07:20,239
amount of quadrupedal gates that we can

1422
01:07:20,239 --> 01:07:22,999
find that are of any interest and so it

1423
01:07:22,999 --> 01:07:24,409
is interesting to think about whether

1424
01:07:24,409 --> 01:07:26,029
there are algorithms that don't just

1425
01:07:26,029 --> 01:07:29,419
find what's possible but also invent

1426
01:07:29,419 --> 01:07:32,119
endless new possibilities in other words

1427
01:07:32,119 --> 01:07:34,309
if we found all the possible ways that a

1428
01:07:34,309 --> 01:07:35,839
quadruped ed can walk then let's move

1429
01:07:35,839 --> 01:07:37,519
past quadrupeds and find a new problem

1430
01:07:37,519 --> 01:07:40,009
and use the skills that we've gained to

1431
01:07:40,009 --> 01:07:43,039
solve new problems and forever and this

1432
01:07:43,039 --> 01:07:44,299
is open-endedness and I'm going to sort

1433
01:07:44,299 --> 01:07:47,049
of illustrate it in some more depth so

1434
01:07:47,049 --> 01:07:49,849
QD which we've been talking about seems

1435
01:07:49,849 --> 01:07:52,279
to get close to this issue but it's not

1436
01:07:52,279 --> 01:07:55,729
quite there because this is now this is

1437
01:07:55,729 --> 01:07:57,979
not how to learn something like this is

1438
01:07:57,979 --> 01:07:59,390
usually what would be doing machine

1439
01:07:59,390 --> 01:08:00,679
learning as we say we have problems

1440
01:08:00,679 --> 01:08:02,150
we're going to try to learn solutions to

1441
01:08:02,150 --> 01:08:03,919
these problems but really this is like

1442
01:08:03,919 --> 01:08:05,959
is there such a thing as an algorithm

1443
01:08:05,959 --> 01:08:09,169
that will learn everything and so like

1444
01:08:09,169 --> 01:08:10,219
we can think about something like a

1445
01:08:10,219 --> 01:08:11,749
human learning to play a video game I

1446
01:08:11,749 --> 01:08:12,979
mean that's inspired a lot of

1447
01:08:12,979 --> 01:08:14,239
reinforcement learning we've learnt

1448
01:08:14,239 --> 01:08:15,919
we've seen algorithms learned to play

1449
01:08:15,919 --> 01:08:18,319
video games and that's interesting but

1450
01:08:18,319 --> 01:08:20,270
the history of all of human invention is

1451
01:08:20,270 --> 01:08:23,000
beyond just interesting in the history

1452
01:08:23,000 --> 01:08:24,380
of human invention is something that

1453
01:08:24,380 --> 01:08:28,069
humans did and so there are algorithmic

1454
01:08:28,069 --> 01:08:29,988
principles behind that kind of a

1455
01:08:29,988 --> 01:08:31,910
or something like natural evolution

1456
01:08:31,910 --> 01:08:34,100
which is the ongoing creation of all the

1457
01:08:34,100 --> 01:08:35,569
diversity of life on earth retrieve

1458
01:08:35,569 --> 01:08:37,819
alluded to before and this talk and so

1459
01:08:37,819 --> 01:08:40,520
like this Tree of Life is interesting in

1460
01:08:40,520 --> 01:08:42,710
some sense because it's only one run of

1461
01:08:42,710 --> 01:08:45,439
something it's not like there's a

1462
01:08:45,439 --> 01:08:47,238
separate run for every creature and we

1463
01:08:47,238 --> 01:08:48,380
found all these creatures through

1464
01:08:48,380 --> 01:08:50,270
different optimizations rather this

1465
01:08:50,270 --> 01:08:51,738
isn't actually this isn't actually

1466
01:08:51,738 --> 01:08:53,569
optimization this is something else this

1467
01:08:53,569 --> 01:08:55,819
is open-endedness in a single run going

1468
01:08:55,819 --> 01:08:57,830
more than a billion years and it never

1469
01:08:57,830 --> 01:09:00,020
seems to stop inventing new things and

1470
01:09:00,020 --> 01:09:01,759
in fact it's interesting just to

1471
01:09:01,759 --> 01:09:04,009
consider that this doesn't require human

1472
01:09:04,009 --> 01:09:06,170
intelligence like a process like this

1473
01:09:06,170 --> 01:09:07,790
like this evolutionary process of course

1474
01:09:07,790 --> 01:09:09,589
there was not human intelligence behind

1475
01:09:09,589 --> 01:09:11,210
it and yet it's the most prolific

1476
01:09:11,210 --> 01:09:13,219
creative process that probably we've

1477
01:09:13,219 --> 01:09:15,770
ever seen and yet somewhere inside of

1478
01:09:15,770 --> 01:09:17,060
that there's human level intelligence

1479
01:09:17,060 --> 01:09:19,520
like this this tiny moment in this

1480
01:09:19,520 --> 01:09:22,189
endless saga and yet it is created by

1481
01:09:22,189 --> 01:09:23,960
something that itself does not require a

1482
01:09:23,960 --> 01:09:26,029
human level and so basically what a

1483
01:09:26,029 --> 01:09:27,410
process like this is is basically a

1484
01:09:27,410 --> 01:09:29,509
process of endless surprises but you

1485
01:09:29,509 --> 01:09:31,100
can't predict at the outset or at any

1486
01:09:31,100 --> 01:09:32,450
event point where it might go in the

1487
01:09:32,450 --> 01:09:35,390
future and it just keeps going and going

1488
01:09:35,390 --> 01:09:37,250
and look at the things that it creates

1489
01:09:37,250 --> 01:09:40,100
like these are really really remarkable

1490
01:09:40,100 --> 01:09:42,140
and amazing discoveries beyond our

1491
01:09:42,140 --> 01:09:44,330
capabilities in engineering today like

1492
01:09:44,330 --> 01:09:47,060
photosynthesis or flight the flight of

1493
01:09:47,060 --> 01:09:49,850
birds or human level intelligence in the

1494
01:09:49,850 --> 01:09:52,549
brain all in one single run very

1495
01:09:52,549 --> 01:09:54,469
different divergent types of discoveries

1496
01:09:54,469 --> 01:09:56,810
but all in the same optimization process

1497
01:09:56,810 --> 01:10:00,320
now something like QD seems to move in a

1498
01:10:00,320 --> 01:10:01,910
direction like this right because it's

1499
01:10:01,910 --> 01:10:03,170
saying that like we're going to be

1500
01:10:03,170 --> 01:10:04,730
fanning out into the space of what's

1501
01:10:04,730 --> 01:10:05,930
possible and trying to collect the

1502
01:10:05,930 --> 01:10:08,210
highest quality we can all across that

1503
01:10:08,210 --> 01:10:11,960
space but this isn't really like QD if

1504
01:10:11,960 --> 01:10:13,730
you think about it because QD doesn't

1505
01:10:13,730 --> 01:10:16,489
invent new problems like we made we may

1506
01:10:16,489 --> 01:10:18,620
solve the problem of ambulation on land

1507
01:10:18,620 --> 01:10:19,880
but that doesn't mean anything about

1508
01:10:19,880 --> 01:10:22,120
flight and we never would go there and

1509
01:10:22,120 --> 01:10:24,920
it and there's some other ideas that are

1510
01:10:24,920 --> 01:10:26,239
floating around that actually are

1511
01:10:26,239 --> 01:10:28,640
related to open endedness but none of

1512
01:10:28,640 --> 01:10:31,330
them are quite there like reasons again

1513
01:10:31,330 --> 01:10:33,980
again does seem to generate new stuff

1514
01:10:33,980 --> 01:10:35,270
right I mean it can generate images

1515
01:10:35,270 --> 01:10:37,610
you've never seen before for example but

1516
01:10:37,610 --> 01:10:39,590
if you think about it if you exposed

1517
01:10:39,590 --> 01:10:41,760
again to billions of flatworms and

1518
01:10:41,760 --> 01:10:43,349
are actually our ancestors that we

1519
01:10:43,349 --> 01:10:45,599
evolved from flatworms you'll never see

1520
01:10:45,599 --> 01:10:48,030
a human come out of it because what

1521
01:10:48,030 --> 01:10:50,070
again does interpolates among the points

1522
01:10:50,070 --> 01:10:51,900
that it's already seen it will not

1523
01:10:51,900 --> 01:10:53,670
extrapolate billions of years into the

1524
01:10:53,670 --> 01:10:55,519
future to something truly new and novel

1525
01:10:55,519 --> 01:10:58,289
and so there's something beyond this

1526
01:10:58,289 --> 01:11:00,780
kind of generativity that we're talking

1527
01:11:00,780 --> 01:11:01,710
about when we're talking about open

1528
01:11:01,710 --> 01:11:04,409
endedness there are also ideas like self

1529
01:11:04,409 --> 01:11:06,630
play which is also related to something

1530
01:11:06,630 --> 01:11:07,949
called coevolution which we'll talk

1531
01:11:07,949 --> 01:11:11,699
about a bit more both of them which

1532
01:11:11,699 --> 01:11:14,789
which I also touch sort of on the road

1533
01:11:14,789 --> 01:11:16,880
towards this open endedness concept

1534
01:11:16,880 --> 01:11:19,469
which is that like if you have a

1535
01:11:19,469 --> 01:11:20,789
competition where things are playing

1536
01:11:20,789 --> 01:11:22,530
against each other you get this kind of

1537
01:11:22,530 --> 01:11:23,820
arms race dynamic where there's a

1538
01:11:23,820 --> 01:11:25,679
ratcheting effect and maybe there's

1539
01:11:25,679 --> 01:11:27,119
something in there where you get a

1540
01:11:27,119 --> 01:11:29,639
diversity of strategies that then fan

1541
01:11:29,639 --> 01:11:30,780
out into the space of what's possible

1542
01:11:30,780 --> 01:11:33,960
but the thing is even there like if you

1543
01:11:33,960 --> 01:11:35,250
have something like alphago and it's

1544
01:11:35,250 --> 01:11:36,389
playing go well it's only going to

1545
01:11:36,389 --> 01:11:37,710
improve it go right like you're never

1546
01:11:37,710 --> 01:11:39,300
going to invent a new game and then come

1547
01:11:39,300 --> 01:11:42,210
up with something else and so there will

1548
01:11:42,210 --> 01:11:45,539
never be a new game in town so what kind

1549
01:11:45,539 --> 01:11:48,929
of algorithm is open-endedness and on

1550
01:11:48,929 --> 01:11:50,519
one characterization that I like for

1551
01:11:50,519 --> 01:11:51,659
this is sort of like it's the

1552
01:11:51,659 --> 01:11:53,789
never-ending algorithm and algorithm

1553
01:11:53,789 --> 01:11:55,349
that you would never want to stop and

1554
01:11:55,349 --> 01:11:56,550
that you'd be willing to come back a

1555
01:11:56,550 --> 01:11:57,960
billion years from now and see what's

1556
01:11:57,960 --> 01:11:59,099
happening because it would still be

1557
01:11:59,099 --> 01:12:01,320
interesting and it's interesting to

1558
01:12:01,320 --> 01:12:02,670
consider that there is nothing like that

1559
01:12:02,670 --> 01:12:03,239
right now

1560
01:12:03,239 --> 01:12:04,920
I don't think there's a single algorithm

1561
01:12:04,920 --> 01:12:07,289
someone can point to right now where it

1562
01:12:07,289 --> 01:12:08,820
would be worth coming back in a billion

1563
01:12:08,820 --> 01:12:10,199
years if we could run it for that long

1564
01:12:10,199 --> 01:12:12,269
and earth is kind of this never-ending

1565
01:12:12,269 --> 01:12:15,570
algorithm and so that's sometimes

1566
01:12:15,570 --> 01:12:17,760
referred to as open-ended evolution but

1567
01:12:17,760 --> 01:12:19,469
I think we should more generally talk

1568
01:12:19,469 --> 01:12:20,429
about open-endedness

1569
01:12:20,429 --> 01:12:22,980
because this isn't just about evolution

1570
01:12:22,980 --> 01:12:25,530
although we used it as a motivator this

1571
01:12:25,530 --> 01:12:27,570
is about all kinds of processes that

1572
01:12:27,570 --> 01:12:30,300
have this property like open-endedness

1573
01:12:30,300 --> 01:12:32,250
refers to like the history of all of

1574
01:12:32,250 --> 01:12:34,380
human innovation all of the inventions

1575
01:12:34,380 --> 01:12:35,820
that we've ever created in a single

1576
01:12:35,820 --> 01:12:38,519
process it's not an optimization process

1577
01:12:38,519 --> 01:12:40,050
where there's one uber invention that

1578
01:12:40,050 --> 01:12:41,309
we're trying to aim towards and

1579
01:12:41,309 --> 01:12:42,630
everything else is just a stepping stone

1580
01:12:42,630 --> 01:12:44,610
to that rather we're just fanning out in

1581
01:12:44,610 --> 01:12:46,380
diverging and building on each other's

1582
01:12:46,380 --> 01:12:49,829
discoveries with no end in mind or the

1583
01:12:49,829 --> 01:12:51,150
history of art or science or

1584
01:12:51,150 --> 01:12:53,309
architecture etc like all of these

1585
01:12:53,309 --> 01:12:54,520
things that have these

1586
01:12:54,520 --> 01:12:56,710
these kinds of diversity of divergent

1587
01:12:56,710 --> 01:12:58,810
outputs are open-ended processes that

1588
01:12:58,810 --> 01:13:00,670
don't end and just keep on building and

1589
01:13:00,670 --> 01:13:01,780
extrapolating from where they've been

1590
01:13:01,780 --> 01:13:05,200
and so you know why don't we create

1591
01:13:05,200 --> 01:13:07,900
these kinds of algorithms why do we only

1592
01:13:07,900 --> 01:13:10,330
try to solve problems why don't we

1593
01:13:10,330 --> 01:13:16,420
create something that can do this and so

1594
01:13:16,420 --> 01:13:20,110
actually there is this there is this one

1595
01:13:20,110 --> 01:13:22,120
community which is which is a very sort

1596
01:13:22,120 --> 01:13:25,120
of small niche community which many have

1597
01:13:25,120 --> 01:13:26,410
probably not heard of which which has

1598
01:13:26,410 --> 01:13:28,180
been studying at least the open-ended

1599
01:13:28,180 --> 01:13:31,960
evolution aspect and it's called oae and

1600
01:13:31,960 --> 01:13:33,640
there you can see like a graphic from

1601
01:13:33,640 --> 01:13:36,040
one of their meetings there and so it's

1602
01:13:36,040 --> 01:13:38,200
but it's very it's very small and it's

1603
01:13:38,200 --> 01:13:40,270
and it's not mainstream and most people

1604
01:13:40,270 --> 01:13:42,430
don't know about it and it's a shame

1605
01:13:42,430 --> 01:13:44,770
that this is true I think because if you

1606
01:13:44,770 --> 01:13:46,330
think about what open-ended evolution is

1607
01:13:46,330 --> 01:13:48,100
this is actually the power of creation

1608
01:13:48,100 --> 01:13:50,500
literally we're talking about like a

1609
01:13:50,500 --> 01:13:52,300
process that created all of living

1610
01:13:52,300 --> 01:13:54,430
nature and this could be potentially

1611
01:13:54,430 --> 01:13:55,900
transformative if we could harness

1612
01:13:55,900 --> 01:13:57,610
processes like this or create algorithms

1613
01:13:57,610 --> 01:13:59,380
like this that you would never want to

1614
01:13:59,380 --> 01:14:01,210
turn off because you'd have boundless

1615
01:14:01,210 --> 01:14:02,530
creativity on-demand

1616
01:14:02,530 --> 01:14:04,360
discoveries beyond the scope of

1617
01:14:04,360 --> 01:14:06,220
optimization because as we've seen

1618
01:14:06,220 --> 01:14:08,230
through QD and so forth there are

1619
01:14:08,230 --> 01:14:10,420
deceptive problems like especially the

1620
01:14:10,420 --> 01:14:12,190
extremely ambitious things like human

1621
01:14:12,190 --> 01:14:14,350
level intelligence where probably the

1622
01:14:14,350 --> 01:14:15,850
things the stepping stones you need to

1623
01:14:15,850 --> 01:14:17,770
traverse to lead to them don't look like

1624
01:14:17,770 --> 01:14:19,150
they actually would be the things you'd

1625
01:14:19,150 --> 01:14:21,430
want to optimize to get there and so

1626
01:14:21,430 --> 01:14:23,140
open-endedness is the kind of thing that

1627
01:14:23,140 --> 01:14:26,290
traverses those stepping stones so I

1628
01:14:26,290 --> 01:14:28,060
would say that like to create a process

1629
01:14:28,060 --> 01:14:29,380
like this is a huge challenge

1630
01:14:29,380 --> 01:14:30,910
algorithmically and it's a grand

1631
01:14:30,910 --> 01:14:33,130
challenge that is on the scale of AI in

1632
01:14:33,130 --> 01:14:35,650
fact it may be the path to AI itself

1633
01:14:35,650 --> 01:14:38,410
because the only example we have of

1634
01:14:38,410 --> 01:14:40,870
creating intelligence at our level is an

1635
01:14:40,870 --> 01:14:43,510
open-ended process so why does it get so

1636
01:14:43,510 --> 01:14:45,310
little attention then this concept of

1637
01:14:45,310 --> 01:14:49,270
open-endedness well actually one one

1638
01:14:49,270 --> 01:14:51,370
problem like for this field to the

1639
01:14:51,370 --> 01:14:53,200
extent that it's been studied so far is

1640
01:14:53,200 --> 01:14:55,590
that a lot of what we've seen so far in

1641
01:14:55,590 --> 01:14:57,700
direct research on the open ended

1642
01:14:57,700 --> 01:14:59,230
processes and it has been in what

1643
01:14:59,230 --> 01:15:01,060
they've been called like a life worlds

1644
01:15:01,060 --> 01:15:03,130
or artificial life worlds which are like

1645
01:15:03,130 --> 01:15:05,140
these little ecological simulations and

1646
01:15:05,140 --> 01:15:07,489
the problem is that when P

1647
01:15:07,489 --> 01:15:09,530
see this they usually think of this as

1648
01:15:09,530 --> 01:15:11,060
sort of like a completely different

1649
01:15:11,060 --> 01:15:12,890
problem than something that we would be

1650
01:15:12,890 --> 01:15:14,210
interested in machine learning

1651
01:15:14,210 --> 01:15:15,710
they're like little simulators maybe

1652
01:15:15,710 --> 01:15:17,450
somebody's using a little toy to learn

1653
01:15:17,450 --> 01:15:19,340
something about biology maybe something

1654
01:15:19,340 --> 01:15:21,620
about ecology but it's unfortunate

1655
01:15:21,620 --> 01:15:23,270
because actually these are about

1656
01:15:23,270 --> 01:15:25,580
something bigger which is to truly

1657
01:15:25,580 --> 01:15:27,860
understand what actually bootstraps you

1658
01:15:27,860 --> 01:15:29,630
into a process that just explodes in

1659
01:15:29,630 --> 01:15:31,880
complexity forever and if you think

1660
01:15:31,880 --> 01:15:32,780
about it like that

1661
01:15:32,780 --> 01:15:34,670
then this is actually like a really deep

1662
01:15:34,670 --> 01:15:36,680
and interesting problem and it's kind of

1663
01:15:36,680 --> 01:15:39,830
unfortunate that we have sort of not

1664
01:15:39,830 --> 01:15:41,270
appreciated with this with the really

1665
01:15:41,270 --> 01:15:43,280
the deeper fundamental insight is that

1666
01:15:43,280 --> 01:15:44,810
we're seeking behind these kinds of

1667
01:15:44,810 --> 01:15:46,160
things because I think there could have

1668
01:15:46,160 --> 01:15:48,770
been a larger community involved in

1669
01:15:48,770 --> 01:15:50,090
thinking about how to create something

1670
01:15:50,090 --> 01:15:52,130
like this and so really the point is it

1671
01:15:52,130 --> 01:15:54,200
doesn't have to be a world I mean you

1672
01:15:54,200 --> 01:15:55,430
look at these worlds and you see it's

1673
01:15:55,430 --> 01:15:56,660
not the kind of work that I do I don't

1674
01:15:56,660 --> 01:15:57,920
do that kind of work like a little

1675
01:15:57,920 --> 01:15:59,300
creatures running around eating each

1676
01:15:59,300 --> 01:16:00,590
other and eating food and things like

1677
01:16:00,590 --> 01:16:02,630
that but it doesn't have to be a world a

1678
01:16:02,630 --> 01:16:04,580
world is just a conduit to understanding

1679
01:16:04,580 --> 01:16:06,440
it doesn't even have to be a metaphor

1680
01:16:06,440 --> 01:16:08,300
for organisms on earth you know deep

1681
01:16:08,300 --> 01:16:10,250
learning can and should play a role here

1682
01:16:10,250 --> 01:16:12,890
because we can also imagine gradient

1683
01:16:12,890 --> 01:16:14,900
based processes being open-ended with no

1684
01:16:14,900 --> 01:16:16,670
problem at all that makes total sense

1685
01:16:16,670 --> 01:16:18,950
in fact people are open-ended our

1686
01:16:18,950 --> 01:16:20,750
lifetimes are open-ended many of us

1687
01:16:20,750 --> 01:16:22,370
invent many things in a divergent

1688
01:16:22,370 --> 01:16:23,690
process throughout our lifetime and

1689
01:16:23,690 --> 01:16:25,880
collectively we as society and as a

1690
01:16:25,880 --> 01:16:27,739
society and a culture are behaving

1691
01:16:27,739 --> 01:16:30,890
open-ended Lee so what we're seeking

1692
01:16:30,890 --> 01:16:33,410
then is the fundamental conditions for a

1693
01:16:33,410 --> 01:16:35,180
divergent and creative process that

1694
01:16:35,180 --> 01:16:37,100
would never end and that could be

1695
01:16:37,100 --> 01:16:39,410
applied to anything so not just some

1696
01:16:39,410 --> 01:16:42,170
kind of ecological world simulation like

1697
01:16:42,170 --> 01:16:43,940
think about like the designs of things

1698
01:16:43,940 --> 01:16:45,290
like buildings vehicles furniture

1699
01:16:45,290 --> 01:16:48,860
clothing equipment etc endless designs

1700
01:16:48,860 --> 01:16:50,870
repertoires for controllers like

1701
01:16:50,870 --> 01:16:54,170
vehicles and robots and etc generators

1702
01:16:54,170 --> 01:16:55,640
of things like art and music which

1703
01:16:55,640 --> 01:16:57,410
obviously follow open-ended processes

1704
01:16:57,410 --> 01:16:59,620
the history of both of those fields

1705
01:16:59,620 --> 01:17:01,850
imagine worlds that you could create

1706
01:17:01,850 --> 01:17:04,610
that unfold open-ended Lee so they would

1707
01:17:04,610 --> 01:17:06,380
have all the granularity and originality

1708
01:17:06,380 --> 01:17:08,630
of ecologies on earth I mean these would

1709
01:17:08,630 --> 01:17:10,700
be amazing places to explore because

1710
01:17:10,700 --> 01:17:12,380
they're actually just as open-ended as

1711
01:17:12,380 --> 01:17:14,360
nature we would have a renewed

1712
01:17:14,360 --> 01:17:16,310
understanding and acceleration of the

1713
01:17:16,310 --> 01:17:17,560
process of human invention

1714
01:17:17,560 --> 01:17:19,660
because if we could actually formalize

1715
01:17:19,660 --> 01:17:21,460
algorithmically how processes that are

1716
01:17:21,460 --> 01:17:23,830
open-ended actually work then we would

1717
01:17:23,830 --> 01:17:25,540
understand ourselves better as well and

1718
01:17:25,540 --> 01:17:26,500
how to actually implement those

1719
01:17:26,500 --> 01:17:28,840
processes culturally in a more effective

1720
01:17:28,840 --> 01:17:32,260
way you can imagine human coupled

1721
01:17:32,260 --> 01:17:33,850
open-ended systems so of course

1722
01:17:33,850 --> 01:17:35,290
ultimately we're interested in open

1723
01:17:35,290 --> 01:17:36,670
endedness that will produce things that

1724
01:17:36,670 --> 01:17:39,790
interest us and those kinds of systems

1725
01:17:39,790 --> 01:17:41,830
then would have maybe us in the loop and

1726
01:17:41,830 --> 01:17:45,700
even maybe intelligence itself could be

1727
01:17:45,700 --> 01:17:48,880
one of the outcomes of open endedness we

1728
01:17:48,880 --> 01:17:50,170
can actually discover perhaps

1729
01:17:50,170 --> 01:17:51,580
intelligence through an open-ended

1730
01:17:51,580 --> 01:17:54,040
process or maybe we need to have an open

1731
01:17:54,040 --> 01:17:57,760
end process to do that so like I said we

1732
01:17:57,760 --> 01:17:59,530
talked about QD and qts of step in this

1733
01:17:59,530 --> 01:18:01,150
direction because of its divergence but

1734
01:18:01,150 --> 01:18:03,040
QD algorithms won't invent forever

1735
01:18:03,040 --> 01:18:05,560
because we have to ask what would happen

1736
01:18:05,560 --> 01:18:07,480
when the space of the possible is filled

1737
01:18:07,480 --> 01:18:09,130
and there's only so much of a space

1738
01:18:09,130 --> 01:18:11,950
there and any QD algorithm what causes

1739
01:18:11,950 --> 01:18:15,250
new possibilities to arise and forever

1740
01:18:15,250 --> 01:18:17,380
what would allow that to happen

1741
01:18:17,380 --> 01:18:20,980
virtually forever and the answer is that

1742
01:18:20,980 --> 01:18:22,750
a system that's truly open-ended it

1743
01:18:22,750 --> 01:18:24,760
needs to generate new opportunities and

1744
01:18:24,760 --> 01:18:26,770
search through them at the same time in

1745
01:18:26,770 --> 01:18:28,090
other words there's a missing element

1746
01:18:28,090 --> 01:18:30,340
here which is the new opportunities we

1747
01:18:30,340 --> 01:18:33,040
need new things to do to continually

1748
01:18:33,040 --> 01:18:35,860
have the ability to find new new new

1749
01:18:35,860 --> 01:18:38,830
solutions to problems and so that's why

1750
01:18:38,830 --> 01:18:40,900
earth is open-ended in all of its

1751
01:18:40,900 --> 01:18:43,120
contexts from human culture to evolution

1752
01:18:43,120 --> 01:18:44,980
is because opportunities are being

1753
01:18:44,980 --> 01:18:46,540
generated to do something new at the

1754
01:18:46,540 --> 01:18:48,670
same time as solutions are being

1755
01:18:48,670 --> 01:18:50,200
searched through those opportunity

1756
01:18:50,200 --> 01:18:53,290
spaces and so as an example because

1757
01:18:53,290 --> 01:18:55,060
trees evolved there was an opportunity

1758
01:18:55,060 --> 01:18:57,280
to be giraffes and if there hadn't been

1759
01:18:57,280 --> 01:18:58,930
trees then there wouldn't be an

1760
01:18:58,930 --> 01:19:00,820
opportunity for giraffes and so the

1761
01:19:00,820 --> 01:19:02,410
things that are evolving are creating

1762
01:19:02,410 --> 01:19:04,150
opportunities for new things to evolve

1763
01:19:04,150 --> 01:19:06,640
and this is a continual process and this

1764
01:19:06,640 --> 01:19:08,800
is a milling missing element currently

1765
01:19:08,800 --> 01:19:10,630
in non open-ended types of algorithmic

1766
01:19:10,630 --> 01:19:12,900
processes so how will we achieve

1767
01:19:12,900 --> 01:19:18,310
open-endedness then in algorithms and of

1768
01:19:18,310 --> 01:19:20,230
course this is a great puzzle but great

1769
01:19:20,230 --> 01:19:23,620
puzzles can lead to surprises and so we

1770
01:19:23,620 --> 01:19:25,330
can expect some counterintuitive type of

1771
01:19:25,330 --> 01:19:25,860
insight so

1772
01:19:25,860 --> 01:19:27,750
along this path and I wanted to show you

1773
01:19:27,750 --> 01:19:29,489
one example of something that provide

1774
01:19:29,489 --> 01:19:30,719
some clues because this is actually

1775
01:19:30,719 --> 01:19:32,550
really fun to look at there's very few

1776
01:19:32,550 --> 01:19:34,530
systems I think that exist artificial

1777
01:19:34,530 --> 01:19:37,679
systems that exhibit properties of open

1778
01:19:37,679 --> 01:19:40,350
endedness but this is one that does and

1779
01:19:40,350 --> 01:19:44,310
it's called pick breeder and and it is

1780
01:19:44,310 --> 01:19:45,989
really interesting because it is it is

1781
01:19:45,989 --> 01:19:49,050
an artifact which has open endedness

1782
01:19:49,050 --> 01:19:51,060
inside of it and we can actually go back

1783
01:19:51,060 --> 01:19:52,469
and look at the history and see what

1784
01:19:52,469 --> 01:19:52,980
happened

1785
01:19:52,980 --> 01:19:54,780
but there's a big caveat that I want to

1786
01:19:54,780 --> 01:19:56,489
admit and concede about it which is that

1787
01:19:56,489 --> 01:19:58,020
there's a human in the loop which is

1788
01:19:58,020 --> 01:20:00,239
basically cheating because really what

1789
01:20:00,239 --> 01:20:01,710
we're doing is we're writing on the

1790
01:20:01,710 --> 01:20:03,750
backs of the fact that humans ourselves

1791
01:20:03,750 --> 01:20:05,699
are open-ended I mean we have the

1792
01:20:05,699 --> 01:20:07,739
capacity of open endedness already in

1793
01:20:07,739 --> 01:20:10,020
our intelligence and in our culture and

1794
01:20:10,020 --> 01:20:11,880
so of course we're piggybacking on that

1795
01:20:11,880 --> 01:20:14,340
here and that's important to recognize

1796
01:20:14,340 --> 01:20:15,750
which means you don't fully understand

1797
01:20:15,750 --> 01:20:17,940
how to implement an autonomous version

1798
01:20:17,940 --> 01:20:19,860
of such an algorithm however it's still

1799
01:20:19,860 --> 01:20:21,840
very instructive and interesting to see

1800
01:20:21,840 --> 01:20:24,510
it anyway because we don't we rarely see

1801
01:20:24,510 --> 01:20:26,850
artificial open-ended processes so let's

1802
01:20:26,850 --> 01:20:28,230
take a look at this just for a moment

1803
01:20:28,230 --> 01:20:29,730
and see the kind of thing that it does

1804
01:20:29,730 --> 01:20:32,190
so the main idea here is that we're

1805
01:20:32,190 --> 01:20:33,330
gonna create a system where you just

1806
01:20:33,330 --> 01:20:35,909
breathe pictures but the point is going

1807
01:20:35,909 --> 01:20:37,650
to be that anyone can follow up from

1808
01:20:37,650 --> 01:20:39,480
anyone else's discoveries so there's no

1809
01:20:39,480 --> 01:20:41,610
unified goal for the system so what do I

1810
01:20:41,610 --> 01:20:43,889
mean by breed pictures I mean here each

1811
01:20:43,889 --> 01:20:47,699
of these 15 images is generated by a

1812
01:20:47,699 --> 01:20:50,460
kind of a neural network which is just

1813
01:20:50,460 --> 01:20:52,800
randomized at the start so we have 15

1814
01:20:52,800 --> 01:20:55,020
randomized neural network images this is

1815
01:20:55,020 --> 01:20:57,780
not again this is just a single neural

1816
01:20:57,780 --> 01:20:59,310
network that outputs a single image in

1817
01:20:59,310 --> 01:21:01,170
all cases so these aren't unrelated to

1818
01:21:01,170 --> 01:21:02,130
each other they're just different

1819
01:21:02,130 --> 01:21:04,619
networks that are random I pick one and

1820
01:21:04,619 --> 01:21:06,960
I say okay let's just generate some

1821
01:21:06,960 --> 01:21:08,280
perturbations of the weights of that

1822
01:21:08,280 --> 01:21:10,980
particular image and then we get some

1823
01:21:10,980 --> 01:21:12,929
perturbations and I can pick another and

1824
01:21:12,929 --> 01:21:14,580
we get some perturbations and so forth

1825
01:21:14,580 --> 01:21:19,590
and and so the question is if we

1826
01:21:19,590 --> 01:21:22,790
implement this process in an in a online

1827
01:21:22,790 --> 01:21:26,159
in an internet-based service so the

1828
01:21:26,159 --> 01:21:27,330
people can go on the web and do this

1829
01:21:27,330 --> 01:21:29,550
collectively and if I discover something

1830
01:21:29,550 --> 01:21:31,230
I can publish it and you can branch from

1831
01:21:31,230 --> 01:21:32,820
it and evolve it more they're very

1832
01:21:32,820 --> 01:21:34,290
simple what kind of things do you think

1833
01:21:34,290 --> 01:21:35,710
you can you can find and I mean what

1834
01:21:35,710 --> 01:21:37,660
the space for a second because it's not

1835
01:21:37,660 --> 01:21:39,100
it's not too interesting if you look at

1836
01:21:39,100 --> 01:21:40,870
it like this but it gets really

1837
01:21:40,870 --> 01:21:42,969
interesting if you see what happens when

1838
01:21:42,969 --> 01:21:44,710
you put all these people into this world

1839
01:21:44,710 --> 01:21:48,100
without any final goal and you get this

1840
01:21:48,100 --> 01:21:51,910
and so this is actually I think this is

1841
01:21:51,910 --> 01:21:53,170
kind of hard to believe when if when you

1842
01:21:53,170 --> 01:21:55,150
first see it that you see these kinds of

1843
01:21:55,150 --> 01:21:56,770
images because it's coming from like

1844
01:21:56,770 --> 01:21:58,840
these really modest stub beginnings and

1845
01:21:58,840 --> 01:22:00,550
this is really different from the kind

1846
01:22:00,550 --> 01:22:02,650
of stuff we're generally seeing in deep

1847
01:22:02,650 --> 01:22:04,450
learning for example because you have to

1848
01:22:04,450 --> 01:22:06,489
remember these are the outcomes of

1849
01:22:06,489 --> 01:22:09,010
dozens or maybe at the most hundreds of

1850
01:22:09,010 --> 01:22:11,500
iterations right we're used to enormous

1851
01:22:11,500 --> 01:22:13,690
amounts of search thousands or millions

1852
01:22:13,690 --> 01:22:15,160
of iterations of search these are

1853
01:22:15,160 --> 01:22:17,500
extremely small peanuts numbers of

1854
01:22:17,500 --> 01:22:19,570
iterations and yet finding these images

1855
01:22:19,570 --> 01:22:21,670
this is not an output of again this is

1856
01:22:21,670 --> 01:22:23,560
like perturbing something you know forty

1857
01:22:23,560 --> 01:22:24,880
seven times and you get something like

1858
01:22:24,880 --> 01:22:28,420
this something random and so how is this

1859
01:22:28,420 --> 01:22:29,050
happening

1860
01:22:29,050 --> 01:22:31,000
well the explanation is that this is

1861
01:22:31,000 --> 01:22:32,590
what happens when you have genuine

1862
01:22:32,590 --> 01:22:35,080
open-ended search the opportunities that

1863
01:22:35,080 --> 01:22:36,700
this that the search is moving through

1864
01:22:36,700 --> 01:22:38,380
that are basically the brains of the

1865
01:22:38,380 --> 01:22:40,000
individuals who are playing the game and

1866
01:22:40,000 --> 01:22:42,160
so different people like different

1867
01:22:42,160 --> 01:22:44,290
things and different people branch off

1868
01:22:44,290 --> 01:22:45,820
from different points depending on what

1869
01:22:45,820 --> 01:22:47,950
their personal preferences are and so

1870
01:22:47,950 --> 01:22:50,110
what you get is what looks like this

1871
01:22:50,110 --> 01:22:51,580
which is what a biologist might call a

1872
01:22:51,580 --> 01:22:53,440
phylogeny and what you're looking at

1873
01:22:53,440 --> 01:22:55,060
here is you're looking at like each one

1874
01:22:55,060 --> 01:22:56,620
of these connections here is a point

1875
01:22:56,620 --> 01:22:58,420
where one person branched from another's

1876
01:22:58,420 --> 01:23:00,550
discovery and so people are branching

1877
01:23:00,550 --> 01:23:02,320
off of each each other's discoveries in

1878
01:23:02,320 --> 01:23:04,090
a divergent way and you're getting this

1879
01:23:04,090 --> 01:23:05,739
expanding divergent phillup phylogeny

1880
01:23:05,739 --> 01:23:07,870
and that's what explains why you're

1881
01:23:07,870 --> 01:23:09,460
getting this kind of a gallery at the

1882
01:23:09,460 --> 01:23:11,020
end and of course these are just a small

1883
01:23:11,020 --> 01:23:13,030
sampling of thousands of images that

1884
01:23:13,030 --> 01:23:17,920
have been discovered and so what what we

1885
01:23:17,920 --> 01:23:19,750
learned what can we learn looking at

1886
01:23:19,750 --> 01:23:21,760
what happened in a system like this

1887
01:23:21,760 --> 01:23:23,080
because there's so few artificial

1888
01:23:23,080 --> 01:23:24,969
systems like this and here's something

1889
01:23:24,969 --> 01:23:26,350
that we discovered which I think is an

1890
01:23:26,350 --> 01:23:27,790
important insight a fundamental insight

1891
01:23:27,790 --> 01:23:29,770
about open-endedness in general which is

1892
01:23:29,770 --> 01:23:32,110
that in this system people only found

1893
01:23:32,110 --> 01:23:34,600
things that they were not seeking as you

1894
01:23:34,600 --> 01:23:36,280
just try to process that for a second

1895
01:23:36,280 --> 01:23:37,960
it's really counterintuitive and kind of

1896
01:23:37,960 --> 01:23:39,790
astonishing like if you look at a system

1897
01:23:39,790 --> 01:23:41,020
like this and you're looking used to

1898
01:23:41,020 --> 01:23:42,400
thinking about something like gradient

1899
01:23:42,400 --> 01:23:43,540
descent whether you might think about

1900
01:23:43,540 --> 01:23:45,130
well of course we're going to descend

1901
01:23:45,130 --> 01:23:46,840
into the images that are the Optima that

1902
01:23:46,840 --> 01:23:49,179
we're seeking but this is not the case

1903
01:23:49,179 --> 01:23:51,159
all in the system people only found

1904
01:23:51,159 --> 01:23:53,590
things they were not looking for and how

1905
01:23:53,590 --> 01:23:54,999
do I know something like that well I

1906
01:23:54,999 --> 01:23:56,590
know that because I know everything and

1907
01:23:56,590 --> 01:23:58,989
we know everything about every single

1908
01:23:58,989 --> 01:24:00,639
step that was ever taken in the history

1909
01:24:00,639 --> 01:24:02,380
of this entire system so we can look

1910
01:24:02,380 --> 01:24:04,840
back and see and what we see is when we

1911
01:24:04,840 --> 01:24:06,400
look at the stepping stones which means

1912
01:24:06,400 --> 01:24:07,749
that somebody discovered for example

1913
01:24:07,749 --> 01:24:09,309
this which looks like an egg with a hat

1914
01:24:09,309 --> 01:24:11,050
that's what I call it an egg with a hat

1915
01:24:11,050 --> 01:24:13,269
this egg with a hat was branched by

1916
01:24:13,269 --> 01:24:15,099
someone else to get to what looks like a

1917
01:24:15,099 --> 01:24:18,130
teapot and it's in the point here is

1918
01:24:18,130 --> 01:24:20,920
it's inconceivable that the person who

1919
01:24:20,920 --> 01:24:23,170
discovered the egg with a hat could

1920
01:24:23,170 --> 01:24:25,389
possibly have been thinking ah just what

1921
01:24:25,389 --> 01:24:27,280
I need to get a teapot that's

1922
01:24:27,280 --> 01:24:29,380
inconceivable or you can't it or it

1923
01:24:29,380 --> 01:24:31,059
couldn't be it couldn't possibly be the

1924
01:24:31,059 --> 01:24:32,829
case that that the person who branched

1925
01:24:32,829 --> 01:24:34,090
in and got to the teapot was thinking Oh

1926
01:24:34,090 --> 01:24:35,559
finally I needed I needed an egg with a

1927
01:24:35,559 --> 01:24:37,510
hat or I needed this dish to get to a

1928
01:24:37,510 --> 01:24:39,459
skull or I needed like it looks like a

1929
01:24:39,459 --> 01:24:41,559
letter G to get to Jupiter in every

1930
01:24:41,559 --> 01:24:43,389
single case the stepping stone that was

1931
01:24:43,389 --> 01:24:44,949
necessary to get there could not

1932
01:24:44,949 --> 01:24:46,630
possibly have been discovered with the

1933
01:24:46,630 --> 01:24:49,599
final discovery in mind I try to just

1934
01:24:49,599 --> 01:24:51,999
digest that because not it's both

1935
01:24:51,999 --> 01:24:53,949
fascinating and concerning in some way

1936
01:24:53,949 --> 01:24:55,989
you know because we run a lot of our

1937
01:24:55,989 --> 01:24:57,670
algorithms with the complete opposite

1938
01:24:57,670 --> 01:24:59,469
spirit that we're trying to find

1939
01:24:59,469 --> 01:25:00,909
something and that's the way to guide

1940
01:25:00,909 --> 01:25:02,800
things to get there but this is the

1941
01:25:02,800 --> 01:25:04,360
opposite this is you only get places

1942
01:25:04,360 --> 01:25:06,189
because people are not looking for those

1943
01:25:06,189 --> 01:25:07,719
particular solutions at some pertinent

1944
01:25:07,719 --> 01:25:11,139
certain point in time and so it's

1945
01:25:11,139 --> 01:25:13,420
important sort of like as an insight

1946
01:25:13,420 --> 01:25:15,159
intern about open-endedness as well

1947
01:25:15,159 --> 01:25:16,769
because it tells us something about why

1948
01:25:16,769 --> 01:25:18,630
open-ended systems are so powerful

1949
01:25:18,630 --> 01:25:21,159
because they're not looking for anything

1950
01:25:21,159 --> 01:25:21,909
in particular

1951
01:25:21,909 --> 01:25:25,239
you know the objective of evolution on

1952
01:25:25,239 --> 01:25:28,090
earth is not to create human brains you

1953
01:25:28,090 --> 01:25:30,400
can't find anything in the description

1954
01:25:30,400 --> 01:25:32,050
of evolution that would predict that

1955
01:25:32,050 --> 01:25:33,820
this is a process designed to produce

1956
01:25:33,820 --> 01:25:36,070
human brains and that is why it produced

1957
01:25:36,070 --> 01:25:38,110
human brains and that is why produced

1958
01:25:38,110 --> 01:25:39,429
flight and that is why produced

1959
01:25:39,429 --> 01:25:42,280
photosynthesis etc is precisely because

1960
01:25:42,280 --> 01:25:44,889
it's not trying to and it becomes

1961
01:25:44,889 --> 01:25:47,769
powerful because it is open to

1962
01:25:47,769 --> 01:25:50,439
discovering everything if you're not

1963
01:25:50,439 --> 01:25:51,849
open to discovering everything then

1964
01:25:51,849 --> 01:25:53,320
you're going to discover nothing because

1965
01:25:53,320 --> 01:25:55,539
you'll be deceived and this is why we're

1966
01:25:55,539 --> 01:25:57,699
seeing this bizarre principle emerge in

1967
01:25:57,699 --> 01:25:59,650
this complex space is because if you

1968
01:25:59,650 --> 01:26:01,030
look at the stepping stones that lead

1969
01:26:01,030 --> 01:26:02,980
any particular discovery like the skull

1970
01:26:02,980 --> 01:26:05,620
in this example you will find that if

1971
01:26:05,620 --> 01:26:07,180
you were looking for that you wouldn't

1972
01:26:07,180 --> 01:26:08,710
traverse these stepping stones because

1973
01:26:08,710 --> 01:26:11,110
they're deceptive it doesn't look like

1974
01:26:11,110 --> 01:26:12,640
you're removing two skulls if you find a

1975
01:26:12,640 --> 01:26:14,920
donut so you have to be willing to be

1976
01:26:14,920 --> 01:26:16,750
interested in donuts and not skulls in

1977
01:26:16,750 --> 01:26:18,970
order to get two skulls and this

1978
01:26:18,970 --> 01:26:20,410
actually was one of the inspirations for

1979
01:26:20,410 --> 01:26:24,310
novelty search okay but but then but

1980
01:26:24,310 --> 01:26:25,810
then okay that that's really interesting

1981
01:26:25,810 --> 01:26:29,050
but I remind you that the word there

1982
01:26:29,050 --> 01:26:30,670
weren't any human there were humans

1983
01:26:30,670 --> 01:26:32,350
involved there and that's cheating right

1984
01:26:32,350 --> 01:26:33,730
so it'd be interesting to be able to

1985
01:26:33,730 --> 01:26:35,140
create algorithms with this property

1986
01:26:35,140 --> 01:26:37,510
without humans and so this leads to a

1987
01:26:37,510 --> 01:26:39,220
question that people have asked we're

1988
01:26:39,220 --> 01:26:40,420
interested in open endedness which is

1989
01:26:40,420 --> 01:26:42,070
what are the necessary conditions then

1990
01:26:42,070 --> 01:26:44,440
from a formal perspective if we were

1991
01:26:44,440 --> 01:26:46,120
wanted to write an algorithm like this

1992
01:26:46,120 --> 01:26:48,400
that actually works this way and people

1993
01:26:48,400 --> 01:26:50,020
have hypothesized a whole bunch of

1994
01:26:50,020 --> 01:26:51,790
necessary conditions for open endedness

1995
01:26:51,790 --> 01:26:53,650
it goes back to Waddington who was a

1996
01:26:53,650 --> 01:26:56,620
biologist in 1969 Tim Taylor later

1997
01:26:56,620 --> 01:26:57,910
proposed it proposed a bunch of

1998
01:26:57,910 --> 01:26:59,410
conditions and there's been other

1999
01:26:59,410 --> 01:27:02,080
attempts to propose conditions to get to

2000
01:27:02,080 --> 01:27:03,940
sort of more a formal algorithmic type

2001
01:27:03,940 --> 01:27:05,980
of set of requirements for how do you

2002
01:27:05,980 --> 01:27:07,810
actually create an algorithm that has

2003
01:27:07,810 --> 01:27:10,210
these properties we we made our own

2004
01:27:10,210 --> 01:27:12,820
attempt to myself and Lisa Soros a few

2005
01:27:12,820 --> 01:27:15,390
years ago to prepare some some

2006
01:27:15,390 --> 01:27:19,270
conditions and and so the the

2007
01:27:19,270 --> 01:27:22,510
fundamental goal of this kind of a

2008
01:27:22,510 --> 01:27:25,030
proposal is to describe a system that

2009
01:27:25,030 --> 01:27:26,890
would generate new challenges and how to

2010
01:27:26,890 --> 01:27:28,960
solve them but we need new things to do

2011
01:27:28,960 --> 01:27:31,540
always and we need to be able to solve

2012
01:27:31,540 --> 01:27:32,980
them we need to be able to search for

2013
01:27:32,980 --> 01:27:34,390
new ways to solve them in the spirit of

2014
01:27:34,390 --> 01:27:36,730
something like QD and so this is just

2015
01:27:36,730 --> 01:27:38,800
the this is just for a taste I don't

2016
01:27:38,800 --> 01:27:40,180
want to claim and I certainly don't even

2017
01:27:40,180 --> 01:27:41,950
believe that this is a definitive set of

2018
01:27:41,950 --> 01:27:43,630
conditions because no one has yet

2019
01:27:43,630 --> 01:27:44,800
created something that I think is

2020
01:27:44,800 --> 01:27:46,810
satisfyingly reminiscent of nature or

2021
01:27:46,810 --> 01:27:48,940
human innovation but here's an attempt

2022
01:27:48,940 --> 01:27:50,260
just to give you a taste of like what is

2023
01:27:50,260 --> 01:27:51,400
the thinking like when you're thinking

2024
01:27:51,400 --> 01:27:53,170
about open endedness and algorithms

2025
01:27:53,170 --> 01:27:56,620
without humans in the loop first let's

2026
01:27:56,620 --> 01:27:58,570
say that there's a there has to be some

2027
01:27:58,570 --> 01:28:00,010
minimal criterion to proliferate in

2028
01:28:00,010 --> 01:28:01,660
other words if we're going to move in a

2029
01:28:01,660 --> 01:28:02,830
certain direction which is what I mean

2030
01:28:02,830 --> 01:28:05,050
by proliferate we need some criterion to

2031
01:28:05,050 --> 01:28:06,250
say yes we're going to continue in that

2032
01:28:06,250 --> 01:28:07,600
direction or else we have to shut it off

2033
01:28:07,600 --> 01:28:09,660
because we can't go in every direction

2034
01:28:09,660 --> 01:28:12,670
second individuals have to create novel

2035
01:28:12,670 --> 01:28:14,140
opportunities to satisfy

2036
01:28:14,140 --> 01:28:15,730
minimal criterion this is where the new

2037
01:28:15,730 --> 01:28:17,890
problems comes from like the trees and

2038
01:28:17,890 --> 01:28:20,080
the giraffes it's the individual things

2039
01:28:20,080 --> 01:28:21,430
that we're evolving or that we're

2040
01:28:21,430 --> 01:28:23,140
searching for or that we're optimizing

2041
01:28:23,140 --> 01:28:25,390
inside of this system that need to

2042
01:28:25,390 --> 01:28:26,980
actually create the opportunities to

2043
01:28:26,980 --> 01:28:28,450
find even more new things do we need to

2044
01:28:28,450 --> 01:28:30,100
have that kind of a dynamic that's in

2045
01:28:30,100 --> 01:28:32,560
effect co-evolutionary or self play like

2046
01:28:32,560 --> 01:28:36,070
so third the individuals in the system

2047
01:28:36,070 --> 01:28:37,450
at some point need to decide for

2048
01:28:37,450 --> 01:28:39,370
themselves with what are whom to

2049
01:28:39,370 --> 01:28:40,660
interact and this is because we can't

2050
01:28:40,660 --> 01:28:42,430
project millions or billions of years

2051
01:28:42,430 --> 01:28:44,800
into the future who might be juxtaposed

2052
01:28:44,800 --> 01:28:46,840
with whom like we can't know that the

2053
01:28:46,840 --> 01:28:48,040
drafts will need to interact with the

2054
01:28:48,040 --> 01:28:49,690
trees is to drafts themselves that move

2055
01:28:49,690 --> 01:28:52,060
to the trees and also we need the

2056
01:28:52,060 --> 01:28:53,350
ability to increase the size of

2057
01:28:53,350 --> 01:28:55,090
representation because since this

2058
01:28:55,090 --> 01:28:57,010
process is supposed to go forever we

2059
01:28:57,010 --> 01:28:58,480
have no way of anticipating the

2060
01:28:58,480 --> 01:29:00,190
complexity of the final solutions that

2061
01:29:00,190 --> 01:29:02,230
we might want because there are no final

2062
01:29:02,230 --> 01:29:03,670
solutions it's just going to keep going

2063
01:29:03,670 --> 01:29:06,190
and so just to point out one thing here

2064
01:29:06,190 --> 01:29:07,840
when we talk about with what or whom to

2065
01:29:07,840 --> 01:29:09,160
interact well that's certainly

2066
01:29:09,160 --> 01:29:11,770
reminiscent of coevolution in self play

2067
01:29:11,770 --> 01:29:16,060
and this is a long studied topic and I

2068
01:29:16,060 --> 01:29:17,470
just wanted to highlight that that

2069
01:29:17,470 --> 01:29:19,120
there's a there's a long history of

2070
01:29:19,120 --> 01:29:20,880
what's called co-evolutionary

2071
01:29:20,880 --> 01:29:23,170
co-evolutionary optimization and there's

2072
01:29:23,170 --> 01:29:24,640
also now recently what's called self

2073
01:29:24,640 --> 01:29:25,930
plane these are very tightly related

2074
01:29:25,930 --> 01:29:28,390
actually save in the same field even

2075
01:29:28,390 --> 01:29:29,370
though they're going by different names

2076
01:29:29,370 --> 01:29:32,110
and like in coevolution there were

2077
01:29:32,110 --> 01:29:33,130
different kinds like there was

2078
01:29:33,130 --> 01:29:35,170
competitive cooperative and test based a

2079
01:29:35,170 --> 01:29:37,600
lot of it drone game draws on game

2080
01:29:37,600 --> 01:29:38,980
theory like there's what's called Pareto

2081
01:29:38,980 --> 01:29:41,080
coevolution and then recently we have

2082
01:29:41,080 --> 01:29:43,090
things like self play we have like the

2083
01:29:43,090 --> 01:29:45,430
opening i dodo results alpha go alpha

2084
01:29:45,430 --> 01:29:48,790
star Starcraft etc all of these kinds of

2085
01:29:48,790 --> 01:29:50,980
results from self play and so these

2086
01:29:50,980 --> 01:29:52,930
things would certainly come into our

2087
01:29:52,930 --> 01:29:55,810
understanding of open-ended systems but

2088
01:29:55,810 --> 01:29:58,000
like I said it's not sufficient to just

2089
01:29:58,000 --> 01:29:59,410
look at those kinds of self play

2090
01:29:59,410 --> 01:30:01,180
scenarios because we also have to figure

2091
01:30:01,180 --> 01:30:03,880
out a way to create new opportunities so

2092
01:30:03,880 --> 01:30:05,950
if it's all inside of StarCraft then all

2093
01:30:05,950 --> 01:30:07,510
you'll ever have is Starcraft right

2094
01:30:07,510 --> 01:30:09,040
Starcraft players that get better and

2095
01:30:09,040 --> 01:30:11,080
hopefully over time but we want more

2096
01:30:11,080 --> 01:30:12,940
than just that in an open-ended system

2097
01:30:12,940 --> 01:30:15,070
and so if we look if we say we have the

2098
01:30:15,070 --> 01:30:17,410
right conditions and we have something

2099
01:30:17,410 --> 01:30:19,870
coevolution Airi in some sense then we

2100
01:30:19,870 --> 01:30:22,210
can maybe lead create algorithms that

2101
01:30:22,210 --> 01:30:24,370
exhibit open-ended properties and this

2102
01:30:24,370 --> 01:30:26,489
was one of our earlier first

2103
01:30:26,489 --> 01:30:28,889
to do this it's called minimal criterion

2104
01:30:28,889 --> 01:30:31,199
coevolution which tried to abstract

2105
01:30:31,199 --> 01:30:35,550
these necessary conditions outside of

2106
01:30:35,550 --> 01:30:37,110
like the a live worlds and sort of to

2107
01:30:37,110 --> 01:30:37,980
say let's make an algorithm that's

2108
01:30:37,980 --> 01:30:40,170
totally generic and so the idea was

2109
01:30:40,170 --> 01:30:41,880
we'll have a minimal criterion we'll

2110
01:30:41,880 --> 01:30:43,650
have self generating opportunities and

2111
01:30:43,650 --> 01:30:45,300
we'll have this two population kind of

2112
01:30:45,300 --> 01:30:46,920
idea like there'll be one type of thing

2113
01:30:46,920 --> 01:30:48,929
that's Co evolving with another and one

2114
01:30:48,929 --> 01:30:50,460
thing provides opportunities for the

2115
01:30:50,460 --> 01:30:52,349
other and so the idea here was let's do

2116
01:30:52,349 --> 01:30:54,510
mazes and maze solvers for a first test

2117
01:30:54,510 --> 01:30:56,610
so the mazes are Co evolving with the

2118
01:30:56,610 --> 01:30:58,619
main solvers and the mazes can get

2119
01:30:58,619 --> 01:31:00,119
increasingly complex and the maze

2120
01:31:00,119 --> 01:31:02,130
solvers which are neural networks have

2121
01:31:02,130 --> 01:31:03,869
to have become increasingly complex to

2122
01:31:03,869 --> 01:31:07,289
match and we saw in these runs that we

2123
01:31:07,289 --> 01:31:09,380
could get increasingly complex mazes and

2124
01:31:09,380 --> 01:31:11,639
increasingly complex solutions to those

2125
01:31:11,639 --> 01:31:14,099
mazes and it's interesting at least

2126
01:31:14,099 --> 01:31:16,230
intriguing as an initial hint at what

2127
01:31:16,230 --> 01:31:17,880
could be accomplished if you consider

2128
01:31:17,880 --> 01:31:19,980
that it might be the case

2129
01:31:19,980 --> 01:31:22,590
maybe assert that if we ran this for a

2130
01:31:22,590 --> 01:31:24,329
million years or a billion years or say

2131
01:31:24,329 --> 01:31:26,820
forever theoretically these mazes could

2132
01:31:26,820 --> 01:31:29,550
become as large as the galaxy and the

2133
01:31:29,550 --> 01:31:31,050
neural networks to solve them would come

2134
01:31:31,050 --> 01:31:33,360
with them and so there's some taste of

2135
01:31:33,360 --> 01:31:35,340
the increasing complexity aspect of

2136
01:31:35,340 --> 01:31:37,260
open-endedness in an algorithm like this

2137
01:31:37,260 --> 01:31:39,719
but it's just the beginning and actually

2138
01:31:39,719 --> 01:31:41,159
were gonna see something even more

2139
01:31:41,159 --> 01:31:43,769
recent called poet in a moment that Jeff

2140
01:31:43,769 --> 01:31:45,420
is gonna talk about which is our most

2141
01:31:45,420 --> 01:31:47,639
recent attempt at open endedness but I

2142
01:31:47,639 --> 01:31:49,349
just want to close this section on open

2143
01:31:49,349 --> 01:31:50,940
endedness but just pointing out the

2144
01:31:50,940 --> 01:31:53,340
field is just beginning many challenges

2145
01:31:53,340 --> 01:31:54,989
remain we want to be able to generate

2146
01:31:54,989 --> 01:31:56,880
endless high-quality diverse and

2147
01:31:56,880 --> 01:31:58,409
interesting artifacts and that's

2148
01:31:58,409 --> 01:32:00,480
obviously a huge challenge killer

2149
01:32:00,480 --> 01:32:02,699
applications are critical for motivation

2150
01:32:02,699 --> 01:32:04,530
people want to know why why do you want

2151
01:32:04,530 --> 01:32:06,150
to do this I think we can see some of

2152
01:32:06,150 --> 01:32:08,880
the inspiration inside of things like QD

2153
01:32:08,880 --> 01:32:10,619
and some of the results that Jeff shared

2154
01:32:10,619 --> 01:32:12,719
and but we want to be able to show that

2155
01:32:12,719 --> 01:32:14,820
in the context of a more open-ended type

2156
01:32:14,820 --> 01:32:16,499
of a system why this is very important

2157
01:32:16,499 --> 01:32:18,210
and I think it is important because

2158
01:32:18,210 --> 01:32:19,860
open-ended this may like I said be a

2159
01:32:19,860 --> 01:32:22,590
path towards intelligence itself the

2160
01:32:22,590 --> 01:32:23,969
measurement of success remains

2161
01:32:23,969 --> 01:32:25,320
controversial so this is just an

2162
01:32:25,320 --> 01:32:27,090
interesting problem in itself is how do

2163
01:32:27,090 --> 01:32:28,619
you measure the open endedness

2164
01:32:28,619 --> 01:32:30,599
of a system how open-ended is it and

2165
01:32:30,599 --> 01:32:32,610
there's a lot of argument like within

2166
01:32:32,610 --> 01:32:34,769
the small community so far about how

2167
01:32:34,769 --> 01:32:36,929
this should be measured this is the

2168
01:32:36,929 --> 01:32:38,460
power of creation so it can't be

2169
01:32:38,460 --> 01:32:39,310
understated

2170
01:32:39,310 --> 01:32:41,860
significant this is like all of living

2171
01:32:41,860 --> 01:32:44,200
nature is a product of a single run to

2172
01:32:44,200 --> 01:32:45,340
have that kind of a power

2173
01:32:45,340 --> 01:32:48,910
algorithmically is just profound and so

2174
01:32:48,910 --> 01:32:52,300
when will we harness this power I just

2175
01:32:52,300 --> 01:32:54,040
finally want to point out that we have

2176
01:32:54,040 --> 01:32:55,870
sort of created a non-technical intro

2177
01:32:55,870 --> 01:32:57,670
for those who are interested in open

2178
01:32:57,670 --> 01:32:59,920
engines want to learn more about it it's

2179
01:32:59,920 --> 01:33:01,210
here at this link

2180
01:33:01,210 --> 01:33:02,350
I think these slides will become

2181
01:33:02,350 --> 01:33:04,630
available also so if you want to read a

2182
01:33:04,630 --> 01:33:05,920
little bit more and get some references

2183
01:33:05,920 --> 01:33:09,840
to follow up on and also Joe in my book

2184
01:33:09,840 --> 01:33:12,640
also has a lot of talk about divergent

2185
01:33:12,640 --> 01:33:13,990
search in general if you want to get

2186
01:33:13,990 --> 01:33:15,700
more in depth into some of the stuff

2187
01:33:15,700 --> 01:33:16,810
where we couldn't get into the details

2188
01:33:16,810 --> 01:33:18,850
okay thanks so I think Jeff is gonna now

2189
01:33:18,850 --> 01:33:24,250
follow up and show you poet excellent

2190
01:33:24,250 --> 01:33:25,990
thank you Ken yeah this slides will be

2191
01:33:25,990 --> 01:33:27,910
available and all of the papers that

2192
01:33:27,910 --> 01:33:29,530
we've talked about today will put in a

2193
01:33:29,530 --> 01:33:31,510
giant appendix at the end of citations

2194
01:33:31,510 --> 01:33:32,800
so if you're interested in tracking any

2195
01:33:32,800 --> 01:33:35,640
of them down they will be in the slides

2196
01:33:35,640 --> 01:33:37,990
so I think that you're getting the sense

2197
01:33:37,990 --> 01:33:41,400
that we are really really excited about

2198
01:33:41,400 --> 01:33:44,530
open ended algorithms and trying to

2199
01:33:44,530 --> 01:33:46,840
create algorithms that generate their

2200
01:33:46,840 --> 01:33:48,730
own problems and solutions to those

2201
01:33:48,730 --> 01:33:50,890
problems because we think that that is a

2202
01:33:50,890 --> 01:33:54,070
key to making progress and so what I

2203
01:33:54,070 --> 01:33:55,870
want to show you now is kind of our

2204
01:33:55,870 --> 01:33:58,870
latest salvo in this direction the most

2205
01:33:58,870 --> 01:34:00,100
recent thing that we've done to really

2206
01:34:00,100 --> 01:34:01,900
try to push on this front and it's

2207
01:34:01,900 --> 01:34:03,010
definitely not the final algorithm

2208
01:34:03,010 --> 01:34:04,360
there's lots and lots of research should

2209
01:34:04,360 --> 01:34:05,890
be done but we're really really excited

2210
01:34:05,890 --> 01:34:08,350
about this and so it comes from the idea

2211
01:34:08,350 --> 01:34:11,230
that designing in reinforcement learning

2212
01:34:11,230 --> 01:34:12,580
and machine learning in general we know

2213
01:34:12,580 --> 01:34:14,320
that like data is the rocket fuel of

2214
01:34:14,320 --> 01:34:16,090
success if you want to achieve something

2215
01:34:16,090 --> 01:34:17,590
really ambitious you have to have the

2216
01:34:17,590 --> 01:34:19,390
right data or the right training

2217
01:34:19,390 --> 01:34:21,400
environments so then we started asking

2218
01:34:21,400 --> 01:34:23,590
ourselves if that is so critical then

2219
01:34:23,590 --> 01:34:25,060
can we just have algorithms that

2220
01:34:25,060 --> 01:34:26,920
generate their own data or generate

2221
01:34:26,920 --> 01:34:28,660
their own training environments as they

2222
01:34:28,660 --> 01:34:31,330
go and we think that that's a

2223
01:34:31,330 --> 01:34:32,470
fascinating question and we think that

2224
01:34:32,470 --> 01:34:34,150
it's actually essential to get any we're

2225
01:34:34,150 --> 01:34:36,130
really really ambitious as can just

2226
01:34:36,130 --> 01:34:38,830
describe so our most recent algorithm

2227
01:34:38,830 --> 01:34:41,170
here is this poet algorithm it stands

2228
01:34:41,170 --> 01:34:43,240
for the paired open-ended trailblazer

2229
01:34:43,240 --> 01:34:46,300
and there is a pair of things happening

2230
01:34:46,300 --> 01:34:47,590
there's going to be an algorithm that's

2231
01:34:47,590 --> 01:34:50,219
generating problems or challenges or

2232
01:34:50,219 --> 01:34:52,140
and then there's going to be a separate

2233
01:34:52,140 --> 01:34:54,480
group of things that are being optimized

2234
01:34:54,480 --> 01:34:56,370
to try to solve each of those challenges

2235
01:34:56,370 --> 01:34:59,400
as they get introduced now Ken just

2236
01:34:59,400 --> 01:35:00,270
showed you the minimum criteria

2237
01:35:00,270 --> 01:35:01,949
co-evolution work which is really cool

2238
01:35:01,949 --> 01:35:03,420
because it was the first time that I had

2239
01:35:03,420 --> 01:35:05,239
really realized that you could

2240
01:35:05,239 --> 01:35:07,770
parameterize the training environment

2241
01:35:07,770 --> 01:35:09,480
itself and just describe it and then you

2242
01:35:09,480 --> 01:35:11,250
could separately optimize and play in

2243
01:35:11,250 --> 01:35:12,630
this space of what does it mean to be

2244
01:35:12,630 --> 01:35:15,030
the right training environment this

2245
01:35:15,030 --> 01:35:16,410
algorithm takes it a little bit further

2246
01:35:16,410 --> 01:35:17,850
though because what we wanted to add

2247
01:35:17,850 --> 01:35:19,350
back in were some of the things that we

2248
01:35:19,350 --> 01:35:20,730
think are really essential one of them

2249
01:35:20,730 --> 01:35:22,739
is that you continuously optimize within

2250
01:35:22,739 --> 01:35:24,360
a problem so you don't just meet the

2251
01:35:24,360 --> 01:35:25,620
minimum bar but you get better and

2252
01:35:25,620 --> 01:35:26,670
better and better at it over time

2253
01:35:26,670 --> 01:35:28,260
because that may be a stepping stone to

2254
01:35:28,260 --> 01:35:30,660
solving some other problem and we also

2255
01:35:30,660 --> 01:35:32,969
wanted to harness that idea of goal

2256
01:35:32,969 --> 01:35:34,080
switching that I spent so much time

2257
01:35:34,080 --> 01:35:35,640
talking about there you want to be able

2258
01:35:35,640 --> 01:35:37,680
to be going really well on one problem

2259
01:35:37,680 --> 01:35:39,180
but if you happened along the way to

2260
01:35:39,180 --> 01:35:41,190
produce something that's really good on

2261
01:35:41,190 --> 01:35:42,719
another type of problem or you should

2262
01:35:42,719 --> 01:35:44,580
capture that and let the algorithm take

2263
01:35:44,580 --> 01:35:47,010
advantage of that so here's a little

2264
01:35:47,010 --> 01:35:49,170
video that describes hopefully this is

2265
01:35:49,170 --> 01:35:51,600
gonna play this career that it describes

2266
01:35:51,600 --> 01:35:52,770
the algorithm I think it does a really

2267
01:35:52,770 --> 01:35:54,390
good job of summarizing it so it kind of

2268
01:35:54,390 --> 01:35:56,330
is a bit jug drinking from a firehose

2269
01:35:56,330 --> 01:35:59,610
but hopefully we'll just let it run and

2270
01:35:59,610 --> 01:36:02,070
so you see this little agent here this

2271
01:36:02,070 --> 01:36:03,630
is the world we're operating in this is

2272
01:36:03,630 --> 01:36:05,640
just the first world that we play play

2273
01:36:05,640 --> 01:36:08,190
in but we parameterize that environment

2274
01:36:08,190 --> 01:36:09,750
that could those kind of obstacle

2275
01:36:09,750 --> 01:36:11,520
courses and we allow optimization to

2276
01:36:11,520 --> 01:36:13,350
both create different environmental

2277
01:36:13,350 --> 01:36:16,320
challenges and try to invite optimize a

2278
01:36:16,320 --> 01:36:18,180
neural network with deep reinforcement

2279
01:36:18,180 --> 01:36:20,280
learning to solve those challenges and

2280
01:36:20,280 --> 01:36:21,960
all of these different challenges that

2281
01:36:21,960 --> 01:36:24,210
you're seeing here were invented by the

2282
01:36:24,210 --> 01:36:26,940
algorithm as it's running and also the

2283
01:36:26,940 --> 01:36:28,739
agent that is solving that problem was

2284
01:36:28,739 --> 01:36:31,290
also invented at the same time and over

2285
01:36:31,290 --> 01:36:32,910
time these environments get more and

2286
01:36:32,910 --> 01:36:34,230
more complicated like that's actually a

2287
01:36:34,230 --> 01:36:36,630
really really big gap for this agent to

2288
01:36:36,630 --> 01:36:38,250
try to solve and those are really big

2289
01:36:38,250 --> 01:36:40,350
stumps for this little guy to try to

2290
01:36:40,350 --> 01:36:43,800
crawl over and what we find is that this

2291
01:36:43,800 --> 01:36:46,230
system just kind of loves to innovate

2292
01:36:46,230 --> 01:36:48,330
and push its own limits and invent new

2293
01:36:48,330 --> 01:36:49,949
challenges that are right at the limit

2294
01:36:49,949 --> 01:36:51,930
of what it's capable of doing and then

2295
01:36:51,930 --> 01:36:54,030
building off of those skills is learning

2296
01:36:54,030 --> 01:36:55,949
to child go and challenge and take on

2297
01:36:55,949 --> 01:36:57,570
even harder environments like these ones

2298
01:36:57,570 --> 01:36:59,820
here this little creature here has

2299
01:36:59,820 --> 01:37:02,250
little lidar sensors and what you'll see

2300
01:37:02,250 --> 01:37:04,260
is that in some of these videos it kind

2301
01:37:04,260 --> 01:37:06,000
of like like literally like runs up and

2302
01:37:06,000 --> 01:37:08,070
then like leaps over a chasm which is

2303
01:37:08,070 --> 01:37:10,440
quite interesting and impressive to see

2304
01:37:10,440 --> 01:37:12,510
these amazing skills sometimes the

2305
01:37:12,510 --> 01:37:14,310
chasms are basically right at the limit

2306
01:37:14,310 --> 01:37:15,630
of what's even possible given its

2307
01:37:15,630 --> 01:37:18,300
morphology one of the things that we're

2308
01:37:18,300 --> 01:37:19,710
interested in the future is even you

2309
01:37:19,710 --> 01:37:21,420
know simultaneously optimizing the

2310
01:37:21,420 --> 01:37:22,830
bodies of these robots because you could

2311
01:37:22,830 --> 01:37:24,180
imagine that like you maybe you need

2312
01:37:24,180 --> 01:37:28,500
longer legs to go over them so I will

2313
01:37:28,500 --> 01:37:30,210
one of the final things I'll mention

2314
01:37:30,210 --> 01:37:32,010
here is that any of these really

2315
01:37:32,010 --> 01:37:33,840
challenging problems when you go to go

2316
01:37:33,840 --> 01:37:35,550
back and look at it you cannot directly

2317
01:37:35,550 --> 01:37:37,620
optimize to solve that problem if you

2318
01:37:37,620 --> 01:37:41,820
try to do that either by just dropping

2319
01:37:41,820 --> 01:37:43,470
an agent in that environment and trying

2320
01:37:43,470 --> 01:37:44,820
to solve it because there's no curricula

2321
01:37:44,820 --> 01:37:46,410
to get there or by taking kind of like

2322
01:37:46,410 --> 01:37:48,990
what you see is the direct path here are

2323
01:37:48,990 --> 01:37:50,280
some solutions that traditional

2324
01:37:50,280 --> 01:37:52,350
optimization cannot solve but poet does

2325
01:37:52,350 --> 01:37:54,210
find a solution to some of these really

2326
01:37:54,210 --> 01:37:59,190
really crazy environments so um just so

2327
01:37:59,190 --> 01:38:00,660
I want to quickly kind of show you how

2328
01:38:00,660 --> 01:38:02,490
this algorithm works so we start off

2329
01:38:02,490 --> 01:38:04,680
with a parameter vector that describes

2330
01:38:04,680 --> 01:38:06,420
an environment for example how rugged it

2331
01:38:06,420 --> 01:38:08,490
is how wide the gaps how hard tall the

2332
01:38:08,490 --> 01:38:10,860
stumps are and that I'm showing here is

2333
01:38:10,860 --> 01:38:12,870
Phi 1 for environment 1 and it's pretty

2334
01:38:12,870 --> 01:38:14,910
easy because we start easy and then what

2335
01:38:14,910 --> 01:38:16,320
we'll do is we'll launch an optimization

2336
01:38:16,320 --> 01:38:18,180
algorithm for theta 1 which is trying to

2337
01:38:18,180 --> 01:38:19,710
solve that problem and we run it until

2338
01:38:19,710 --> 01:38:21,180
it gets to a certain threshold of

2339
01:38:21,180 --> 01:38:23,580
performance and once it's kind of okay

2340
01:38:23,580 --> 01:38:26,190
once it's decent on that then we create

2341
01:38:26,190 --> 01:38:28,200
a new problem Phi 2 which is maybe a

2342
01:38:28,200 --> 01:38:30,090
somewhat medium difficulty and we'll

2343
01:38:30,090 --> 01:38:32,280
transfer the previous agent into that

2344
01:38:32,280 --> 01:38:33,900
environment to try to start optimizing

2345
01:38:33,900 --> 01:38:35,490
on that new problem because that's a

2346
01:38:35,490 --> 01:38:37,290
good launching off point and then we'll

2347
01:38:37,290 --> 01:38:39,000
try to generate a new environment and we

2348
01:38:39,000 --> 01:38:40,380
have this criteria which is if the

2349
01:38:40,380 --> 01:38:42,090
environment is too hard or too easy for

2350
01:38:42,090 --> 01:38:44,310
the current population of agents then we

2351
01:38:44,310 --> 01:38:46,110
throw it out we say that was that's no

2352
01:38:46,110 --> 01:38:48,750
good so we'll try again will now create

2353
01:38:48,750 --> 01:38:51,480
5 3 which is not too hard or too too

2354
01:38:51,480 --> 01:38:53,640
easy and we'll transfer an agent in for

2355
01:38:53,640 --> 01:38:55,110
example that one there and we'll kind of

2356
01:38:55,110 --> 01:38:56,790
go along in this path now no this is not

2357
01:38:56,790 --> 01:38:58,260
a linear chain at any point we might

2358
01:38:58,260 --> 01:38:59,910
branch off of any one of these current

2359
01:38:59,910 --> 01:39:02,100
challenges with a new problem and the

2360
01:39:02,100 --> 01:39:04,230
question is for example 4 5 4 here which

2361
01:39:04,230 --> 01:39:06,540
input agent should we transfer in well

2362
01:39:06,540 --> 01:39:08,520
in reality we try them all and so it

2363
01:39:08,520 --> 01:39:10,470
happens to be that phi theta 2 here is

2364
01:39:10,470 --> 01:39:12,330
the best parameter vector just to launch

2365
01:39:12,330 --> 01:39:14,430
optimization off and so that transfers

2366
01:39:14,430 --> 01:39:15,440
in here and the

2367
01:39:15,440 --> 01:39:17,239
this continues to increasingly generate

2368
01:39:17,239 --> 01:39:19,340
harder and harder environments until you

2369
01:39:19,340 --> 01:39:21,380
get to something very hard now remember

2370
01:39:21,380 --> 01:39:22,730
I keep talking about these algorithms

2371
01:39:22,730 --> 01:39:24,949
learn their own curricula via kind of

2372
01:39:24,949 --> 01:39:26,840
bet hedging well think about this this

2373
01:39:26,840 --> 01:39:29,120
5/6 here maybe originally we have a

2374
01:39:29,120 --> 01:39:30,949
parameter vector that's okay on it but

2375
01:39:30,949 --> 01:39:32,870
that may not be the best stepping-stone

2376
01:39:32,870 --> 01:39:34,580
to solve that challenge so what

2377
01:39:34,580 --> 01:39:36,410
ultimately can happen endogenously

2378
01:39:36,410 --> 01:39:37,730
within this algorithm is that maybe

2379
01:39:37,730 --> 01:39:40,550
theta 4 here happens to get better and

2380
01:39:40,550 --> 01:39:42,770
actually comes in and replaces theta 3

2381
01:39:42,770 --> 01:39:44,360
and that challenge and then ultimately

2382
01:39:44,360 --> 01:39:46,040
that becomes the thing that finally

2383
01:39:46,040 --> 01:39:48,380
solves this theta 6 at a really really

2384
01:39:48,380 --> 01:39:51,110
high level and so you have all of the

2385
01:39:51,110 --> 01:39:52,460
properties of goal switching and

2386
01:39:52,460 --> 01:39:53,690
curricula learning that I said earlier

2387
01:39:53,690 --> 01:39:55,130
and as I mentioned if you try to

2388
01:39:55,130 --> 01:39:57,050
directly solve these hard challenges it

2389
01:39:57,050 --> 01:39:59,449
doesn't work with hand-coded curricula

2390
01:39:59,449 --> 01:40:01,790
or just direct optimization so I'm going

2391
01:40:01,790 --> 01:40:03,739
to show you one quick anecdote that I

2392
01:40:03,739 --> 01:40:05,480
think is really beautiful and capsulate

2393
01:40:05,480 --> 01:40:06,949
captures a lot of the spirit of

2394
01:40:06,949 --> 01:40:07,730
everything we've been talking about

2395
01:40:07,730 --> 01:40:09,620
today so this actually happened within

2396
01:40:09,620 --> 01:40:11,750
one of our runs this is the original

2397
01:40:11,750 --> 01:40:13,880
simple environment a creature here is

2398
01:40:13,880 --> 01:40:16,370
running and it scores 298 and then

2399
01:40:16,370 --> 01:40:18,410
because that's a decent score we we we

2400
01:40:18,410 --> 01:40:20,330
copy that environment change a little

2401
01:40:20,330 --> 01:40:21,199
bit and now there are these little

2402
01:40:21,199 --> 01:40:23,180
stumps in the environment we transfer

2403
01:40:23,180 --> 01:40:24,860
that original agent in to this

2404
01:40:24,860 --> 01:40:28,040
environment here and it starts not

2405
01:40:28,040 --> 01:40:29,510
performing as well but eventually they

2406
01:40:29,510 --> 01:40:31,489
get over those humps it has to stand up

2407
01:40:31,489 --> 01:40:32,570
and notice that in the original

2408
01:40:32,570 --> 01:40:34,310
environment the creature is not standing

2409
01:40:34,310 --> 01:40:35,690
up it's dragging its knee which is not a

2410
01:40:35,690 --> 01:40:38,420
very healthy behavior but once this

2411
01:40:38,420 --> 01:40:40,160
creature in the new environment stands

2412
01:40:40,160 --> 01:40:41,719
up and starts walking it actually is

2413
01:40:41,719 --> 01:40:43,850
performing pretty well and periodically

2414
01:40:43,850 --> 01:40:46,219
we're testing every agent to see if it's

2415
01:40:46,219 --> 01:40:47,989
good in any of the other niches and it

2416
01:40:47,989 --> 01:40:49,670
just so happens that that descendant

2417
01:40:49,670 --> 01:40:51,680
agent goes back to the original really

2418
01:40:51,680 --> 01:40:53,840
simple problem and starts doing better

2419
01:40:53,840 --> 01:40:55,310
because now it's standing up and it's

2420
01:40:55,310 --> 01:40:57,920
performing better than its and it's the

2421
01:40:57,920 --> 01:40:59,630
original agent and then it gets further

2422
01:40:59,630 --> 01:41:01,040
optimized and does quite well in that

2423
01:41:01,040 --> 01:41:02,750
environment original eventually is going

2424
01:41:02,750 --> 01:41:05,810
349 in the original simple flat problem

2425
01:41:05,810 --> 01:41:07,850
we did the counterfactual we went back

2426
01:41:07,850 --> 01:41:09,920
to the 298 agent and we just ran it

2427
01:41:09,920 --> 01:41:11,420
forever we gave it tons and tons of

2428
01:41:11,420 --> 01:41:13,489
computation and it was stuck on a local

2429
01:41:13,489 --> 01:41:15,710
Optima it never stood up the move if you

2430
01:41:15,710 --> 01:41:17,000
just let that thing run forever

2431
01:41:17,000 --> 01:41:19,250
it only gets a score of 309 and it keeps

2432
01:41:19,250 --> 01:41:20,449
that knee on the ground for whatever

2433
01:41:20,449 --> 01:41:21,949
reason because the landscape is

2434
01:41:21,949 --> 01:41:24,440
deceptive so counter intuitively in this

2435
01:41:24,440 --> 01:41:26,390
particular problem you had to go from a

2436
01:41:26,390 --> 01:41:28,550
simple problem to a harder problem

2437
01:41:28,550 --> 01:41:30,800
and then come back to the simple problem

2438
01:41:30,800 --> 01:41:32,360
in order to get the right solution to

2439
01:41:32,360 --> 01:41:33,920
the simple problem which is just a

2440
01:41:33,920 --> 01:41:35,270
curriculum that a human would never

2441
01:41:35,270 --> 01:41:36,980
design but these algorithms figure out

2442
01:41:36,980 --> 01:41:38,690
on their own which is the beauty of

2443
01:41:38,690 --> 01:41:41,390
these things so very quickly poet is

2444
01:41:41,390 --> 01:41:43,190
kind of quality diversity plus plus

2445
01:41:43,190 --> 01:41:45,260
because as Ken said it breaks the mold

2446
01:41:45,260 --> 01:41:47,270
it now can generate its own niches in

2447
01:41:47,270 --> 01:41:48,800
addition to trying to have all the other

2448
01:41:48,800 --> 01:41:51,050
properties is it truly open-ended well

2449
01:41:51,050 --> 01:41:53,570
no it's not because well it's definitely

2450
01:41:53,570 --> 01:41:55,160
a step closer because it's generating

2451
01:41:55,160 --> 01:41:56,990
its own niches it's currently limited by

2452
01:41:56,990 --> 01:41:58,040
the fact that we picked a specific

2453
01:41:58,040 --> 01:41:59,810
physics emulator and a specific way to

2454
01:41:59,810 --> 01:42:01,400
parameterize environments in that

2455
01:42:01,400 --> 01:42:03,620
physics simulator so ultimately what we

2456
01:42:03,620 --> 01:42:04,970
wanted we challenged everyone in this

2457
01:42:04,970 --> 01:42:06,380
room and the community to figure out is

2458
01:42:06,380 --> 01:42:08,030
how do we have a more expressive way to

2459
01:42:08,030 --> 01:42:10,190
encode environments and express them so

2460
01:42:10,190 --> 01:42:11,480
we can search through the space of

2461
01:42:11,480 --> 01:42:12,980
challenges while we have all these other

2462
01:42:12,980 --> 01:42:15,710
healthy dynamics going on and our most

2463
01:42:15,710 --> 01:42:17,240
recent attempt at that actually is a

2464
01:42:17,240 --> 01:42:19,070
little plug for our poster at the Otto

2465
01:42:19,070 --> 01:42:21,260
ml workshop this Friday is what we call

2466
01:42:21,260 --> 01:42:22,670
generative teaching networks which are

2467
01:42:22,670 --> 01:42:24,200
fully expressive environmental and

2468
01:42:24,200 --> 01:42:26,390
coatings that can encode any environment

2469
01:42:26,390 --> 01:42:28,280
but they will see how well they perform

2470
01:42:28,280 --> 01:42:30,080
when paired with poet so I just want to

2471
01:42:30,080 --> 01:42:31,280
quickly end by saying that these

2472
01:42:31,280 --> 01:42:33,500
algorithms beyond poet all of the

2473
01:42:33,500 --> 01:42:35,090
algorithms that the general idea of

2474
01:42:35,090 --> 01:42:37,040
automatically generating both the

2475
01:42:37,040 --> 01:42:38,630
challenges and the solutions we think is

2476
01:42:38,630 --> 01:42:39,950
really powerful because it invents a

2477
01:42:39,950 --> 01:42:42,020
curriculum whereas manual curriculum

2478
01:42:42,020 --> 01:42:43,400
attempts are very very difficult to get

2479
01:42:43,400 --> 01:42:45,500
right and often fail because the

2480
01:42:45,500 --> 01:42:46,850
solutions of the right curricula often

2481
01:42:46,850 --> 01:42:48,500
counterintuitive these algorithms have

2482
01:42:48,500 --> 01:42:49,850
the potential to endlessly innovate

2483
01:42:49,850 --> 01:42:50,840
especially if they have the right

2484
01:42:50,840 --> 01:42:53,120
expressive and encoding of environments

2485
01:42:53,120 --> 01:42:55,460
they may be the only way to solve really

2486
01:42:55,460 --> 01:42:57,860
ambitious problems and it's discover the

2487
01:42:57,860 --> 01:42:59,570
full gamut of what is possible out there

2488
01:42:59,570 --> 01:43:01,580
and they're beginning to start capturing

2489
01:43:01,580 --> 01:43:04,190
the spirit of open-ended engines of

2490
01:43:04,190 --> 01:43:06,110
innovation like natural evolution and

2491
01:43:06,110 --> 01:43:07,550
cultural evolution and science and

2492
01:43:07,550 --> 01:43:09,020
technology and art and therefore we

2493
01:43:09,020 --> 01:43:10,250
think these are extremely promising

2494
01:43:10,250 --> 01:43:12,440
going forward as optimization algorithms

2495
01:43:12,440 --> 01:43:14,240
to solve our most ambitious challenges

2496
01:43:14,240 --> 01:43:16,010
and with that Ken's gonna come back up

2497
01:43:16,010 --> 01:43:17,480
talk about indirect encoding that I'm

2498
01:43:17,480 --> 01:43:19,370
gonna do a little bit of look looking

2499
01:43:19,370 --> 01:43:20,450
forward and concluding and then we'll

2500
01:43:20,450 --> 01:43:23,290
have a Q&A session

2501
01:43:47,670 --> 01:43:50,520
okay now this is a bit of a transition

2502
01:43:50,520 --> 01:43:52,680
we're gonna be talking about a

2503
01:43:52,680 --> 01:43:55,030
representational issue now so you may

2504
01:43:55,030 --> 01:43:56,440
say well how does all this lead up to

2505
01:43:56,440 --> 01:43:59,470
represent to the representation and so

2506
01:43:59,470 --> 01:44:01,720
the real answer is that when you're in

2507
01:44:01,720 --> 01:44:03,700
the pursuit of diversity as really you

2508
01:44:03,700 --> 01:44:04,900
could see that's the spirit of a lot of

2509
01:44:04,900 --> 01:44:07,660
what we've been talking about here it is

2510
01:44:07,660 --> 01:44:09,820
really important that your trajectories

2511
01:44:09,820 --> 01:44:12,370
that you follow through that space have

2512
01:44:12,370 --> 01:44:15,550
some kind of principle behind them and

2513
01:44:15,550 --> 01:44:17,770
that they respect regularities and you

2514
01:44:17,770 --> 01:44:19,300
can discover regularities and preserve

2515
01:44:19,300 --> 01:44:21,340
those regularities in the structures

2516
01:44:21,340 --> 01:44:23,560
that you're discovering and those

2517
01:44:23,560 --> 01:44:24,940
regularities should be flexible and

2518
01:44:24,940 --> 01:44:26,590
allow exceptions like so you can get

2519
01:44:26,590 --> 01:44:29,260
things like brains which certainly have

2520
01:44:29,260 --> 01:44:30,850
regular structure and we can you know

2521
01:44:30,850 --> 01:44:32,560
the theme of convolution is going to

2522
01:44:32,560 --> 01:44:34,540
come up I think several times as I just

2523
01:44:34,540 --> 01:44:35,650
talked about this because that's like

2524
01:44:35,650 --> 01:44:38,080
one of the most salient kind of examples

2525
01:44:38,080 --> 01:44:40,239
of a very regular type of structure

2526
01:44:40,239 --> 01:44:41,830
that's very powerful in a certain type

2527
01:44:41,830 --> 01:44:44,320
of domain and processing and so we'd

2528
01:44:44,320 --> 01:44:45,940
like to be able to exploit such

2529
01:44:45,940 --> 01:44:47,890
regularities but also elaborate on them

2530
01:44:47,890 --> 01:44:51,540
in any kind of divergent process and so

2531
01:44:51,540 --> 01:44:53,350
what we're going to talk about is

2532
01:44:53,350 --> 01:44:55,960
representation and but it is related to

2533
01:44:55,960 --> 01:44:57,370
population based services because of

2534
01:44:57,370 --> 01:44:59,110
this principle but also because this was

2535
01:44:59,110 --> 01:45:01,000
inspired by population search to begin

2536
01:45:01,000 --> 01:45:03,070
to look into this issue of how

2537
01:45:03,070 --> 01:45:05,170
representation can be powerful and I

2538
01:45:05,170 --> 01:45:06,520
think you'll see and appreciate what I

2539
01:45:06,520 --> 01:45:09,010
mean as I show you this so we're talking

2540
01:45:09,010 --> 01:45:10,870
about something called indirect encoding

2541
01:45:10,870 --> 01:45:12,610
and this is the idea that something like

2542
01:45:12,610 --> 01:45:13,900
a gene which really just means a

2543
01:45:13,900 --> 01:45:16,390
parameter does not map directly to a

2544
01:45:16,390 --> 01:45:19,180
unit of structure in what we might call

2545
01:45:19,180 --> 01:45:22,300
the phenotype or the final realized the

2546
01:45:22,300 --> 01:45:24,489
final realized entity which could be

2547
01:45:24,489 --> 01:45:26,230
like a body or it could be something

2548
01:45:26,230 --> 01:45:27,970
like a brain or like a neural network

2549
01:45:27,970 --> 01:45:30,430
and so the idea here is then that

2550
01:45:30,430 --> 01:45:32,590
there's reuse inside of an indirect

2551
01:45:32,590 --> 01:45:34,390
encoding because it's not a one-to-one

2552
01:45:34,390 --> 01:45:36,700
mapping so information that's inside of

2553
01:45:36,700 --> 01:45:38,380
the representation of what you're

2554
01:45:38,380 --> 01:45:41,880
searching through can be reused and so

2555
01:45:41,880 --> 01:45:44,950
because of that development from DNA is

2556
01:45:44,950 --> 01:45:46,900
sort of an inspiration for this type of

2557
01:45:46,900 --> 01:45:49,780
an encoding called an indirect encoding

2558
01:45:49,780 --> 01:45:52,270
and I highlighted inspiration because

2559
01:45:52,270 --> 01:45:55,030
we're not interested in simulating DNA I

2560
01:45:55,030 --> 01:45:57,040
mean this is artificial intelligence and

2561
01:45:57,040 --> 01:45:57,770
machine learning

2562
01:45:57,770 --> 01:45:59,810
but we're inspired by it because it has

2563
01:45:59,810 --> 01:46:02,060
this particular property which is look

2564
01:46:02,060 --> 01:46:03,980
you can get these kinds of things like

2565
01:46:03,980 --> 01:46:05,990
you can get symmetries you can get

2566
01:46:05,990 --> 01:46:07,850
repetition and this is like cortical

2567
01:46:07,850 --> 01:46:09,860
cortical columns for example and you can

2568
01:46:09,860 --> 01:46:10,730
get this kind of thing which is

2569
01:46:10,730 --> 01:46:12,230
repetition with variation and the point

2570
01:46:12,230 --> 01:46:14,630
is like every finger here is not encoded

2571
01:46:14,630 --> 01:46:16,790
with different information they largely

2572
01:46:16,790 --> 01:46:19,340
share information in terms of what kinds

2573
01:46:19,340 --> 01:46:20,900
of DNA is mapping to each one of these

2574
01:46:20,900 --> 01:46:23,300
fingers but there's some differences as

2575
01:46:23,300 --> 01:46:25,430
well and this kind of subtle variation

2576
01:46:25,430 --> 01:46:27,410
is the kind of power that we want in any

2577
01:46:27,410 --> 01:46:29,000
kind of representation that we would be

2578
01:46:29,000 --> 01:46:30,620
using if we want to be able to be

2579
01:46:30,620 --> 01:46:32,810
creative sort of forever and so we're

2580
01:46:32,810 --> 01:46:34,940
interested in encoding spaces for very

2581
01:46:34,940 --> 01:46:36,380
interesting types of things and if you

2582
01:46:36,380 --> 01:46:38,090
want to make it more concrete think

2583
01:46:38,090 --> 01:46:39,440
about neural network architectures like

2584
01:46:39,440 --> 01:46:40,970
that's one thing we might want to search

2585
01:46:40,970 --> 01:46:42,980
through in this in the spirit and so

2586
01:46:42,980 --> 01:46:45,560
there's a long history actually for for

2587
01:46:45,560 --> 01:46:47,000
indirect encoding it's gone by a number

2588
01:46:47,000 --> 01:46:48,170
of different names but I'm gonna use

2589
01:46:48,170 --> 01:46:50,120
indirect encoding but it goes back all

2590
01:46:50,120 --> 01:46:51,680
the way to Turing and he was interested

2591
01:46:51,680 --> 01:46:53,930
in morphogenesis and so he used what are

2592
01:46:53,930 --> 01:46:55,520
called reaction diffusion equations to

2593
01:46:55,520 --> 01:46:57,950
look at pattern generation another older

2594
01:46:57,950 --> 01:47:00,080
example is Linda Meyer who invented it's

2595
01:47:00,080 --> 01:47:01,610
called L systems which were a

2596
01:47:01,610 --> 01:47:04,520
grammatical system for for abstracting

2597
01:47:04,520 --> 01:47:07,520
how plants develop and there's in fact a

2598
01:47:07,520 --> 01:47:09,290
long history after that of people

2599
01:47:09,290 --> 01:47:11,090
looking at indirect encodings and just

2600
01:47:11,090 --> 01:47:13,820
want to acknowledge this history as I

2601
01:47:13,820 --> 01:47:15,380
jump to now what we're going to talk

2602
01:47:15,380 --> 01:47:17,240
about mostly here which is what's called

2603
01:47:17,240 --> 01:47:19,340
compositional pattern producing networks

2604
01:47:19,340 --> 01:47:21,560
this is from our own work because these

2605
01:47:21,560 --> 01:47:23,300
are really suited to particularly

2606
01:47:23,300 --> 01:47:25,160
encoding neural networks as you'll see

2607
01:47:25,160 --> 01:47:26,870
so if you bear with me you'll see how

2608
01:47:26,870 --> 01:47:28,340
this is going towards sort of modern

2609
01:47:28,340 --> 01:47:30,380
deep learning but for a moment I just

2610
01:47:30,380 --> 01:47:32,780
want to dwell on structure and not worry

2611
01:47:32,780 --> 01:47:34,610
about neural network so in Lourdes I

2612
01:47:34,610 --> 01:47:37,760
want to think about an artificial

2613
01:47:37,760 --> 01:47:39,920
encoding that can produce stuff that has

2614
01:47:39,920 --> 01:47:41,440
the properties I mentioned like symmetry

2615
01:47:41,440 --> 01:47:43,610
repetition and repetition with variation

2616
01:47:43,610 --> 01:47:45,650
in structure in in some kind of

2617
01:47:45,650 --> 01:47:47,690
systematic and principled way and that's

2618
01:47:47,690 --> 01:47:49,250
what cpp ends are designed to do an

2619
01:47:49,250 --> 01:47:51,170
eventual transfer that capability over

2620
01:47:51,170 --> 01:47:54,350
to encoding neural network structure and

2621
01:47:54,350 --> 01:47:59,720
so here's an insight in embryo Genie

2622
01:47:59,720 --> 01:48:01,010
which means like in the process of

2623
01:48:01,010 --> 01:48:02,930
generating an embryo into and to a full

2624
01:48:02,930 --> 01:48:08,300
fully formed infant cells know where

2625
01:48:08,300 --> 01:48:09,890
they are through what's called chemical

2626
01:48:09,890 --> 01:48:11,059
gradients

2627
01:48:11,059 --> 01:48:13,909
and so where you are is really important

2628
01:48:13,909 --> 01:48:16,219
because to know what you're supposed to

2629
01:48:16,219 --> 01:48:18,079
do you need to know where you are are

2630
01:48:18,079 --> 01:48:20,210
you in a brain then you should be a

2631
01:48:20,210 --> 01:48:21,860
brain cell are you in a liver you should

2632
01:48:21,860 --> 01:48:24,440
be a liver cell so where is the key to

2633
01:48:24,440 --> 01:48:25,940
knowing what kind of structure you are

2634
01:48:25,940 --> 01:48:27,949
and then these gradients can be thought

2635
01:48:27,949 --> 01:48:29,300
of as forming like coordinate frames

2636
01:48:29,300 --> 01:48:31,070
within weight within which things are

2637
01:48:31,070 --> 01:48:33,289
situated like am I on the left side or

2638
01:48:33,289 --> 01:48:34,909
the right side or the head or the tail

2639
01:48:34,909 --> 01:48:37,300
and or the front or the back and

2640
01:48:37,300 --> 01:48:39,800
gradients of chemicals are used in order

2641
01:48:39,800 --> 01:48:41,030
to situate structure and this has been

2642
01:48:41,030 --> 01:48:42,920
described eloquently and for example

2643
01:48:42,920 --> 01:48:46,159
this classic book by mine heart about

2644
01:48:46,159 --> 01:48:48,500
the models of biological pattern

2645
01:48:48,500 --> 01:48:50,840
formation and showing sort of how these

2646
01:48:50,840 --> 01:48:52,369
gradients are used in this case to form

2647
01:48:52,369 --> 01:48:54,170
like drosophila padma striped patterns

2648
01:48:54,170 --> 01:48:56,119
and so there's been much study of this

2649
01:48:56,119 --> 01:48:58,070
in biology but let's switch away from

2650
01:48:58,070 --> 01:49:00,320
biology and think about this from the

2651
01:49:00,320 --> 01:49:01,849
more perspective of sort of abstract

2652
01:49:01,849 --> 01:49:03,860
representations from machine learning so

2653
01:49:03,860 --> 01:49:06,739
for example we know that like gradients

2654
01:49:06,739 --> 01:49:08,030
can define axes and i'm talking about

2655
01:49:08,030 --> 01:49:09,710
chemical gradients not like gradients in

2656
01:49:09,710 --> 01:49:12,320
terms of like derivatives chemical

2657
01:49:12,320 --> 01:49:13,639
Granny's can define axes and these

2658
01:49:13,639 --> 01:49:15,260
gradients tell where you are so like you

2659
01:49:15,260 --> 01:49:16,969
can imagine that within a cell like the

2660
01:49:16,969 --> 01:49:18,739
initial cell after sort of the sperm

2661
01:49:18,739 --> 01:49:20,780
fertilizes an egg there could be like a

2662
01:49:20,780 --> 01:49:22,309
couple axes so I'll stay in two

2663
01:49:22,309 --> 01:49:23,869
dimensions for simplicity even though of

2664
01:49:23,869 --> 01:49:24,980
course we live in a three-dimensional

2665
01:49:24,980 --> 01:49:27,440
world so there's a y axis this is one

2666
01:49:27,440 --> 01:49:28,820
gradient the excess is another gradient

2667
01:49:28,820 --> 01:49:30,409
now I know where I am so if I query this

2668
01:49:30,409 --> 01:49:31,789
point I would know where I am

2669
01:49:31,789 --> 01:49:33,530
just based on chemical concentrations

2670
01:49:33,530 --> 01:49:35,420
well it's kind of interesting to observe

2671
01:49:35,420 --> 01:49:37,730
that we can just describe this kind of

2672
01:49:37,730 --> 01:49:39,349
the kind of process of setting up these

2673
01:49:39,349 --> 01:49:41,210
gradients mathematically instead which

2674
01:49:41,210 --> 01:49:43,070
is really simple it's just function

2675
01:49:43,070 --> 01:49:44,599
composition and in other words if I

2676
01:49:44,599 --> 01:49:46,159
started out with this asymmetric

2677
01:49:46,159 --> 01:49:47,599
gradient like basically this is going

2678
01:49:47,599 --> 01:49:49,190
from low concentration to high

2679
01:49:49,190 --> 01:49:51,139
concentration it's a very simple like

2680
01:49:51,139 --> 01:49:52,940
identity function well then I can take a

2681
01:49:52,940 --> 01:49:54,559
function of that like in this case they

2682
01:49:54,559 --> 01:49:56,480
just put absolute value and that becomes

2683
01:49:56,480 --> 01:49:58,250
a symmetric gradient but then I can take

2684
01:49:58,250 --> 01:49:59,389
another function of that which I haven't

2685
01:49:59,389 --> 01:50:00,739
fully defined but basically saying if

2686
01:50:00,739 --> 01:50:02,719
there's a function of say X and this

2687
01:50:02,719 --> 01:50:05,000
function G then I could situate new

2688
01:50:05,000 --> 01:50:06,739
structure inside of that symmetric frame

2689
01:50:06,739 --> 01:50:07,760
and this will be guaranteed to be

2690
01:50:07,760 --> 01:50:09,469
symmetric function for a symmetric

2691
01:50:09,469 --> 01:50:11,389
structure because any function of a

2692
01:50:11,389 --> 01:50:12,909
symmetric function will itself be

2693
01:50:12,909 --> 01:50:15,590
symmetric on its output and so the point

2694
01:50:15,590 --> 01:50:17,300
is that we can compose gradients and

2695
01:50:17,300 --> 01:50:19,280
this is like describing a developmental

2696
01:50:19,280 --> 01:50:21,230
process you know like if you have a

2697
01:50:21,230 --> 01:50:22,750
symmetric gradient and then you feed

2698
01:50:22,750 --> 01:50:24,220
into a periodic function which you get

2699
01:50:24,220 --> 01:50:25,690
are segments with opposite polarities

2700
01:50:25,690 --> 01:50:28,090
and so the composition of gradients is a

2701
01:50:28,090 --> 01:50:30,370
really powerful notion and in fact is

2702
01:50:30,370 --> 01:50:31,570
sort of what the steps of the

2703
01:50:31,570 --> 01:50:33,670
development of a structure is in biology

2704
01:50:33,670 --> 01:50:36,070
and so it's an interesting question to

2705
01:50:36,070 --> 01:50:38,160
ask is there a general abstraction of

2706
01:50:38,160 --> 01:50:41,530
composing gradients that we could search

2707
01:50:41,530 --> 01:50:43,720
through in some principled way so that

2708
01:50:43,720 --> 01:50:45,700
we could actually find structure with

2709
01:50:45,700 --> 01:50:47,470
regularities and symmetries and so forth

2710
01:50:47,470 --> 01:50:49,810
and exploit that to find principled

2711
01:50:49,810 --> 01:50:51,580
structure like brain link structures and

2712
01:50:51,580 --> 01:50:53,650
so the idea here is gradients basically

2713
01:50:53,650 --> 01:50:55,540
can define to find body plans you know

2714
01:50:55,540 --> 01:50:57,400
you can imagine periodic gradients

2715
01:50:57,400 --> 01:50:59,770
giving like segmentation symmetric

2716
01:50:59,770 --> 01:51:02,320
gradients giving symmetries so forth and

2717
01:51:02,320 --> 01:51:04,240
this gets us body plane so let's try to

2718
01:51:04,240 --> 01:51:06,340
have an abstraction of this idea that we

2719
01:51:06,340 --> 01:51:07,600
don't actually have to simulate

2720
01:51:07,600 --> 01:51:09,130
development because we're not interested

2721
01:51:09,130 --> 01:51:10,600
in simulation we're interested in

2722
01:51:10,600 --> 01:51:12,760
machine learning and we can look at this

2723
01:51:12,760 --> 01:51:14,350
from it from an abstract viewpoint

2724
01:51:14,350 --> 01:51:16,450
imagine that the thing that we're gonna

2725
01:51:16,450 --> 01:51:17,920
create we call it the phenotype does

2726
01:51:17,920 --> 01:51:19,870
some kind of pattern structure is in

2727
01:51:19,870 --> 01:51:22,360
some kind of Cartesian space like X&Y

2728
01:51:22,360 --> 01:51:24,490
here so a two-dimensional for simplicity

2729
01:51:24,490 --> 01:51:26,740
then what we can think of as development

2730
01:51:26,740 --> 01:51:27,940
we can think almost like a black box

2731
01:51:27,940 --> 01:51:29,650
like it's a function but it's a function

2732
01:51:29,650 --> 01:51:31,870
of what it's a function of space so it's

2733
01:51:31,870 --> 01:51:33,370
a function of the initial axes of the

2734
01:51:33,370 --> 01:51:35,350
space we're like x and y and something

2735
01:51:35,350 --> 01:51:36,970
happens in this function which basically

2736
01:51:36,970 --> 01:51:39,130
is development in in biology which will

2737
01:51:39,130 --> 01:51:40,720
then output some kind of structure at

2738
01:51:40,720 --> 01:51:42,250
the end which is the bye to the body

2739
01:51:42,250 --> 01:51:45,430
when it's sort of born and so we can

2740
01:51:45,430 --> 01:51:47,110
think of these coordinates like the x

2741
01:51:47,110 --> 01:51:48,370
and y coordinates as the chemical

2742
01:51:48,370 --> 01:51:50,020
gradients and then we can think of this

2743
01:51:50,020 --> 01:51:51,670
function being applied at all points in

2744
01:51:51,670 --> 01:51:53,470
an abstract sense by the end after the

2745
01:51:53,470 --> 01:51:55,240
developmental process in effect the

2746
01:51:55,240 --> 01:51:57,570
functions been applied at all points so

2747
01:51:57,570 --> 01:51:59,980
now to capture the notion of the

2748
01:51:59,980 --> 01:52:01,600
composition of gradients in order to get

2749
01:52:01,600 --> 01:52:03,280
up to increasingly complex structures

2750
01:52:03,280 --> 01:52:05,140
well it's interesting because we could

2751
01:52:05,140 --> 01:52:07,390
draw the path of development as a graph

2752
01:52:07,390 --> 01:52:09,250
and so like what we say is okay there's

2753
01:52:09,250 --> 01:52:10,870
an initial sort of egg where there's x

2754
01:52:10,870 --> 01:52:12,700
and y gradient and then it goes through

2755
01:52:12,700 --> 01:52:15,310
these types of these types of functions

2756
01:52:15,310 --> 01:52:18,190
as it's going up to the adult form and

2757
01:52:18,190 --> 01:52:19,480
this is actually you can trace through

2758
01:52:19,480 --> 01:52:21,550
these and think of as you go from bottom

2759
01:52:21,550 --> 01:52:23,230
to top in this graph you can think of it

2760
01:52:23,230 --> 01:52:26,020
as events that happen like a symmetric

2761
01:52:26,020 --> 01:52:27,940
gradient is laid on top of the input

2762
01:52:27,940 --> 01:52:30,970
gradients or this for example a periodic

2763
01:52:30,970 --> 01:52:32,410
gradient is laid on top of the output of

2764
01:52:32,410 --> 01:52:34,420
this gradient and so forth and these are

2765
01:52:34,420 --> 01:52:35,210
sometimes can

2766
01:52:35,210 --> 01:52:36,680
it happened in parallel and that's why

2767
01:52:36,680 --> 01:52:38,690
this is this is a pair both a sequential

2768
01:52:38,690 --> 01:52:40,280
and parallel process but it all

2769
01:52:40,280 --> 01:52:42,290
converges at the end to a final output

2770
01:52:42,290 --> 01:52:44,360
pattern which is the phenotypic form

2771
01:52:44,360 --> 01:52:46,130
which is the output of this function now

2772
01:52:46,130 --> 01:52:47,600
what's really interesting about this is

2773
01:52:47,600 --> 01:52:49,850
this graph that I just drew here looks

2774
01:52:49,850 --> 01:52:51,560
like a neural network in fact these

2775
01:52:51,560 --> 01:52:53,480
connections can be weighted and then in

2776
01:52:53,480 --> 01:52:55,370
fact it functions just like a neural

2777
01:52:55,370 --> 01:52:57,710
network but it's an abstraction of

2778
01:52:57,710 --> 01:52:59,510
development not an abstraction of a

2779
01:52:59,510 --> 01:53:02,540
brain so it's kind of interesting just

2780
01:53:02,540 --> 01:53:04,100
generally conceptually that we can think

2781
01:53:04,100 --> 01:53:05,540
of abstractions of brains and of

2782
01:53:05,540 --> 01:53:07,400
development as being related to each

2783
01:53:07,400 --> 01:53:09,740
other but computationally this is really

2784
01:53:09,740 --> 01:53:11,690
convenient because what this means is

2785
01:53:11,690 --> 01:53:13,520
that I can get in effect what a

2786
01:53:13,520 --> 01:53:16,070
developmental process would do simply by

2787
01:53:16,070 --> 01:53:17,990
running a network like this and getting

2788
01:53:17,990 --> 01:53:21,320
the output of this function and so in

2789
01:53:21,320 --> 01:53:22,820
effect this is like a connected graph

2790
01:53:22,820 --> 01:53:24,350
abstraction of the order and

2791
01:53:24,350 --> 01:53:26,030
relationship between developmental

2792
01:53:26,030 --> 01:53:27,800
events and I don't have to simulate

2793
01:53:27,800 --> 01:53:30,260
growth to search through structures like

2794
01:53:30,260 --> 01:53:32,570
this in fact I can use any modern neural

2795
01:53:32,570 --> 01:53:34,430
network toolbox the only kind of unusual

2796
01:53:34,430 --> 01:53:35,450
thing here is that there's these

2797
01:53:35,450 --> 01:53:37,610
heterogeneous activation functions which

2798
01:53:37,610 --> 01:53:39,590
represent certain like types of gradient

2799
01:53:39,590 --> 01:53:43,820
patterns so we're gonna search over CPP

2800
01:53:43,820 --> 01:53:45,050
ends this is what these are called

2801
01:53:45,050 --> 01:53:46,940
compositional pattern producing networks

2802
01:53:46,940 --> 01:53:48,650
that's the name for this kind of a

2803
01:53:48,650 --> 01:53:51,500
network and to begin with we're gonna

2804
01:53:51,500 --> 01:53:52,970
use NEET which is this

2805
01:53:52,970 --> 01:53:55,100
neuro-evolutionary technique because

2806
01:53:55,100 --> 01:53:56,840
it's going to allow us first to look at

2807
01:53:56,840 --> 01:53:58,340
this intuitively which is what I want to

2808
01:53:58,340 --> 01:53:59,780
do with you first I want to give you

2809
01:53:59,780 --> 01:54:01,430
just a sense of what these patterns look

2810
01:54:01,430 --> 01:54:03,770
like just to see that they actually do

2811
01:54:03,770 --> 01:54:05,840
capture a very important sort of

2812
01:54:05,840 --> 01:54:07,700
biological like principles before we

2813
01:54:07,700 --> 01:54:09,470
then get shift over to neural networks

2814
01:54:09,470 --> 01:54:11,210
and one of the things that neat does is

2815
01:54:11,210 --> 01:54:13,370
it can increase complexity over time and

2816
01:54:13,370 --> 01:54:14,540
so that's one of the reasons our gonna

2817
01:54:14,540 --> 01:54:16,130
use this because of course complexity

2818
01:54:16,130 --> 01:54:19,930
does increase over a biological time and

2819
01:54:19,930 --> 01:54:22,760
so let's remember this this is actually

2820
01:54:22,760 --> 01:54:24,290
from the pic breeder but just to remind

2821
01:54:24,290 --> 01:54:25,820
you like this is just a game where you

2822
01:54:25,820 --> 01:54:26,690
could play where I could select

2823
01:54:26,690 --> 01:54:28,310
something get perturbations select

2824
01:54:28,310 --> 01:54:30,260
something get perturbations and now this

2825
01:54:30,260 --> 01:54:32,720
was used to get the following examples

2826
01:54:32,720 --> 01:54:34,460
very simple but I just want to show you

2827
01:54:34,460 --> 01:54:36,140
some examples so that we can analyze the

2828
01:54:36,140 --> 01:54:38,420
patterns so for example this sequence

2829
01:54:38,420 --> 01:54:41,150
here like of that looks like spaceships

2830
01:54:41,150 --> 01:54:43,250
I just want you to notice one particular

2831
01:54:43,250 --> 01:54:44,570
discovery I think is really really

2832
01:54:44,570 --> 01:54:46,730
interesting which is between here and

2833
01:54:46,730 --> 01:54:48,050
here what you

2834
01:54:48,050 --> 01:54:51,140
as tailfins were invented now this is it

2835
01:54:51,140 --> 01:54:52,880
this is a really interesting discovery

2836
01:54:52,880 --> 01:54:54,410
because like the system there's nothing

2837
01:54:54,410 --> 01:54:56,810
about tail fins in fact this is a this

2838
01:54:56,810 --> 01:54:58,970
is just a CP PN so it started out here

2839
01:54:58,970 --> 01:55:00,560
with this and it ended up here with that

2840
01:55:00,560 --> 01:55:01,880
and this is in the middle of this

2841
01:55:01,880 --> 01:55:03,710
process just some perturbation led to

2842
01:55:03,710 --> 01:55:05,660
this but why were they discovered

2843
01:55:05,660 --> 01:55:07,370
together in this symmetric way which

2844
01:55:07,370 --> 01:55:09,290
seems to make so much sense when it

2845
01:55:09,290 --> 01:55:10,880
doesn't know anything about this well

2846
01:55:10,880 --> 01:55:12,620
because this is like a biological like

2847
01:55:12,620 --> 01:55:14,780
principle right I mean when something

2848
01:55:14,780 --> 01:55:16,820
changes about arms like for example like

2849
01:55:16,820 --> 01:55:18,830
the development of digits on hands we

2850
01:55:18,830 --> 01:55:20,720
don't want it to happen only on one side

2851
01:55:20,720 --> 01:55:22,340
I wanted to happen on both sides and

2852
01:55:22,340 --> 01:55:24,350
because we have a representation here

2853
01:55:24,350 --> 01:55:26,360
where symmetry has been captured

2854
01:55:26,360 --> 01:55:28,220
somewhere do somewhere near the inputs

2855
01:55:28,220 --> 01:55:29,600
to the system remember the inputs are

2856
01:55:29,600 --> 01:55:31,940
like the X and y axis of the original

2857
01:55:31,940 --> 01:55:34,250
embryo well then everything that comes

2858
01:55:34,250 --> 01:55:36,140
above that symmetry will inherit that

2859
01:55:36,140 --> 01:55:37,670
symmetry so as you go towards the

2860
01:55:37,670 --> 01:55:39,710
outputs and so we can respect the

2861
01:55:39,710 --> 01:55:42,020
principle of symmetry and so we can get

2862
01:55:42,020 --> 01:55:44,390
these kinds of almost natural like

2863
01:55:44,390 --> 01:55:46,430
progressions with respect principles

2864
01:55:46,430 --> 01:55:47,420
that have been discovered so you think

2865
01:55:47,420 --> 01:55:49,070
of something like convolution if we

2866
01:55:49,070 --> 01:55:50,420
discovered convolution we'd like to

2867
01:55:50,420 --> 01:55:52,250
respect that discovery and then

2868
01:55:52,250 --> 01:55:54,020
elaborate on it so we could do something

2869
01:55:54,020 --> 01:55:55,430
like this like we can get repetition

2870
01:55:55,430 --> 01:55:57,620
with variation very naturally and so

2871
01:55:57,620 --> 01:55:59,720
these patterns come out all the time in

2872
01:55:59,720 --> 01:56:03,020
cpp ends where it looks like almost like

2873
01:56:03,020 --> 01:56:04,520
a repetitious pattern like you might

2874
01:56:04,520 --> 01:56:06,560
even remind you Begley of something like

2875
01:56:06,560 --> 01:56:09,110
convolution but this is just a spatial

2876
01:56:09,110 --> 01:56:12,290
pattern but the but the the pattern that

2877
01:56:12,290 --> 01:56:14,300
every nexus is actually unique and the

2878
01:56:14,300 --> 01:56:16,370
reason is because it's very simple what

2879
01:56:16,370 --> 01:56:18,260
we have is we have basically like sine

2880
01:56:18,260 --> 01:56:20,180
waves which are like periodic functions

2881
01:56:20,180 --> 01:56:22,670
coming in for X and y but we also have

2882
01:56:22,670 --> 01:56:23,990
something else that's not a sine wave

2883
01:56:23,990 --> 01:56:26,300
coming in so if you are a function of

2884
01:56:26,300 --> 01:56:29,600
both periodic and not periodic inputs

2885
01:56:29,600 --> 01:56:31,190
then you will get repetition with

2886
01:56:31,190 --> 01:56:33,500
variation very simply and so it can be

2887
01:56:33,500 --> 01:56:35,110
explained through like this gradient

2888
01:56:35,110 --> 01:56:37,790
concept and so like these are just other

2889
01:56:37,790 --> 01:56:42,260
pictures of this kind of thing and if

2890
01:56:42,260 --> 01:56:44,270
you think about these kinds of patterns

2891
01:56:44,270 --> 01:56:46,940
it's interesting to think about the the

2892
01:56:46,940 --> 01:56:50,360
extreme uniformity and regularity of the

2893
01:56:50,360 --> 01:56:51,830
kinds of neural structures that were

2894
01:56:51,830 --> 01:56:53,540
familiar with today like say a

2895
01:56:53,540 --> 01:56:55,520
convolutional structure where in effect

2896
01:56:55,520 --> 01:56:57,230
like inside of a filter the same

2897
01:56:57,230 --> 01:56:58,760
operation is performed at many many

2898
01:56:58,760 --> 01:56:59,950
different location many

2899
01:56:59,950 --> 01:57:02,410
locations in space but it's exactly the

2900
01:57:02,410 --> 01:57:05,020
same stereotyped operation as you can

2901
01:57:05,020 --> 01:57:06,910
see we could have subtle variation

2902
01:57:06,910 --> 01:57:09,040
across the field even as we respect a

2903
01:57:09,040 --> 01:57:10,450
general principle which is repetition

2904
01:57:10,450 --> 01:57:12,880
with variation with up the power of an

2905
01:57:12,880 --> 01:57:14,830
encoding like this which gives us the

2906
01:57:14,830 --> 01:57:17,200
opportunity to consider lots of richer

2907
01:57:17,200 --> 01:57:20,050
different kinds of principles but that's

2908
01:57:20,050 --> 01:57:22,120
still respect regularity in some way and

2909
01:57:22,120 --> 01:57:24,520
infect all those all those patterns and

2910
01:57:24,520 --> 01:57:25,900
pick breeder that you saw before

2911
01:57:25,900 --> 01:57:27,880
they're also represented by cppm so that

2912
01:57:27,880 --> 01:57:29,770
kind of partly explains why they have

2913
01:57:29,770 --> 01:57:33,670
this kind of very familiar reminiscence

2914
01:57:33,670 --> 01:57:36,540
of sort of biological structures and so

2915
01:57:36,540 --> 01:57:39,220
what do we wish we could do here is we

2916
01:57:39,220 --> 01:57:40,690
could take these kinds of

2917
01:57:40,690 --> 01:57:43,030
representations and use them to encode

2918
01:57:43,030 --> 01:57:44,560
neural networks that would be naturally

2919
01:57:44,560 --> 01:57:46,300
like the cool thing right so we have

2920
01:57:46,300 --> 01:57:47,560
this ability to encode like these really

2921
01:57:47,560 --> 01:57:49,930
large complicated patterns which have

2922
01:57:49,930 --> 01:57:51,040
symmetries and regularities and

2923
01:57:51,040 --> 01:57:53,170
repetition with variation so how can we

2924
01:57:53,170 --> 01:57:55,150
do that and that was called originally

2925
01:57:55,150 --> 01:57:58,660
hyper neat or which stands for hypercube

2926
01:57:58,660 --> 01:58:01,060
base need and the hypercube part comes

2927
01:58:01,060 --> 01:58:03,310
in because the main insight is okay

2928
01:58:03,310 --> 01:58:04,660
let's say we have these patterns and we

2929
01:58:04,660 --> 01:58:05,770
want to interpret them as neural

2930
01:58:05,770 --> 01:58:07,300
networks well what we have if you look

2931
01:58:07,300 --> 01:58:09,190
here is like we have a network and this

2932
01:58:09,190 --> 01:58:10,540
is a really simple network here with x

2933
01:58:10,540 --> 01:58:13,240
and y and like if there is a symmetric

2934
01:58:13,240 --> 01:58:15,250
function inside of here like this G

2935
01:58:15,250 --> 01:58:17,110
means like a Gaussian for example what

2936
01:58:17,110 --> 01:58:18,400
will get a gradient pattern like this

2937
01:58:18,400 --> 01:58:21,850
which is symmetric and we wish we could

2938
01:58:21,850 --> 01:58:23,260
just do that in connectivity like we

2939
01:58:23,260 --> 01:58:24,520
wish we could output not a symmetric

2940
01:58:24,520 --> 01:58:26,200
gradient pattern but we wish we could

2941
01:58:26,200 --> 01:58:28,150
just output a symmetric network pattern

2942
01:58:28,150 --> 01:58:29,950
because then we could interpret it as a

2943
01:58:29,950 --> 01:58:32,230
neural network and in fact that's easy

2944
01:58:32,230 --> 01:58:35,770
to do is the great news because it's the

2945
01:58:35,770 --> 01:58:39,250
fact is that a 2d 2d connections which

2946
01:58:39,250 --> 01:58:41,470
means connections that connect nodes

2947
01:58:41,470 --> 01:58:43,270
that are situated in two-dimensional

2948
01:58:43,270 --> 01:58:45,790
space are isomorphic to four-dimensional

2949
01:58:45,790 --> 01:58:48,000
points and what I mean by that is a

2950
01:58:48,000 --> 01:58:50,380
connection between two two-dimensional

2951
01:58:50,380 --> 01:58:53,110
points is identified by four spatial

2952
01:58:53,110 --> 01:58:56,140
dimensions right the the x1y1 of the

2953
01:58:56,140 --> 01:58:58,780
source node and the x2y2 of the target

2954
01:58:58,780 --> 01:59:01,390
node and so if we think of x1 y1 x2 y2

2955
01:59:01,390 --> 01:59:03,580
as a point in four-dimensional space

2956
01:59:03,580 --> 01:59:05,890
then all we're talking about is painting

2957
01:59:05,890 --> 01:59:07,540
patterns like this instead of in two

2958
01:59:07,540 --> 01:59:09,370
dimensions in four dimensions and that's

2959
01:59:09,370 --> 01:59:10,630
why it's called the hypercube based

2960
01:59:10,630 --> 01:59:13,010
because basically it's painting

2961
01:59:13,010 --> 01:59:15,140
inside of a hypercube with a/c PPN and

2962
01:59:15,140 --> 01:59:17,900
once we do that then we can interpret

2963
01:59:17,900 --> 01:59:20,810
the output of this it as every point in

2964
01:59:20,810 --> 01:59:22,190
four-dimensional space identifies a

2965
01:59:22,190 --> 01:59:23,870
connection so let's say I laid out a

2966
01:59:23,870 --> 01:59:26,360
five by five grid here then I can query

2967
01:59:26,360 --> 01:59:28,340
every potential connection and ask

2968
01:59:28,340 --> 01:59:30,320
whether it's connected for example by

2969
01:59:30,320 --> 01:59:32,120
placing a threshold on the output of the

2970
01:59:32,120 --> 01:59:34,070
of the CP PN and so you can see this

2971
01:59:34,070 --> 01:59:35,989
this CP PN actually does output this

2972
01:59:35,989 --> 01:59:37,489
pattern if I have a threshold for

2973
01:59:37,489 --> 01:59:39,380
whether I show you the connection or not

2974
01:59:39,380 --> 01:59:42,350
and and so we can now actually transfer

2975
01:59:42,350 --> 01:59:44,450
all of the capabilities that we saw in

2976
01:59:44,450 --> 01:59:45,770
sort of generating this kind of stuff

2977
01:59:45,770 --> 01:59:47,660
into generating networks and that's what

2978
01:59:47,660 --> 01:59:49,430
hyper neat is it's basically a four

2979
01:59:49,430 --> 01:59:52,550
dimensional CP PN and so we call the

2980
01:59:52,550 --> 01:59:55,520
target the target grid of points the

2981
01:59:55,520 --> 01:59:57,110
substrate so there's a substrate of

2982
01:59:57,110 --> 01:59:59,330
nodes that are situated in space and

2983
01:59:59,330 --> 02:00:01,340
then the CP pn will output a pattern

2984
02:00:01,340 --> 02:00:03,500
which is then painted across this to get

2985
02:00:03,500 --> 02:00:05,630
a connectivity pattern so it fective Lee

2986
02:00:05,630 --> 02:00:07,820
is seeing geometry right like the this

2987
02:00:07,820 --> 02:00:09,530
CP PN is computing a pattern as a

2988
02:00:09,530 --> 02:00:11,150
function of the geometry of these nodes

2989
02:00:11,150 --> 02:00:14,989
and so it substrates these places where

2990
02:00:14,989 --> 02:00:16,160
we can paint these patterns can be

2991
02:00:16,160 --> 02:00:18,020
anything they can be a grid like this

2992
02:00:18,020 --> 02:00:19,790
that could be radial in nature that

2993
02:00:19,790 --> 02:00:21,500
could be three-dimensional they could be

2994
02:00:21,500 --> 02:00:23,030
what we call sandwiches where I'm asking

2995
02:00:23,030 --> 02:00:25,040
about connections that connect from one

2996
02:00:25,040 --> 02:00:27,230
one one two-dimensional slice to another

2997
02:00:27,230 --> 02:00:29,180
or they could even be stacks like this

2998
02:00:29,180 --> 02:00:32,239
and then if we do sort of look at the

2999
02:00:32,239 --> 02:00:33,980
patterns that are output by CP pns in

3000
02:00:33,980 --> 02:00:35,720
connection space we see that they have

3001
02:00:35,720 --> 02:00:37,310
the same properties as the spatial

3002
02:00:37,310 --> 02:00:38,660
patterns like in a pig breeder type of

3003
02:00:38,660 --> 02:00:40,790
system we can see symmetry and perfect

3004
02:00:40,790 --> 02:00:42,380
symmetry repetition repetition with

3005
02:00:42,380 --> 02:00:43,970
variation we get all those things now

3006
02:00:43,970 --> 02:00:46,160
nicely but in connectivity and even if

3007
02:00:46,160 --> 02:00:47,180
we want it to have three-dimensional

3008
02:00:47,180 --> 02:00:48,980
connectivity structures we could have

3009
02:00:48,980 --> 02:00:51,860
six dimensional CP pins because x1 y1 z1

3010
02:00:51,860 --> 02:00:55,130
x2 y2 z2 and so we got all these

3011
02:00:55,130 --> 02:00:57,260
patterns now nicely and in three

3012
02:00:57,260 --> 02:00:59,750
dimensions we even have this really cool

3013
02:00:59,750 --> 02:01:01,580
property of resolution independence

3014
02:01:01,580 --> 02:01:03,410
which is basically to say I'm actually

3015
02:01:03,410 --> 02:01:05,930
what I'm actually encoding is not some

3016
02:01:05,930 --> 02:01:08,480
fixed discrete connectivity pattern from

3017
02:01:08,480 --> 02:01:11,120
some given CP pn like this one here but

3018
02:01:11,120 --> 02:01:12,980
actually I can I can output that pattern

3019
02:01:12,980 --> 02:01:14,720
at any resolution so these are two

3020
02:01:14,720 --> 02:01:16,670
resolutions here and you can see that

3021
02:01:16,670 --> 02:01:17,600
actually what I'm outputting is a

3022
02:01:17,600 --> 02:01:19,340
connectivity concept not a specific

3023
02:01:19,340 --> 02:01:21,920
connectivity which means like and here's

3024
02:01:21,920 --> 02:01:24,980
another example that it's scalable

3025
02:01:24,980 --> 02:01:29,450
so the CP PNC's geometry and it

3026
02:01:29,450 --> 02:01:31,340
generates the network as a function of

3027
02:01:31,340 --> 02:01:34,460
the geometry but instead of building a

3028
02:01:34,460 --> 02:01:36,020
mecha and building in a mechanism for

3029
02:01:36,020 --> 02:01:39,140
processing geometry like convolution it

3030
02:01:39,140 --> 02:01:40,910
would be interesting to have something

3031
02:01:40,910 --> 02:01:42,770
that can build a represent that we can

3032
02:01:42,770 --> 02:01:44,630
where we build a representation that can

3033
02:01:44,630 --> 02:01:46,670
discover the mechanism so just to repeat

3034
02:01:46,670 --> 02:01:48,590
that think about that for a second we

3035
02:01:48,590 --> 02:01:50,300
build in mechanisms like convolution

3036
02:01:50,300 --> 02:01:52,400
right now but wouldn't be nice if we had

3037
02:01:52,400 --> 02:01:54,890
the ability to search for the mechanism

3038
02:01:54,890 --> 02:01:57,410
itself and so we can do that with this

3039
02:01:57,410 --> 02:01:59,300
kind of thing so we can imagine like if

3040
02:01:59,300 --> 02:02:00,590
we had like a network for playing

3041
02:02:00,590 --> 02:02:02,270
checkers or something like we placed

3042
02:02:02,270 --> 02:02:04,040
these connectivities on top of this

3043
02:02:04,040 --> 02:02:05,840
structure and then we have the cpp and

3044
02:02:05,840 --> 02:02:07,930
fill in the connectivity patterns and

3045
02:02:07,930 --> 02:02:10,070
like we actually could have more

3046
02:02:10,070 --> 02:02:11,390
complicated structures like with

3047
02:02:11,390 --> 02:02:13,370
multiple filters where each sheet is

3048
02:02:13,370 --> 02:02:15,320
encoded separately like this so this

3049
02:02:15,320 --> 02:02:17,000
looks more like what a modern covenant--

3050
02:02:17,000 --> 02:02:20,810
would look like and then we'll get we'll

3051
02:02:20,810 --> 02:02:24,050
get a patterns of connectivity that are

3052
02:02:24,050 --> 02:02:26,210
appropriate to the specific domain and

3053
02:02:26,210 --> 02:02:27,980
rather than show you like a result I

3054
02:02:27,980 --> 02:02:29,360
don't want to just give a graph and say

3055
02:02:29,360 --> 02:02:31,130
ok it learned to play checkers it's kind

3056
02:02:31,130 --> 02:02:32,600
of boring I want to show you something

3057
02:02:32,600 --> 02:02:33,980
certain insight about why this is so

3058
02:02:33,980 --> 02:02:35,780
interesting we can look at the

3059
02:02:35,780 --> 02:02:37,250
cross-sections of connectivity now

3060
02:02:37,250 --> 02:02:38,780
spatially because they have a geometry

3061
02:02:38,780 --> 02:02:40,280
so these are just cross-sections of

3062
02:02:40,280 --> 02:02:42,140
connectivity and it turned out that if

3063
02:02:42,140 --> 02:02:43,910
we look at them by eye just eyeballing

3064
02:02:43,910 --> 02:02:45,890
them we can actually tell which networks

3065
02:02:45,890 --> 02:02:48,200
are more general in other words some

3066
02:02:48,200 --> 02:02:49,790
networks that were output by a process

3067
02:02:49,790 --> 02:02:51,170
searching for cpp ends that encode

3068
02:02:51,170 --> 02:02:52,820
neural networks that play checkers were

3069
02:02:52,820 --> 02:02:54,620
general and could play other players and

3070
02:02:54,620 --> 02:02:56,270
others were not and it turns out you can

3071
02:02:56,270 --> 02:02:58,310
literally see generality and smoothness

3072
02:02:58,310 --> 02:03:00,410
the smoothness across the geometry

3073
02:03:00,410 --> 02:03:01,850
represents generality because it's not

3074
02:03:01,850 --> 02:03:03,650
memorization whereas these kind of

3075
02:03:03,650 --> 02:03:05,210
jagged structures which beat the

3076
02:03:05,210 --> 02:03:06,680
opponent upon which they were trained

3077
02:03:06,680 --> 02:03:09,140
are basically memorizing the game that

3078
02:03:09,140 --> 02:03:10,850
they played and you can actually see

3079
02:03:10,850 --> 02:03:12,170
that here and so you can see like the

3080
02:03:12,170 --> 02:03:13,280
power of being able to represent

3081
02:03:13,280 --> 02:03:15,560
regularities across geometry it's not

3082
02:03:15,560 --> 02:03:17,030
necessarily convolutional type of

3083
02:03:17,030 --> 02:03:17,690
regularity

3084
02:03:17,690 --> 02:03:19,940
there's also highly compressed so this

3085
02:03:19,940 --> 02:03:22,130
little CP PN here with a few dozen

3086
02:03:22,130 --> 02:03:24,020
connections is encoding these thousands

3087
02:03:24,020 --> 02:03:25,550
of connections in this particular

3088
02:03:25,550 --> 02:03:27,080
substrate and that's why it's very

3089
02:03:27,080 --> 02:03:30,560
efficient to search we see regularities

3090
02:03:30,560 --> 02:03:32,300
in more than just vision like imagine

3091
02:03:32,300 --> 02:03:34,719
controlling like a Quadra petrol bot

3092
02:03:34,719 --> 02:03:38,310
all right and like in a quadrupedal case

3093
02:03:38,310 --> 02:03:41,530
this is also a kind of regularity but

3094
02:03:41,530 --> 02:03:43,090
it's not a convolutional regularity and

3095
02:03:43,090 --> 02:03:45,070
in fact we find other kinds of

3096
02:03:45,070 --> 02:03:46,630
regularities inside of these networks

3097
02:03:46,630 --> 02:03:48,100
and you see the indirect are much more

3098
02:03:48,100 --> 02:03:50,199
organized than if we just searched for

3099
02:03:50,199 --> 02:03:52,000
every connection I sort of on its own as

3100
02:03:52,000 --> 02:03:55,780
we normally would it turns out that cpp

3101
02:03:55,780 --> 02:03:58,390
ends in neural networks encoded by CP

3102
02:03:58,390 --> 02:04:00,040
wounds are actually differentiable like

3103
02:04:00,040 --> 02:04:02,350
you can actually compute the gradient

3104
02:04:02,350 --> 02:04:03,670
back through the neural network that's

3105
02:04:03,670 --> 02:04:06,219
encoded back into the CPP n so this is

3106
02:04:06,219 --> 02:04:09,160
not an evolutionary principle in in

3107
02:04:09,160 --> 02:04:11,980
principle it's actually a general

3108
02:04:11,980 --> 02:04:13,900
principle for encoding complex

3109
02:04:13,900 --> 02:04:15,699
structures and several groups have

3110
02:04:15,699 --> 02:04:17,170
realized this and done it in slightly

3111
02:04:17,170 --> 02:04:19,090
different ways like these differential

3112
02:04:19,090 --> 02:04:20,350
pattern producing networks come from

3113
02:04:20,350 --> 02:04:22,480
Crisanta Fernando a deep mind and his

3114
02:04:22,480 --> 02:04:25,449
group and David HA at Google brain did

3115
02:04:25,449 --> 02:04:26,710
these hyper network some of you might

3116
02:04:26,710 --> 02:04:28,780
have heard of these geni is something

3117
02:04:28,780 --> 02:04:29,860
we're going to talk about soon and

3118
02:04:29,860 --> 02:04:31,480
introduce soon so that's just a little

3119
02:04:31,480 --> 02:04:34,090
bit of a teaser with some surprising

3120
02:04:34,090 --> 02:04:36,640
results on convolution and so we're

3121
02:04:36,640 --> 02:04:38,199
starting to see people differentiating

3122
02:04:38,199 --> 02:04:40,510
back through indirect encodings and this

3123
02:04:40,510 --> 02:04:41,770
is I think is exciting because this is a

3124
02:04:41,770 --> 02:04:44,680
new way to find regularities that aren't

3125
02:04:44,680 --> 02:04:48,340
just simple convolution in fact the DPP

3126
02:04:48,340 --> 02:04:51,010
ends that that that came from deep mind

3127
02:04:51,010 --> 02:04:53,860
were did find convolution and this was

3128
02:04:53,860 --> 02:04:55,660
shown in their paper but but it's

3129
02:04:55,660 --> 02:04:57,100
actually a really simple concept I mean

3130
02:04:57,100 --> 02:04:59,050
to describe convolution is very simple

3131
02:04:59,050 --> 02:05:00,190
so this isn't necessarily that

3132
02:05:00,190 --> 02:05:01,780
impressive that it would find

3133
02:05:01,780 --> 02:05:04,000
convolution but what it shows is that

3134
02:05:04,000 --> 02:05:05,860
you can go beyond that because look

3135
02:05:05,860 --> 02:05:08,020
going beyond convolution is also really

3136
02:05:08,020 --> 02:05:09,820
pretty simple in fact it's like if it's

3137
02:05:09,820 --> 02:05:11,590
a function of the differences in the

3138
02:05:11,590 --> 02:05:13,660
positions of the of the incoming and

3139
02:05:13,660 --> 02:05:15,790
outgoing nodes from from x and y and

3140
02:05:15,790 --> 02:05:18,580
also of just the incoming positions then

3141
02:05:18,580 --> 02:05:20,440
you can get repetition with variation in

3142
02:05:20,440 --> 02:05:22,930
convolutional structure and so actually

3143
02:05:22,930 --> 02:05:24,640
david Hawk calls this relaxed weight

3144
02:05:24,640 --> 02:05:25,900
sharing that sort of another name and

3145
02:05:25,900 --> 02:05:27,190
showed it in el STM's with hyper

3146
02:05:27,190 --> 02:05:29,050
networks and we have this ability to do

3147
02:05:29,050 --> 02:05:30,699
these kinds of discoveries I just want

3148
02:05:30,699 --> 02:05:31,690
to point out that there are other kinds

3149
02:05:31,690 --> 02:05:33,640
of cppm like encodings like this is a

3150
02:05:33,640 --> 02:05:36,550
wavelet based encoding from schmidhuber

3151
02:05:36,550 --> 02:05:39,400
group with coot nick which actually

3152
02:05:39,400 --> 02:05:40,930
encoded million connection neural

3153
02:05:40,930 --> 02:05:43,449
networks and there are some interesting

3154
02:05:43,449 --> 02:05:45,850
extensions like we'd imagine describing

3155
02:05:45,850 --> 02:05:46,810
architecture

3156
02:05:46,810 --> 02:05:48,430
PPN so this could be a really nice way

3157
02:05:48,430 --> 02:05:50,410
to get regular architectures there's

3158
02:05:50,410 --> 02:05:52,300
been work on trying to actually search

3159
02:05:52,300 --> 02:05:53,740
through the substrate itself which is

3160
02:05:53,740 --> 02:05:55,270
the positions of the neurons not just

3161
02:05:55,270 --> 02:05:56,710
the connections that connect them and

3162
02:05:56,710 --> 02:05:58,540
you can even think of cpp ends is

3163
02:05:58,540 --> 02:06:00,940
possibly a universal learning rule so

3164
02:06:00,940 --> 02:06:02,800
for example if it's not just a function

3165
02:06:02,800 --> 02:06:04,480
of x and y but also a function of the

3166
02:06:04,480 --> 02:06:06,430
current activations then the output is

3167
02:06:06,430 --> 02:06:08,500
actually a delta on the weight and this

3168
02:06:08,500 --> 02:06:10,270
is actually a universal description of a

3169
02:06:10,270 --> 02:06:12,520
dynamical system with a pattern of

3170
02:06:12,520 --> 02:06:13,960
learning rules painted across the

3171
02:06:13,960 --> 02:06:17,350
connections and this has been explored I

3172
02:06:17,350 --> 02:06:18,580
put a little reference here for people

3173
02:06:18,580 --> 02:06:20,320
get the slides later but there's a lot

3174
02:06:20,320 --> 02:06:23,050
to be explored there and so there's a

3175
02:06:23,050 --> 02:06:24,760
lot we can do with these and this is I

3176
02:06:24,760 --> 02:06:26,320
think helpful to combine with the

3177
02:06:26,320 --> 02:06:27,970
population-based search because it

3178
02:06:27,970 --> 02:06:29,830
preserves regularities for the long run

3179
02:06:29,830 --> 02:06:31,660
so we can exploit them as we diverge and

3180
02:06:31,660 --> 02:06:34,080
now Jeff is going to wrap up and

3181
02:06:34,080 --> 02:06:44,170
conclude for the future all right so

3182
02:06:44,170 --> 02:06:46,000
we're gonna look forward now a bit

3183
02:06:46,000 --> 02:06:48,010
ambitiously towards where we might take

3184
02:06:48,010 --> 02:06:51,730
that where this might all take us so

3185
02:06:51,730 --> 02:06:54,700
looking forward here one of the things I

3186
02:06:54,700 --> 02:06:55,780
think it's really interesting to think

3187
02:06:55,780 --> 02:06:57,070
about it's like how will we as a

3188
02:06:57,070 --> 02:06:59,500
community achieve our most ambitious

3189
02:06:59,500 --> 02:07:02,200
research goals and there are many and

3190
02:07:02,200 --> 02:07:03,400
each of us might have different ones but

3191
02:07:03,400 --> 02:07:04,900
one of them I think that we all are

3192
02:07:04,900 --> 02:07:06,550
interested in is producing artificial

3193
02:07:06,550 --> 02:07:08,050
general intelligence or human level

3194
02:07:08,050 --> 02:07:09,160
intelligence whatever you want to call

3195
02:07:09,160 --> 02:07:10,630
it and the question is how will we get

3196
02:07:10,630 --> 02:07:12,130
there and do the lessons from this

3197
02:07:12,130 --> 02:07:13,780
tutorial help in any way

3198
02:07:13,780 --> 02:07:15,610
so I wanted to take a step back and

3199
02:07:15,610 --> 02:07:16,870
think about kind of what it is that

3200
02:07:16,870 --> 02:07:18,460
we're doing as a community and you could

3201
02:07:18,460 --> 02:07:21,370
argue and I do that to some extent what

3202
02:07:21,370 --> 02:07:23,380
we do is as the dominant paradigm in

3203
02:07:23,380 --> 02:07:25,330
machine learning is that we are trying

3204
02:07:25,330 --> 02:07:27,670
to identify piece by piece all of the

3205
02:07:27,670 --> 02:07:30,190
building blocks of intelligence and if

3206
02:07:30,190 --> 02:07:31,740
you look just for example at the

3207
02:07:31,740 --> 02:07:34,330
building blocks listed here many of the

3208
02:07:34,330 --> 02:07:36,100
papers at this conference our previous

3209
02:07:36,100 --> 02:07:38,110
nurse and I CML and I clear our each

3210
02:07:38,110 --> 02:07:39,610
kind of saying here's a piece I think is

3211
02:07:39,610 --> 02:07:41,020
needed here's a piece I think is needed

3212
02:07:41,020 --> 02:07:43,090
or here's an improvement on a piece and

3213
02:07:43,090 --> 02:07:44,530
that kind of raises the question of how

3214
02:07:44,530 --> 02:07:46,300
many total building blocks would we need

3215
02:07:46,300 --> 02:07:47,830
if we wanted to build this complicated

3216
02:07:47,830 --> 02:07:49,930
thinking machine and can we find them

3217
02:07:49,930 --> 02:07:52,600
all this manual path to AI which I think

3218
02:07:52,600 --> 02:07:54,460
we're all committed to is also to some

3219
02:07:54,460 --> 02:07:56,830
extent committed to a Phase two which is

3220
02:07:56,830 --> 02:07:58,360
to say now we at some point we have to

3221
02:07:58,360 --> 02:07:59,650
figure out how to combine all of these

3222
02:07:59,650 --> 02:08:00,320
buildings

3223
02:08:00,320 --> 02:08:01,909
together into a giant complicated

3224
02:08:01,909 --> 02:08:03,559
thinking machine which is a really

3225
02:08:03,559 --> 02:08:05,840
Herculean task and is very daunting and

3226
02:08:05,840 --> 02:08:07,280
I don't even know if it's possible but

3227
02:08:07,280 --> 02:08:09,889
we're kind of implicitly committed to

3228
02:08:09,889 --> 02:08:12,679
that so you know if you think back on

3229
02:08:12,679 --> 02:08:13,849
the history of machine learning though

3230
02:08:13,849 --> 02:08:15,559
there's some reason to be skeptical of

3231
02:08:15,559 --> 02:08:18,320
this manual a passion approach to AI if

3232
02:08:18,320 --> 02:08:19,999
you look at the history of machine

3233
02:08:19,999 --> 02:08:21,469
learning and deep learning what you tend

3234
02:08:21,469 --> 02:08:23,630
to see is that hand designs pipelines

3235
02:08:23,630 --> 02:08:25,820
and systems ultimately give way to

3236
02:08:25,820 --> 02:08:28,340
learned pipelines and systems so the

3237
02:08:28,340 --> 02:08:29,959
classic example of this is in computer

3238
02:08:29,959 --> 02:08:31,639
vision features where we used to hand

3239
02:08:31,639 --> 02:08:33,320
design them and then do some learning on

3240
02:08:33,320 --> 02:08:34,760
the top and now we learn the whole thing

3241
02:08:34,760 --> 02:08:36,860
we used to and for hand design

3242
02:08:36,860 --> 02:08:39,019
architectures and increasingly those are

3243
02:08:39,019 --> 02:08:40,639
being learned we used to hand design

3244
02:08:40,639 --> 02:08:42,499
hyper parameters and data augmentation

3245
02:08:42,499 --> 02:08:44,030
increasingly those are being learned and

3246
02:08:44,030 --> 02:08:46,489
that's also now being applied to RL

3247
02:08:46,489 --> 02:08:48,110
algorithms themselves or meta learning

3248
02:08:48,110 --> 02:08:49,610
is learning the learning algorithm as

3249
02:08:49,610 --> 02:08:51,169
opposed to relying on our NTR

3250
02:08:51,169 --> 02:08:53,780
intelligence to design them so this

3251
02:08:53,780 --> 02:08:55,639
suggests an alternate path to trying to

3252
02:08:55,639 --> 02:08:58,459
get two really really powerful AI and

3253
02:08:58,459 --> 02:09:00,499
that is what I call AI generating

3254
02:09:00,499 --> 02:09:03,409
algorithms or AIGA s and the idea is

3255
02:09:03,409 --> 02:09:05,479
learn as much as possible really go

3256
02:09:05,479 --> 02:09:07,070
all-in on the idea that we're gonna use

3257
02:09:07,070 --> 02:09:09,499
data and learning to get there we want

3258
02:09:09,499 --> 02:09:10,999
algorithms that bootstrap themselves

3259
02:09:10,999 --> 02:09:13,369
from starting off very simple to

3260
02:09:13,369 --> 02:09:15,349
ultimately producing general

3261
02:09:15,349 --> 02:09:17,840
intelligence via an expensive outer loop

3262
02:09:17,840 --> 02:09:19,699
algorithm that is searching to produce

3263
02:09:19,699 --> 02:09:22,010
an inner loop agent that itself is very

3264
02:09:22,010 --> 02:09:24,469
sample efficient and a very general AI

3265
02:09:24,469 --> 02:09:26,059
agent and we know that this can work

3266
02:09:26,059 --> 02:09:27,860
because it happened on earth so I think

3267
02:09:27,860 --> 02:09:29,599
that there is very very briefly I think

3268
02:09:29,599 --> 02:09:30,949
that there's three pillars that are

3269
02:09:30,949 --> 02:09:32,780
essential for this approach one is we

3270
02:09:32,780 --> 02:09:34,099
have to medal learn the architectures

3271
02:09:34,099 --> 02:09:35,570
two is we have to meddle learn the

3272
02:09:35,570 --> 02:09:37,820
learning algorithms themselves and three

3273
02:09:37,820 --> 02:09:39,590
we have to automatically generate the

3274
02:09:39,590 --> 02:09:40,969
learning environments because as we

3275
02:09:40,969 --> 02:09:42,469
learned throughout this talk you have to

3276
02:09:42,469 --> 02:09:43,729
generate the problems while you're

3277
02:09:43,729 --> 02:09:45,199
generating the solutions or you'll get

3278
02:09:45,199 --> 02:09:47,749
stuck and so a lot of the ideas that we

3279
02:09:47,749 --> 02:09:48,919
told you about today are very

3280
02:09:48,919 --> 02:09:50,599
instrumental to this vision for

3281
02:09:50,599 --> 02:09:52,969
producing AI generating algorithms you

3282
02:09:52,969 --> 02:09:54,530
could imagine for example as Ken just

3283
02:09:54,530 --> 02:09:55,669
described that if you want to learn

3284
02:09:55,669 --> 02:09:57,530
architectures you might want it indirect

3285
02:09:57,530 --> 02:09:59,209
encoding so you can get variations on

3286
02:09:59,209 --> 02:10:01,729
say convolution for example in the human

3287
02:10:01,729 --> 02:10:03,679
eye your local receptive fields in the

3288
02:10:03,679 --> 02:10:05,599
center of your vision are very small but

3289
02:10:05,599 --> 02:10:07,219
toward the periphery they kind of expand

3290
02:10:07,219 --> 02:10:08,869
out and they're larger so that's a

3291
02:10:08,869 --> 02:10:10,579
variation on a regular theme that we

3292
02:10:10,579 --> 02:10:11,959
might want to automatically discovery

3293
02:10:11,959 --> 02:10:13,489
say for within directing code

3294
02:10:13,489 --> 02:10:15,920
but also the overall the overall thing

3295
02:10:15,920 --> 02:10:17,630
meta-learning architectures and

3296
02:10:17,630 --> 02:10:19,250
algorithms and generating environments

3297
02:10:19,250 --> 02:10:21,680
itself involves all of the principles

3298
02:10:21,680 --> 02:10:22,850
we've talked about today open-ended

3299
02:10:22,850 --> 02:10:25,610
search and quality diversity the years

3300
02:10:25,610 --> 02:10:27,290
kind of this expanding set of

3301
02:10:27,290 --> 02:10:29,960
high-quality diverse solutions so a lot

3302
02:10:29,960 --> 02:10:31,610
of the ideas that we talked about today

3303
02:10:31,610 --> 02:10:34,010
we think are gonna be essential so AI

3304
02:10:34,010 --> 02:10:36,230
generating algorithms we think may be

3305
02:10:36,230 --> 02:10:37,940
the fastest path to artificial general

3306
02:10:37,940 --> 02:10:39,770
intelligence it's interesting even if

3307
02:10:39,770 --> 02:10:41,210
it's not because it's interesting to

3308
02:10:41,210 --> 02:10:42,800
figure out how can simple processes

3309
02:10:42,800 --> 02:10:45,200
bootstrap themselves up to producing

3310
02:10:45,200 --> 02:10:47,090
astronomic complexity and intelligence

3311
02:10:47,090 --> 02:10:49,489
has happened on earth and therefore it

3312
02:10:49,489 --> 02:10:51,170
helps us understand our own origins even

3313
02:10:51,170 --> 02:10:54,020
if it's not the fastest path to AI so we

3314
02:10:54,020 --> 02:10:55,400
think that this should be a Grand

3315
02:10:55,400 --> 02:10:57,230
Challenge of computer science research

3316
02:10:57,230 --> 02:10:58,489
and we hope you're all interested in

3317
02:10:58,489 --> 02:11:00,890
trying to solve it and help us work on

3318
02:11:00,890 --> 02:11:02,630
it so I'm not going to conclude the

3319
02:11:02,630 --> 02:11:04,670
entire tutorial in two quick slides

3320
02:11:04,670 --> 02:11:07,280
we've introduced mainly novelty search

3321
02:11:07,280 --> 02:11:09,980
quality diversity open-ended search

3322
02:11:09,980 --> 02:11:12,950
algorithms and indirect encoding we hope

3323
02:11:12,950 --> 02:11:13,880
that you agree that these are

3324
02:11:13,880 --> 02:11:16,370
interesting powerful ideas they have

3325
02:11:16,370 --> 02:11:18,200
empirically helped us solve previously

3326
02:11:18,200 --> 02:11:20,570
unsolvable problems but they also kind

3327
02:11:20,570 --> 02:11:23,330
of introduce new types or new classes of

3328
02:11:23,330 --> 02:11:25,010
problems that we think here we hope

3329
02:11:25,010 --> 02:11:26,600
you're interested in working on and

3330
02:11:26,600 --> 02:11:27,980
ultimately that we feel like there's

3331
02:11:27,980 --> 02:11:29,900
kind of two twin and tangled related

3332
02:11:29,900 --> 02:11:31,610
Grand Challenges here which is creating

3333
02:11:31,610 --> 02:11:34,370
open-ended algorithms and AI generating

3334
02:11:34,370 --> 02:11:36,620
algorithms so the overall conclusion is

3335
02:11:36,620 --> 02:11:38,330
that whether descendant or conversion

3336
02:11:38,330 --> 02:11:39,710
lots of the ideas that you heard about

3337
02:11:39,710 --> 02:11:41,570
today are being hybridized currently

3338
02:11:41,570 --> 02:11:43,100
within the machine learning community to

3339
02:11:43,100 --> 02:11:44,690
great effect and you know for example

3340
02:11:44,690 --> 02:11:47,060
all these techniques here but we think

3341
02:11:47,060 --> 02:11:49,040
there's a potential for a lot more so we

3342
02:11:49,040 --> 02:11:50,510
would encourage all of you like how

3343
02:11:50,510 --> 02:11:52,010
might these ideas help with the

3344
02:11:52,010 --> 02:11:53,300
techniques you're working on and the

3345
02:11:53,300 --> 02:11:54,860
problems that you're working on and how

3346
02:11:54,860 --> 02:11:56,510
can you best use some of these insights

3347
02:11:56,510 --> 02:11:58,460
and finally we just think that these

3348
02:11:58,460 --> 02:12:00,020
ideas are really exciting because they

3349
02:12:00,020 --> 02:12:02,000
may be true paths and really help us get

3350
02:12:02,000 --> 02:12:03,860
to our ultimate most ambitious research

3351
02:12:03,860 --> 02:12:05,390
goals and what could be more exciting

3352
02:12:05,390 --> 02:12:07,340
than that so with that I want to

3353
02:12:07,340 --> 02:12:08,960
conclude please make it rate of

3354
02:12:08,960 --> 02:12:10,460
microphones if you have QA we're happy

3355
02:12:10,460 --> 02:12:11,840
to stay here well under the break to

3356
02:12:11,840 --> 02:12:12,680
answer questions

3357
02:12:12,680 --> 02:12:14,210
we'll also be standing here afterwards

3358
02:12:14,210 --> 02:12:17,000
after the Q&A so thank you again to the

3359
02:12:17,000 --> 02:12:18,980
organizers and my fellow speakers and

3360
02:12:18,980 --> 02:12:20,090
will not take questions at the

3361
02:12:20,090 --> 02:12:22,630
microphone

3362
02:12:31,150 --> 02:12:33,820
is it cool if I have two questions

3363
02:12:33,820 --> 02:12:36,110
depending on how many other people lined

3364
02:12:36,110 --> 02:12:37,550
up maybe not maybe you get in the back

3365
02:12:37,550 --> 02:12:39,950
in the line if you don't mind yeah sure

3366
02:12:39,950 --> 02:12:42,350
first question is for like these

3367
02:12:42,350 --> 02:12:45,080
algorithms that generate problems and

3368
02:12:45,080 --> 02:12:48,290
solve these problems for the generators

3369
02:12:48,290 --> 02:12:50,690
have you guys ever run it in ran into

3370
02:12:50,690 --> 02:12:53,720
problems with grounding so look for a

3371
02:12:53,720 --> 02:12:56,870
little bit of context like I work in NLP

3372
02:12:56,870 --> 02:12:59,030
and I would totally love to be able to

3373
02:12:59,030 --> 02:13:03,350
apply these types of concepts to NLP but

3374
02:13:03,350 --> 02:13:06,260
obviously like I don't know the problems

3375
02:13:06,260 --> 02:13:08,989
that you have to generate for NOP have

3376
02:13:08,989 --> 02:13:12,890
to be grounded in well natural language

3377
02:13:12,890 --> 02:13:15,680
or natural language that looks like it's

3378
02:13:15,680 --> 02:13:17,930
coming for humans yeah so that's a

3379
02:13:17,930 --> 02:13:19,970
fascinating question I think that if you

3380
02:13:19,970 --> 02:13:21,770
want to understand it and you wanted to

3381
02:13:21,770 --> 02:13:23,000
speak our language than grounding is

3382
02:13:23,000 --> 02:13:24,050
essential and you would have to add

3383
02:13:24,050 --> 02:13:26,180
additional things that ground it to our

3384
02:13:26,180 --> 02:13:27,680
language but I also think it's

3385
02:13:27,680 --> 02:13:29,090
fascinating to think about what happens

3386
02:13:29,090 --> 02:13:31,220
if you don't ground it if it's inventing

3387
02:13:31,220 --> 02:13:33,140
entire new types of languages with new

3388
02:13:33,140 --> 02:13:34,790
types of linguistics and linguist could

3389
02:13:34,790 --> 02:13:36,440
spend decades or millennia trying to

3390
02:13:36,440 --> 02:13:38,510
kind of figure out the space of all

3391
02:13:38,510 --> 02:13:40,970
possible languages mu8 learned that like

3392
02:13:40,970 --> 02:13:42,680
all human languages share this type of

3393
02:13:42,680 --> 02:13:44,360
structure but there's actually all these

3394
02:13:44,360 --> 02:13:45,710
different structures to get invented

3395
02:13:45,710 --> 02:13:47,510
when things have emergent communication

3396
02:13:47,510 --> 02:13:49,430
on their own so grounding is essential

3397
02:13:49,430 --> 02:13:50,960
if you want to interact but maybe not if

3398
02:13:50,960 --> 02:13:51,950
you want to learn about the space of

3399
02:13:51,950 --> 02:13:52,489
possibility

3400
02:13:52,489 --> 02:13:54,200
but have you guys run into that sort of

3401
02:13:54,200 --> 02:13:57,140
problem when trying to generate say

3402
02:13:57,140 --> 02:13:59,390
these environments like obviously your

3403
02:13:59,390 --> 02:14:01,670
guyses environments have to be grounded

3404
02:14:01,670 --> 02:14:03,980
in something like the real world or

3405
02:14:03,980 --> 02:14:04,550
something like that

3406
02:14:04,550 --> 02:14:06,230
sure so to some extent because we use a

3407
02:14:06,230 --> 02:14:07,790
physics simulator that's grants our

3408
02:14:07,790 --> 02:14:10,250
physics you could also try to steer it

3409
02:14:10,250 --> 02:14:11,930
if you want to towards particular types

3410
02:14:11,930 --> 02:14:14,660
of problems so far we haven't run into

3411
02:14:14,660 --> 02:14:16,610
the problem of grounding because in the

3412
02:14:16,610 --> 02:14:18,260
cases where we have tried to use it for

3413
02:14:18,260 --> 02:14:19,760
another problem downstream like in the

3414
02:14:19,760 --> 02:14:21,230
nature intelligent trial and error paper

3415
02:14:21,230 --> 02:14:22,850
we have had a robot in a physics

3416
02:14:22,850 --> 02:14:24,110
simulator and that's close enough that

3417
02:14:24,110 --> 02:14:25,489
we can harness the solutions it comes up

3418
02:14:25,489 --> 02:14:28,690
with sure thanks

3419
02:14:30,320 --> 02:14:32,969
actually one just watch it but it just

3420
02:14:32,969 --> 02:14:35,579
is interesting to consider that that the

3421
02:14:35,579 --> 02:14:37,230
evolution of language also is an

3422
02:14:37,230 --> 02:14:45,659
open-ended process hi so I have a

3423
02:14:45,659 --> 02:14:47,579
question regarding the scaling of your

3424
02:14:47,579 --> 02:14:50,570
algorithms basically if you consider

3425
02:14:50,570 --> 02:14:53,190
configuration space to be characterized

3426
02:14:53,190 --> 02:14:56,039
by discrete set of variables there is

3427
02:14:56,039 --> 02:14:59,730
the issue with NP hardness of that doing

3428
02:14:59,730 --> 02:15:02,070
discrete optimization to sample from

3429
02:15:02,070 --> 02:15:07,409
this quality diversity basically do you

3430
02:15:07,409 --> 02:15:14,670
have any comments on this yeah the the

3431
02:15:14,670 --> 02:15:17,610
dimensionality of the so we would call

3432
02:15:17,610 --> 02:15:19,889
that what we're talking about the kinds

3433
02:15:19,889 --> 02:15:21,119
of behaviors were searching through we

3434
02:15:21,119 --> 02:15:22,170
might call it a behavior

3435
02:15:22,170 --> 02:15:23,699
characterization like there's some

3436
02:15:23,699 --> 02:15:26,130
vector that characterizes the behavior

3437
02:15:26,130 --> 02:15:29,070
space and that has some number of

3438
02:15:29,070 --> 02:15:31,020
variables or some dimensionality that

3439
02:15:31,020 --> 02:15:34,409
describes that space and the

3440
02:15:34,409 --> 02:15:35,699
dimensionality of the behavior

3441
02:15:35,699 --> 02:15:38,369
characterization does interact with the

3442
02:15:38,369 --> 02:15:41,400
search in some way but one thing to

3443
02:15:41,400 --> 02:15:42,719
consider just just when thinking about

3444
02:15:42,719 --> 02:15:44,610
this is that the dimensionality of the

3445
02:15:44,610 --> 02:15:45,630
behavior characterization is not

3446
02:15:45,630 --> 02:15:46,829
necessarily the same as the

3447
02:15:46,829 --> 02:15:49,260
dimensionality of the of the search

3448
02:15:49,260 --> 02:15:51,570
itself because the search is happening

3449
02:15:51,570 --> 02:15:53,520
inside of whatever your representation

3450
02:15:53,520 --> 02:15:55,199
is so for example like if it's neural

3451
02:15:55,199 --> 02:15:55,710
networks

3452
02:15:55,710 --> 02:15:57,179
it's the dimensionality of the neural

3453
02:15:57,179 --> 02:15:58,530
networks that defines the search space

3454
02:15:58,530 --> 02:15:59,880
that you're searching through the

3455
02:15:59,880 --> 02:16:01,469
demented behavior characterization is

3456
02:16:01,469 --> 02:16:03,570
actually not the search space so you can

3457
02:16:03,570 --> 02:16:05,699
have some some interaction effects that

3458
02:16:05,699 --> 02:16:07,920
are counterintuitive there because you

3459
02:16:07,920 --> 02:16:09,170
can have very high dimensional

3460
02:16:09,170 --> 02:16:11,309
characterization spaces where it

3461
02:16:11,309 --> 02:16:13,500
actually optimizes very easily because

3462
02:16:13,500 --> 02:16:14,550
actually a low dimensional optimization

3463
02:16:14,550 --> 02:16:18,420
space however having said that of course

3464
02:16:18,420 --> 02:16:20,670
if the if the behavior characterization

3465
02:16:20,670 --> 02:16:23,309
is extremely high dimensional then you

3466
02:16:23,309 --> 02:16:24,719
do probably have to do something to

3467
02:16:24,719 --> 02:16:28,500
accommodate that and there are different

3468
02:16:28,500 --> 02:16:30,510
quality diversity algorithms that are

3469
02:16:30,510 --> 02:16:31,829
probably more well suited to low

3470
02:16:31,829 --> 02:16:34,138
dimensional versus high dimensional and

3471
02:16:34,138 --> 02:16:37,019
so when you're discretizing that could

3472
02:16:37,019 --> 02:16:39,209
be probably more suited to to a lower

3473
02:16:39,209 --> 02:16:41,429
dimensional but there are QT algorithms

3474
02:16:41,429 --> 02:16:41,740
like

3475
02:16:41,740 --> 02:16:43,750
we'll see that are more not disparate i

3476
02:16:43,750 --> 02:16:45,400
trying to discretize the behavior space

3477
02:16:45,400 --> 02:16:47,290
which are more serious perhaps to a

3478
02:16:47,290 --> 02:16:48,580
higher dimensional type of behavior

3479
02:16:48,580 --> 02:16:51,639
characterization but ultimately there

3480
02:16:51,639 --> 02:16:54,459
will be challenges with extremely high

3481
02:16:54,459 --> 02:16:56,500
of course extremely high like your

3482
02:16:56,500 --> 02:16:58,090
entire life or something trying to put

3483
02:16:58,090 --> 02:16:59,830
that into a vector and compare you to

3484
02:16:59,830 --> 02:17:01,870
somewhere someone else that can be a

3485
02:17:01,870 --> 02:17:03,910
problem that and it's a challenge and so

3486
02:17:03,910 --> 02:17:05,650
what we really would like to do is deal

3487
02:17:05,650 --> 02:17:07,180
with which is a general reinforcement

3488
02:17:07,180 --> 02:17:08,230
learning problem I think which is

3489
02:17:08,230 --> 02:17:10,600
learning good representations of the

3490
02:17:10,600 --> 02:17:12,790
space ultimately like to learn the

3491
02:17:12,790 --> 02:17:14,049
behavior characterization so that we

3492
02:17:14,049 --> 02:17:16,629
extract the salient aspects of it even

3493
02:17:16,629 --> 02:17:18,309
as we're searching through it which i

3494
02:17:18,309 --> 02:17:19,510
think is ultimately what's really

3495
02:17:19,510 --> 02:17:21,459
interesting and then we could search and

3496
02:17:21,459 --> 02:17:23,440
continually refine our understanding of

3497
02:17:23,440 --> 02:17:25,150
what that space is maybe Jeff has

3498
02:17:25,150 --> 02:17:27,580
something to add I just think it's one

3499
02:17:27,580 --> 02:17:31,030
of the most kind of profound and fun

3500
02:17:31,030 --> 02:17:32,709
insights of all of machine learning is

3501
02:17:32,709 --> 02:17:35,410
that the set of interesting things is

3502
02:17:35,410 --> 02:17:37,600
afar very like a small low dimensional

3503
02:17:37,600 --> 02:17:39,190
manifold within the higher dimensional

3504
02:17:39,190 --> 02:17:41,020
space and you know when we're trying to

3505
02:17:41,020 --> 02:17:42,910
generate architectures and learning

3506
02:17:42,910 --> 02:17:45,520
algorithms and interesting environments

3507
02:17:45,520 --> 02:17:47,500
if we can figure out how to recognize

3508
02:17:47,500 --> 02:17:48,879
what's interesting and we'll traverse

3509
02:17:48,879 --> 02:17:50,830
and search that space then we don't have

3510
02:17:50,830 --> 02:17:51,790
this problem this curse of

3511
02:17:51,790 --> 02:17:52,600
dimensionality

3512
02:17:52,600 --> 02:17:54,070
of like you know the space of all

3513
02:17:54,070 --> 02:17:56,379
possible pixels or whatever it is and so

3514
02:17:56,379 --> 02:17:57,610
I think that's kind of one of the grand

3515
02:17:57,610 --> 02:17:59,110
you know one of the major challenges in

3516
02:17:59,110 --> 02:18:00,520
this field is how do you define what's

3517
02:18:00,520 --> 02:18:02,559
interesting and so you spend time and

3518
02:18:02,559 --> 02:18:04,480
computation exploring what's interesting

3519
02:18:04,480 --> 02:18:07,240
as opposed to what's uninteresting thank

3520
02:18:07,240 --> 02:18:13,600
you I think wondering is the open-ended

3521
02:18:13,600 --> 02:18:17,350
concept fucking's do ya know free lunch

3522
02:18:17,350 --> 02:18:26,440
theorem okay yes so is open endedness a

3523
02:18:26,440 --> 02:18:31,510
violation of no free lunch and I think

3524
02:18:31,510 --> 02:18:33,610
open endedness is orthogonal to no free

3525
02:18:33,610 --> 02:18:35,950
lunch because no free lunch is about the

3526
02:18:35,950 --> 02:18:39,820
idea that there is no for any if we have

3527
02:18:39,820 --> 02:18:40,980
look at the space of all possible

3528
02:18:40,980 --> 02:18:43,209
optimization problems and there is no

3529
02:18:43,209 --> 02:18:45,100
single algorithm which is the best

3530
02:18:45,100 --> 02:18:47,139
suited for all of them but what's

3531
02:18:47,139 --> 02:18:48,700
interesting here is that an open

3532
02:18:48,700 --> 02:18:51,260
endedness were not actual

3533
02:18:51,260 --> 02:18:53,388
talking about an optimization problem

3534
02:18:53,388 --> 02:18:55,429
because there's not a particular problem

3535
02:18:55,429 --> 02:18:56,840
that we're trying to solve rather we're

3536
02:18:56,840 --> 02:18:58,398
trying we're inventing problems and

3537
02:18:58,398 --> 02:18:59,990
solving them at all times

3538
02:18:59,990 --> 02:19:01,549
and there's not anything specifically

3539
02:19:01,549 --> 02:19:05,660
that we're trying to solve so to to try

3540
02:19:05,660 --> 02:19:08,689
to contort no free lunch to actually

3541
02:19:08,689 --> 02:19:11,420
analyze that kind of a structure it

3542
02:19:11,420 --> 02:19:13,398
would be like a whole step beyond the

3543
02:19:13,398 --> 02:19:15,468
current framework for no free lunch like

3544
02:19:15,468 --> 02:19:17,330
you might say well what is what does it

3545
02:19:17,330 --> 02:19:18,859
mean to be successful when you're

3546
02:19:18,859 --> 02:19:20,718
open-ended I mean have to start there

3547
02:19:20,718 --> 02:19:22,818
and then given this criteria for success

3548
02:19:22,818 --> 02:19:24,228
is there such a thing as a best

3549
02:19:24,228 --> 02:19:26,029
open-ended algorithm but that's a

3550
02:19:26,029 --> 02:19:27,410
different question from what no free

3551
02:19:27,410 --> 02:19:28,700
lunch is addressing right now which is

3552
02:19:28,700 --> 02:19:30,648
given a problem what is the best

3553
02:19:30,648 --> 02:19:33,080
algorithm for finding a solution in fact

3554
02:19:33,080 --> 02:19:35,299
I think this is anecdotal but it's

3555
02:19:35,299 --> 02:19:37,398
interesting so this is this I could be

3556
02:19:37,398 --> 02:19:38,478
distorting the slope because it's my

3557
02:19:38,478 --> 02:19:40,580
understanding of a story second hand but

3558
02:19:40,580 --> 02:19:42,679
I think that when when no free lunch

3559
02:19:42,679 --> 02:19:44,929
first came out and this is I don't know

3560
02:19:44,929 --> 02:19:47,260
if this is widely known that actually

3561
02:19:47,260 --> 02:19:50,510
some people who were anti evolution like

3562
02:19:50,510 --> 02:19:52,250
creation is actually latched on to no

3563
02:19:52,250 --> 02:19:54,350
free lunch and said it made a similar

3564
02:19:54,350 --> 02:19:56,270
question like well does doesn't this

3565
02:19:56,270 --> 02:19:57,859
help us to see that this couldn't have

3566
02:19:57,859 --> 02:20:00,740
actually happened and the that was

3567
02:20:00,740 --> 02:20:03,260
interesting because David Wolper who

3568
02:20:03,260 --> 02:20:05,330
actually was one of the inventors of the

3569
02:20:05,330 --> 02:20:08,630
know free lunch theorem said actually

3570
02:20:08,630 --> 02:20:10,760
had to react to this and said that

3571
02:20:10,760 --> 02:20:12,319
actually there are co-evolutionary

3572
02:20:12,319 --> 02:20:13,819
exceptions to no free lunch if you

3573
02:20:13,819 --> 02:20:16,430
understand which can explain why certain

3574
02:20:16,430 --> 02:20:18,560
types of self self playing systems like

3575
02:20:18,560 --> 02:20:21,109
evolution basically shouldn't be judged

3576
02:20:21,109 --> 02:20:23,330
in the context of the lens of the no

3577
02:20:23,330 --> 02:20:25,100
free lunch algorithm so even though the

3578
02:20:25,100 --> 02:20:26,600
inventor of no free lunch had to

3579
02:20:26,600 --> 02:20:28,069
confront the question like this and sort

3580
02:20:28,069 --> 02:20:29,779
of said no no that's the wrong way of

3581
02:20:29,779 --> 02:20:31,040
thinking about no free lunch it should

3582
02:20:31,040 --> 02:20:34,450
not be applied in that context

3583
02:20:38,090 --> 02:20:41,000
hi my name is Nathan thank you for this

3584
02:20:41,000 --> 02:20:43,609
wonderful talk and while trying to

3585
02:20:43,609 --> 02:20:45,560
capture certain aspects or different

3586
02:20:45,560 --> 02:20:47,810
concepts like gold switching or

3587
02:20:47,810 --> 02:20:50,359
open-endedness a population diversity

3588
02:20:50,359 --> 02:20:53,300
and the generation of new environments

3589
02:20:53,300 --> 02:20:55,939
it kind of got me thinking about human

3590
02:20:55,939 --> 02:20:59,329
migration where the main intrinsic

3591
02:20:59,329 --> 02:21:01,550
objective of a group of humans was to

3592
02:21:01,550 --> 02:21:03,290
find sustenance and resources in a

3593
02:21:03,290 --> 02:21:06,050
certain location and thrive there but as

3594
02:21:06,050 --> 02:21:08,449
an extrinsic behavior it was also about

3595
02:21:08,449 --> 02:21:11,390
exploring new areas where they'll have

3596
02:21:11,390 --> 02:21:13,340
more resources or going to a different

3597
02:21:13,340 --> 02:21:14,960
location due to constraints like weather

3598
02:21:14,960 --> 02:21:18,739
so I was wondering if population

3599
02:21:18,739 --> 02:21:21,890
dynamics can also play in as a factor in

3600
02:21:21,890 --> 02:21:24,560
the training process instead of just

3601
02:21:24,560 --> 02:21:27,729
having a comparison between

3602
02:21:27,729 --> 02:21:30,229
objective based training and novelty

3603
02:21:30,229 --> 02:21:31,699
based training maybe we can have

3604
02:21:31,699 --> 02:21:33,350
something like a group of multiple

3605
02:21:33,350 --> 02:21:35,960
agents where intrinsically they're all

3606
02:21:35,960 --> 02:21:38,479
objective based but as a group or as a

3607
02:21:38,479 --> 02:21:40,819
collective you can also have coevolution

3608
02:21:40,819 --> 02:21:43,489
our adversarial groups that are

3609
02:21:43,489 --> 02:21:46,250
exploring in the same state space do you

3610
02:21:46,250 --> 02:21:49,010
think that would have more implications

3611
02:21:49,010 --> 02:21:52,069
towards AGI or would there be some sort

3612
02:21:52,069 --> 02:21:55,790
of a trade off yeah so I think that is a

3613
02:21:55,790 --> 02:21:56,989
fascinating question I think that

3614
02:21:56,989 --> 02:21:58,699
ultimately if we want to produce agents

3615
02:21:58,699 --> 02:22:00,949
that have general AI they're gonna have

3616
02:22:00,949 --> 02:22:02,270
to interact with other agents because

3617
02:22:02,270 --> 02:22:03,680
part of the problem is communicating

3618
02:22:03,680 --> 02:22:06,470
with other agents and learning how to be

3619
02:22:06,470 --> 02:22:08,149
cooperative and you know resist

3620
02:22:08,149 --> 02:22:09,829
adversaries and this and that and that's

3621
02:22:09,829 --> 02:22:12,489
part of the challenge of course and so

3622
02:22:12,489 --> 02:22:14,750
inside of these generated environments

3623
02:22:14,750 --> 02:22:16,520
you need other agents and there's many

3624
02:22:16,520 --> 02:22:17,810
different ways to do that and I could

3625
02:22:17,810 --> 02:22:19,609
speculate them and I have I won't go

3626
02:22:19,609 --> 02:22:21,140
into that here it's suffice it to say

3627
02:22:21,140 --> 02:22:22,670
that this is a kind of a wide open area

3628
02:22:22,670 --> 02:22:25,279
for creative opportunity for the people

3629
02:22:25,279 --> 02:22:26,989
in this room in this community to think

3630
02:22:26,989 --> 02:22:28,670
about what's the best way to get the

3631
02:22:28,670 --> 02:22:30,680
dynamics that kind of created these

3632
02:22:30,680 --> 02:22:33,710
co-evolutionary opportunities in history

3633
02:22:33,710 --> 02:22:35,869
and in nature to do healthy things for

3634
02:22:35,869 --> 02:22:37,520
us in our algorithms sometimes you know

3635
02:22:37,520 --> 02:22:38,750
some people are on to believe that you

3636
02:22:38,750 --> 02:22:41,000
need some of these effects and some

3637
02:22:41,000 --> 02:22:42,020
people might think that you could get

3638
02:22:42,020 --> 02:22:43,790
away without them and I don't even

3639
02:22:43,790 --> 02:22:44,930
really think I want to take a position

3640
02:22:44,930 --> 02:22:46,489
because I think we're better off as a

3641
02:22:46,489 --> 02:22:48,229
community when we all kind of go and

3642
02:22:48,229 --> 02:22:49,939
pursue our own beliefs for how to

3643
02:22:49,939 --> 02:22:50,840
accomplish

3644
02:22:50,840 --> 02:22:54,830
and just one other quick thing to add is

3645
02:22:54,830 --> 02:22:56,960
some people have said which is sort of

3646
02:22:56,960 --> 02:22:58,850
interesting to think about that the more

3647
02:22:58,850 --> 02:23:00,920
objectives you have the less you have an

3648
02:23:00,920 --> 02:23:02,660
objective so you can kind of think about

3649
02:23:02,660 --> 02:23:03,770
that like if you have millions and

3650
02:23:03,770 --> 02:23:05,090
millions of objectives you imagine

3651
02:23:05,090 --> 02:23:06,050
millions of people with different

3652
02:23:06,050 --> 02:23:08,180
objectives the whole system in aggregate

3653
02:23:08,180 --> 02:23:13,390
starts to be less objective okay

3654
02:23:13,390 --> 02:23:15,740
Riya has asked us to take the rest of

3655
02:23:15,740 --> 02:23:17,450
the questions offline so we will be up

3656
02:23:17,450 --> 02:23:18,710
here and I'm happy to answer any

3657
02:23:18,710 --> 02:23:20,660
questions that you have I in particular

3658
02:23:20,660 --> 02:23:23,450
want to again think the ICML we're going

3659
02:23:23,450 --> 02:23:25,189
to including Riya for the one deliver an

3660
02:23:25,189 --> 02:23:26,689
invitation and for all of you for

3661
02:23:26,689 --> 02:23:27,859
sticking around and interesting think

3662
02:23:27,859 --> 02:23:29,210
it's been a lovely and interesting

3663
02:23:29,210 --> 02:23:31,450
conversation

3664
02:23:36,840 --> 02:23:38,899
you

